0.5 cpu, 128 ram, 1 iterations, object type, object 1: 0.063ms
0.5 cpu, 128 ram, 1 iterations, array_ type, array_ 1: 0.113ms
0.5 cpu, 128 ram, 1 iterations, map___ type, map___ 1: 0.059ms
1.0 cpu, 128 ram, 1 iterations, object type, object 1: 0.061ms
1.0 cpu, 128 ram, 1 iterations, array_ type, array_ 1: 0.065ms
1.0 cpu, 128 ram, 1 iterations, map___ type, map___ 1: 0.058ms
2.0 cpu, 128 ram, 1 iterations, object type, object 1: 0.083ms
2.0 cpu, 128 ram, 1 iterations, array_ type, array_ 1: 0.065ms
2.0 cpu, 128 ram, 1 iterations, map___ type, map___ 1: 0.073ms
3.0 cpu, 128 ram, 1 iterations, object type, object 1: 0.063ms
3.0 cpu, 128 ram, 1 iterations, array_ type, array_ 1: 0.063ms
3.0 cpu, 128 ram, 1 iterations, map___ type, map___ 1: 0.064ms
4.0 cpu, 128 ram, 1 iterations, object type, object 1: 0.059ms
4.0 cpu, 128 ram, 1 iterations, array_ type, array_ 1: 0.064ms
4.0 cpu, 128 ram, 1 iterations, map___ type, map___ 1: 0.059ms
0.5 cpu, 256 ram, 1 iterations, object type, object 1: 0.067ms
0.5 cpu, 256 ram, 1 iterations, array_ type, array_ 1: 0.06ms
0.5 cpu, 256 ram, 1 iterations, map___ type, map___ 1: 0.056ms
1.0 cpu, 256 ram, 1 iterations, object type, object 1: 0.059ms
1.0 cpu, 256 ram, 1 iterations, array_ type, array_ 1: 0.063ms
1.0 cpu, 256 ram, 1 iterations, map___ type, map___ 1: 0.061ms
2.0 cpu, 256 ram, 1 iterations, object type, object 1: 0.067ms
2.0 cpu, 256 ram, 1 iterations, array_ type, array_ 1: 0.058ms
2.0 cpu, 256 ram, 1 iterations, map___ type, map___ 1: 0.06ms
3.0 cpu, 256 ram, 1 iterations, object type, object 1: 0.079ms
3.0 cpu, 256 ram, 1 iterations, array_ type, array_ 1: 0.066ms
3.0 cpu, 256 ram, 1 iterations, map___ type, map___ 1: 0.07ms
4.0 cpu, 256 ram, 1 iterations, object type, object 1: 0.058ms
4.0 cpu, 256 ram, 1 iterations, array_ type, array_ 1: 0.065ms
4.0 cpu, 256 ram, 1 iterations, map___ type, map___ 1: 0.06ms
0.5 cpu, 512 ram, 1 iterations, object type, object 1: 0.072ms
0.5 cpu, 512 ram, 1 iterations, array_ type, array_ 1: 0.058ms
0.5 cpu, 512 ram, 1 iterations, map___ type, map___ 1: 0.068ms
1.0 cpu, 512 ram, 1 iterations, object type, object 1: 0.063ms
1.0 cpu, 512 ram, 1 iterations, array_ type, array_ 1: 0.07ms
1.0 cpu, 512 ram, 1 iterations, map___ type, map___ 1: 0.058ms
2.0 cpu, 512 ram, 1 iterations, object type, object 1: 0.056ms
2.0 cpu, 512 ram, 1 iterations, array_ type, array_ 1: 0.065ms
2.0 cpu, 512 ram, 1 iterations, map___ type, map___ 1: 0.057ms
3.0 cpu, 512 ram, 1 iterations, object type, object 1: 0.059ms
3.0 cpu, 512 ram, 1 iterations, array_ type, array_ 1: 0.06ms
3.0 cpu, 512 ram, 1 iterations, map___ type, map___ 1: 0.07ms
4.0 cpu, 512 ram, 1 iterations, object type, object 1: 0.072ms
4.0 cpu, 512 ram, 1 iterations, array_ type, array_ 1: 0.061ms
4.0 cpu, 512 ram, 1 iterations, map___ type, map___ 1: 0.064ms
0.5 cpu, 1024 ram, 1 iterations, object type, object 1: 0.064ms
0.5 cpu, 1024 ram, 1 iterations, array_ type, array_ 1: 0.059ms
0.5 cpu, 1024 ram, 1 iterations, map___ type, map___ 1: 0.068ms
1.0 cpu, 1024 ram, 1 iterations, object type, object 1: 0.064ms
1.0 cpu, 1024 ram, 1 iterations, array_ type, array_ 1: 0.072ms
1.0 cpu, 1024 ram, 1 iterations, map___ type, map___ 1: 0.06ms
2.0 cpu, 1024 ram, 1 iterations, object type, object 1: 0.06ms
2.0 cpu, 1024 ram, 1 iterations, array_ type, array_ 1: 0.062ms
2.0 cpu, 1024 ram, 1 iterations, map___ type, map___ 1: 0.056ms
3.0 cpu, 1024 ram, 1 iterations, object type, object 1: 0.06ms
3.0 cpu, 1024 ram, 1 iterations, array_ type, array_ 1: 0.06ms
3.0 cpu, 1024 ram, 1 iterations, map___ type, map___ 1: 0.062ms
4.0 cpu, 1024 ram, 1 iterations, object type, object 1: 0.063ms
4.0 cpu, 1024 ram, 1 iterations, array_ type, array_ 1: 0.066ms
4.0 cpu, 1024 ram, 1 iterations, map___ type, map___ 1: 0.059ms
0.5 cpu, 2048 ram, 1 iterations, object type, object 1: 0.063ms
0.5 cpu, 2048 ram, 1 iterations, array_ type, array_ 1: 0.066ms
0.5 cpu, 2048 ram, 1 iterations, map___ type, map___ 1: 0.066ms
1.0 cpu, 2048 ram, 1 iterations, object type, object 1: 0.06ms
1.0 cpu, 2048 ram, 1 iterations, array_ type, array_ 1: 0.062ms
1.0 cpu, 2048 ram, 1 iterations, map___ type, map___ 1: 0.067ms
2.0 cpu, 2048 ram, 1 iterations, object type, object 1: 0.061ms
2.0 cpu, 2048 ram, 1 iterations, array_ type, array_ 1: 0.056ms
2.0 cpu, 2048 ram, 1 iterations, map___ type, map___ 1: 0.063ms
3.0 cpu, 2048 ram, 1 iterations, object type, object 1: 0.068ms
3.0 cpu, 2048 ram, 1 iterations, array_ type, array_ 1: 0.061ms
3.0 cpu, 2048 ram, 1 iterations, map___ type, map___ 1: 0.054ms
4.0 cpu, 2048 ram, 1 iterations, object type, object 1: 0.063ms
4.0 cpu, 2048 ram, 1 iterations, array_ type, array_ 1: 0.065ms
4.0 cpu, 2048 ram, 1 iterations, map___ type, map___ 1: 0.063ms
0.5 cpu, 4096 ram, 1 iterations, object type, object 1: 0.073ms
0.5 cpu, 4096 ram, 1 iterations, array_ type, array_ 1: 0.064ms
0.5 cpu, 4096 ram, 1 iterations, map___ type, map___ 1: 0.055ms
1.0 cpu, 4096 ram, 1 iterations, object type, object 1: 0.072ms
1.0 cpu, 4096 ram, 1 iterations, array_ type, array_ 1: 0.07ms
1.0 cpu, 4096 ram, 1 iterations, map___ type, map___ 1: 0.056ms
2.0 cpu, 4096 ram, 1 iterations, object type, object 1: 0.06ms
2.0 cpu, 4096 ram, 1 iterations, array_ type, array_ 1: 0.074ms
2.0 cpu, 4096 ram, 1 iterations, map___ type, map___ 1: 0.057ms
3.0 cpu, 4096 ram, 1 iterations, object type, object 1: 0.056ms
3.0 cpu, 4096 ram, 1 iterations, array_ type, array_ 1: 0.077ms
3.0 cpu, 4096 ram, 1 iterations, map___ type, map___ 1: 0.054ms
4.0 cpu, 4096 ram, 1 iterations, object type, object 1: 0.064ms
4.0 cpu, 4096 ram, 1 iterations, array_ type, array_ 1: 0.057ms
4.0 cpu, 4096 ram, 1 iterations, map___ type, map___ 1: 0.061ms
0.5 cpu, 8192 ram, 1 iterations, object type, object 1: 0.069ms
0.5 cpu, 8192 ram, 1 iterations, array_ type, array_ 1: 0.062ms
0.5 cpu, 8192 ram, 1 iterations, map___ type, map___ 1: 0.06ms
1.0 cpu, 8192 ram, 1 iterations, object type, object 1: 0.066ms
1.0 cpu, 8192 ram, 1 iterations, array_ type, array_ 1: 0.068ms
1.0 cpu, 8192 ram, 1 iterations, map___ type, map___ 1: 0.059ms
2.0 cpu, 8192 ram, 1 iterations, object type, object 1: 0.057ms
2.0 cpu, 8192 ram, 1 iterations, array_ type, array_ 1: 0.063ms
2.0 cpu, 8192 ram, 1 iterations, map___ type, map___ 1: 0.061ms
3.0 cpu, 8192 ram, 1 iterations, object type, object 1: 0.063ms
3.0 cpu, 8192 ram, 1 iterations, array_ type, array_ 1: 0.075ms
3.0 cpu, 8192 ram, 1 iterations, map___ type, map___ 1: 0.064ms
4.0 cpu, 8192 ram, 1 iterations, object type, object 1: 0.06ms
4.0 cpu, 8192 ram, 1 iterations, array_ type, array_ 1: 0.057ms
4.0 cpu, 8192 ram, 1 iterations, map___ type, map___ 1: 0.068ms
0.5 cpu, 16384 ram, 1 iterations, object type, object 1: 0.058ms
0.5 cpu, 16384 ram, 1 iterations, array_ type, array_ 1: 0.057ms
0.5 cpu, 16384 ram, 1 iterations, map___ type, map___ 1: 0.059ms
1.0 cpu, 16384 ram, 1 iterations, object type, object 1: 0.059ms
1.0 cpu, 16384 ram, 1 iterations, array_ type, array_ 1: 0.067ms
1.0 cpu, 16384 ram, 1 iterations, map___ type, map___ 1: 0.06ms
2.0 cpu, 16384 ram, 1 iterations, object type, object 1: 0.067ms
2.0 cpu, 16384 ram, 1 iterations, array_ type, array_ 1: 0.064ms
2.0 cpu, 16384 ram, 1 iterations, map___ type, map___ 1: 0.057ms
3.0 cpu, 16384 ram, 1 iterations, object type, object 1: 0.06ms
3.0 cpu, 16384 ram, 1 iterations, array_ type, array_ 1: 0.062ms
3.0 cpu, 16384 ram, 1 iterations, map___ type, map___ 1: 0.075ms
4.0 cpu, 16384 ram, 1 iterations, object type, object 1: 0.071ms
4.0 cpu, 16384 ram, 1 iterations, array_ type, array_ 1: 0.056ms
4.0 cpu, 16384 ram, 1 iterations, map___ type, map___ 1: 0.061ms
0.5 cpu, 128 ram, 2 iterations, object type, object 2: 0.057ms
0.5 cpu, 128 ram, 2 iterations, array_ type, array_ 2: 0.067ms
0.5 cpu, 128 ram, 2 iterations, map___ type, map___ 2: 0.058ms
1.0 cpu, 128 ram, 2 iterations, object type, object 2: 0.066ms
1.0 cpu, 128 ram, 2 iterations, array_ type, array_ 2: 0.064ms
1.0 cpu, 128 ram, 2 iterations, map___ type, map___ 2: 0.074ms
2.0 cpu, 128 ram, 2 iterations, object type, object 2: 0.062ms
2.0 cpu, 128 ram, 2 iterations, array_ type, array_ 2: 0.061ms
2.0 cpu, 128 ram, 2 iterations, map___ type, map___ 2: 0.063ms
3.0 cpu, 128 ram, 2 iterations, object type, object 2: 0.068ms
3.0 cpu, 128 ram, 2 iterations, array_ type, array_ 2: 0.057ms
3.0 cpu, 128 ram, 2 iterations, map___ type, map___ 2: 0.06ms
4.0 cpu, 128 ram, 2 iterations, object type, object 2: 0.062ms
4.0 cpu, 128 ram, 2 iterations, array_ type, array_ 2: 0.059ms
4.0 cpu, 128 ram, 2 iterations, map___ type, map___ 2: 0.062ms
0.5 cpu, 256 ram, 2 iterations, object type, object 2: 0.078ms
0.5 cpu, 256 ram, 2 iterations, array_ type, array_ 2: 0.067ms
0.5 cpu, 256 ram, 2 iterations, map___ type, map___ 2: 0.063ms
1.0 cpu, 256 ram, 2 iterations, object type, object 2: 0.062ms
1.0 cpu, 256 ram, 2 iterations, array_ type, array_ 2: 0.063ms
1.0 cpu, 256 ram, 2 iterations, map___ type, map___ 2: 0.066ms
2.0 cpu, 256 ram, 2 iterations, object type, object 2: 0.065ms
2.0 cpu, 256 ram, 2 iterations, array_ type, array_ 2: 0.062ms
2.0 cpu, 256 ram, 2 iterations, map___ type, map___ 2: 0.061ms
3.0 cpu, 256 ram, 2 iterations, object type, object 2: 0.061ms
3.0 cpu, 256 ram, 2 iterations, array_ type, array_ 2: 0.064ms
3.0 cpu, 256 ram, 2 iterations, map___ type, map___ 2: 0.061ms
4.0 cpu, 256 ram, 2 iterations, object type, object 2: 0.063ms
4.0 cpu, 256 ram, 2 iterations, array_ type, array_ 2: 0.066ms
4.0 cpu, 256 ram, 2 iterations, map___ type, map___ 2: 0.059ms
0.5 cpu, 512 ram, 2 iterations, object type, object 2: 0.067ms
0.5 cpu, 512 ram, 2 iterations, array_ type, array_ 2: 0.059ms
0.5 cpu, 512 ram, 2 iterations, map___ type, map___ 2: 0.058ms
1.0 cpu, 512 ram, 2 iterations, object type, object 2: 0.064ms
1.0 cpu, 512 ram, 2 iterations, array_ type, array_ 2: 0.06ms
1.0 cpu, 512 ram, 2 iterations, map___ type, map___ 2: 0.069ms
2.0 cpu, 512 ram, 2 iterations, object type, object 2: 0.079ms
2.0 cpu, 512 ram, 2 iterations, array_ type, array_ 2: 0.058ms
2.0 cpu, 512 ram, 2 iterations, map___ type, map___ 2: 0.06ms
3.0 cpu, 512 ram, 2 iterations, object type, object 2: 0.06ms
3.0 cpu, 512 ram, 2 iterations, array_ type, array_ 2: 0.064ms
3.0 cpu, 512 ram, 2 iterations, map___ type, map___ 2: 0.059ms
4.0 cpu, 512 ram, 2 iterations, object type, object 2: 0.065ms
4.0 cpu, 512 ram, 2 iterations, array_ type, array_ 2: 0.06ms
4.0 cpu, 512 ram, 2 iterations, map___ type, map___ 2: 0.06ms
0.5 cpu, 1024 ram, 2 iterations, object type, object 2: 0.093ms
0.5 cpu, 1024 ram, 2 iterations, array_ type, array_ 2: 0.081ms
0.5 cpu, 1024 ram, 2 iterations, map___ type, map___ 2: 0.057ms
1.0 cpu, 1024 ram, 2 iterations, object type, object 2: 0.084ms
1.0 cpu, 1024 ram, 2 iterations, array_ type, array_ 2: 0.06ms
1.0 cpu, 1024 ram, 2 iterations, map___ type, map___ 2: 0.061ms
2.0 cpu, 1024 ram, 2 iterations, object type, object 2: 0.059ms
2.0 cpu, 1024 ram, 2 iterations, array_ type, array_ 2: 0.059ms
2.0 cpu, 1024 ram, 2 iterations, map___ type, map___ 2: 0.063ms
3.0 cpu, 1024 ram, 2 iterations, object type, object 2: 0.058ms
3.0 cpu, 1024 ram, 2 iterations, array_ type, array_ 2: 0.064ms
3.0 cpu, 1024 ram, 2 iterations, map___ type, map___ 2: 0.066ms
4.0 cpu, 1024 ram, 2 iterations, object type, object 2: 0.081ms
4.0 cpu, 1024 ram, 2 iterations, array_ type, array_ 2: 0.065ms
4.0 cpu, 1024 ram, 2 iterations, map___ type, map___ 2: 0.065ms
0.5 cpu, 2048 ram, 2 iterations, object type, object 2: 0.059ms
0.5 cpu, 2048 ram, 2 iterations, array_ type, array_ 2: 0.067ms
0.5 cpu, 2048 ram, 2 iterations, map___ type, map___ 2: 0.059ms
1.0 cpu, 2048 ram, 2 iterations, object type, object 2: 0.089ms
1.0 cpu, 2048 ram, 2 iterations, array_ type, array_ 2: 0.066ms
1.0 cpu, 2048 ram, 2 iterations, map___ type, map___ 2: 0.071ms
2.0 cpu, 2048 ram, 2 iterations, object type, object 2: 0.062ms
2.0 cpu, 2048 ram, 2 iterations, array_ type, array_ 2: 0.097ms
2.0 cpu, 2048 ram, 2 iterations, map___ type, map___ 2: 0.06ms
3.0 cpu, 2048 ram, 2 iterations, object type, object 2: 0.07ms
3.0 cpu, 2048 ram, 2 iterations, array_ type, array_ 2: 0.066ms
3.0 cpu, 2048 ram, 2 iterations, map___ type, map___ 2: 0.061ms
4.0 cpu, 2048 ram, 2 iterations, object type, object 2: 0.07ms
4.0 cpu, 2048 ram, 2 iterations, array_ type, array_ 2: 0.062ms
4.0 cpu, 2048 ram, 2 iterations, map___ type, map___ 2: 0.07ms
0.5 cpu, 4096 ram, 2 iterations, object type, object 2: 0.066ms
0.5 cpu, 4096 ram, 2 iterations, array_ type, array_ 2: 0.07ms
0.5 cpu, 4096 ram, 2 iterations, map___ type, map___ 2: 0.06ms
1.0 cpu, 4096 ram, 2 iterations, object type, object 2: 0.062ms
1.0 cpu, 4096 ram, 2 iterations, array_ type, array_ 2: 0.056ms
1.0 cpu, 4096 ram, 2 iterations, map___ type, map___ 2: 0.061ms
2.0 cpu, 4096 ram, 2 iterations, object type, object 2: 0.066ms
2.0 cpu, 4096 ram, 2 iterations, array_ type, array_ 2: 0.071ms
2.0 cpu, 4096 ram, 2 iterations, map___ type, map___ 2: 0.058ms
3.0 cpu, 4096 ram, 2 iterations, object type, object 2: 0.062ms
3.0 cpu, 4096 ram, 2 iterations, array_ type, array_ 2: 0.064ms
3.0 cpu, 4096 ram, 2 iterations, map___ type, map___ 2: 0.065ms
4.0 cpu, 4096 ram, 2 iterations, object type, object 2: 0.059ms
4.0 cpu, 4096 ram, 2 iterations, array_ type, array_ 2: 0.076ms
4.0 cpu, 4096 ram, 2 iterations, map___ type, map___ 2: 0.057ms
0.5 cpu, 8192 ram, 2 iterations, object type, object 2: 0.059ms
0.5 cpu, 8192 ram, 2 iterations, array_ type, array_ 2: 0.067ms
0.5 cpu, 8192 ram, 2 iterations, map___ type, map___ 2: 0.056ms
1.0 cpu, 8192 ram, 2 iterations, object type, object 2: 0.058ms
1.0 cpu, 8192 ram, 2 iterations, array_ type, array_ 2: 0.059ms
1.0 cpu, 8192 ram, 2 iterations, map___ type, map___ 2: 0.062ms
2.0 cpu, 8192 ram, 2 iterations, object type, object 2: 0.067ms
2.0 cpu, 8192 ram, 2 iterations, array_ type, array_ 2: 0.059ms
2.0 cpu, 8192 ram, 2 iterations, map___ type, map___ 2: 0.061ms
3.0 cpu, 8192 ram, 2 iterations, object type, object 2: 0.059ms
3.0 cpu, 8192 ram, 2 iterations, array_ type, array_ 2: 0.06ms
3.0 cpu, 8192 ram, 2 iterations, map___ type, map___ 2: 0.07ms
4.0 cpu, 8192 ram, 2 iterations, object type, object 2: 0.062ms
4.0 cpu, 8192 ram, 2 iterations, array_ type, array_ 2: 0.078ms
4.0 cpu, 8192 ram, 2 iterations, map___ type, map___ 2: 0.063ms
0.5 cpu, 16384 ram, 2 iterations, object type, object 2: 0.06ms
0.5 cpu, 16384 ram, 2 iterations, array_ type, array_ 2: 0.056ms
0.5 cpu, 16384 ram, 2 iterations, map___ type, map___ 2: 0.063ms
1.0 cpu, 16384 ram, 2 iterations, object type, object 2: 0.064ms
1.0 cpu, 16384 ram, 2 iterations, array_ type, array_ 2: 0.062ms
1.0 cpu, 16384 ram, 2 iterations, map___ type, map___ 2: 0.058ms
2.0 cpu, 16384 ram, 2 iterations, object type, object 2: 0.064ms
2.0 cpu, 16384 ram, 2 iterations, array_ type, array_ 2: 0.057ms
2.0 cpu, 16384 ram, 2 iterations, map___ type, map___ 2: 0.059ms
3.0 cpu, 16384 ram, 2 iterations, object type, object 2: 0.069ms
3.0 cpu, 16384 ram, 2 iterations, array_ type, array_ 2: 0.061ms
3.0 cpu, 16384 ram, 2 iterations, map___ type, map___ 2: 0.061ms
4.0 cpu, 16384 ram, 2 iterations, object type, object 2: 0.062ms
4.0 cpu, 16384 ram, 2 iterations, array_ type, array_ 2: 0.059ms
4.0 cpu, 16384 ram, 2 iterations, map___ type, map___ 2: 0.064ms
0.5 cpu, 128 ram, 3 iterations, object type, object 3: 0.063ms
0.5 cpu, 128 ram, 3 iterations, array_ type, array_ 3: 0.061ms
0.5 cpu, 128 ram, 3 iterations, map___ type, map___ 3: 0.06ms
1.0 cpu, 128 ram, 3 iterations, object type, object 3: 0.058ms
1.0 cpu, 128 ram, 3 iterations, array_ type, array_ 3: 0.075ms
1.0 cpu, 128 ram, 3 iterations, map___ type, map___ 3: 0.065ms
2.0 cpu, 128 ram, 3 iterations, object type, object 3: 0.068ms
2.0 cpu, 128 ram, 3 iterations, array_ type, array_ 3: 0.056ms
2.0 cpu, 128 ram, 3 iterations, map___ type, map___ 3: 0.058ms
3.0 cpu, 128 ram, 3 iterations, object type, object 3: 0.072ms
3.0 cpu, 128 ram, 3 iterations, array_ type, array_ 3: 0.06ms
3.0 cpu, 128 ram, 3 iterations, map___ type, map___ 3: 0.063ms
4.0 cpu, 128 ram, 3 iterations, object type, object 3: 0.064ms
4.0 cpu, 128 ram, 3 iterations, array_ type, array_ 3: 0.064ms
4.0 cpu, 128 ram, 3 iterations, map___ type, map___ 3: 0.064ms
0.5 cpu, 256 ram, 3 iterations, object type, object 3: 0.065ms
0.5 cpu, 256 ram, 3 iterations, array_ type, array_ 3: 0.064ms
0.5 cpu, 256 ram, 3 iterations, map___ type, map___ 3: 0.058ms
1.0 cpu, 256 ram, 3 iterations, object type, object 3: 0.062ms
1.0 cpu, 256 ram, 3 iterations, array_ type, array_ 3: 0.064ms
1.0 cpu, 256 ram, 3 iterations, map___ type, map___ 3: 0.059ms
2.0 cpu, 256 ram, 3 iterations, object type, object 3: 0.06ms
2.0 cpu, 256 ram, 3 iterations, array_ type, array_ 3: 0.058ms
2.0 cpu, 256 ram, 3 iterations, map___ type, map___ 3: 0.057ms
3.0 cpu, 256 ram, 3 iterations, object type, object 3: 0.06ms
3.0 cpu, 256 ram, 3 iterations, array_ type, array_ 3: 0.056ms
3.0 cpu, 256 ram, 3 iterations, map___ type, map___ 3: 0.062ms
4.0 cpu, 256 ram, 3 iterations, object type, object 3: 0.063ms
4.0 cpu, 256 ram, 3 iterations, array_ type, array_ 3: 0.066ms
4.0 cpu, 256 ram, 3 iterations, map___ type, map___ 3: 0.061ms
0.5 cpu, 512 ram, 3 iterations, object type, object 3: 0.063ms
0.5 cpu, 512 ram, 3 iterations, array_ type, array_ 3: 0.063ms
0.5 cpu, 512 ram, 3 iterations, map___ type, map___ 3: 0.059ms
1.0 cpu, 512 ram, 3 iterations, object type, object 3: 0.058ms
1.0 cpu, 512 ram, 3 iterations, array_ type, array_ 3: 0.063ms
1.0 cpu, 512 ram, 3 iterations, map___ type, map___ 3: 0.059ms
2.0 cpu, 512 ram, 3 iterations, object type, object 3: 0.06ms
2.0 cpu, 512 ram, 3 iterations, array_ type, array_ 3: 0.064ms
2.0 cpu, 512 ram, 3 iterations, map___ type, map___ 3: 0.058ms
3.0 cpu, 512 ram, 3 iterations, object type, object 3: 0.059ms
3.0 cpu, 512 ram, 3 iterations, array_ type, array_ 3: 0.056ms
3.0 cpu, 512 ram, 3 iterations, map___ type, map___ 3: 0.061ms
4.0 cpu, 512 ram, 3 iterations, object type, object 3: 0.063ms
4.0 cpu, 512 ram, 3 iterations, array_ type, array_ 3: 0.068ms
4.0 cpu, 512 ram, 3 iterations, map___ type, map___ 3: 0.058ms
0.5 cpu, 1024 ram, 3 iterations, object type, object 3: 0.065ms
0.5 cpu, 1024 ram, 3 iterations, array_ type, array_ 3: 0.068ms
0.5 cpu, 1024 ram, 3 iterations, map___ type, map___ 3: 0.062ms
1.0 cpu, 1024 ram, 3 iterations, object type, object 3: 0.064ms
1.0 cpu, 1024 ram, 3 iterations, array_ type, array_ 3: 0.062ms
1.0 cpu, 1024 ram, 3 iterations, map___ type, map___ 3: 0.062ms
2.0 cpu, 1024 ram, 3 iterations, object type, object 3: 0.062ms
2.0 cpu, 1024 ram, 3 iterations, array_ type, array_ 3: 0.065ms
2.0 cpu, 1024 ram, 3 iterations, map___ type, map___ 3: 0.059ms
3.0 cpu, 1024 ram, 3 iterations, object type, object 3: 0.063ms
3.0 cpu, 1024 ram, 3 iterations, array_ type, array_ 3: 0.064ms
3.0 cpu, 1024 ram, 3 iterations, map___ type, map___ 3: 0.068ms
4.0 cpu, 1024 ram, 3 iterations, object type, object 3: 0.062ms
4.0 cpu, 1024 ram, 3 iterations, array_ type, array_ 3: 0.057ms
4.0 cpu, 1024 ram, 3 iterations, map___ type, map___ 3: 0.063ms
0.5 cpu, 2048 ram, 3 iterations, object type, object 3: 0.065ms
0.5 cpu, 2048 ram, 3 iterations, array_ type, array_ 3: 0.061ms
0.5 cpu, 2048 ram, 3 iterations, map___ type, map___ 3: 0.069ms
1.0 cpu, 2048 ram, 3 iterations, object type, object 3: 0.06ms
1.0 cpu, 2048 ram, 3 iterations, array_ type, array_ 3: 0.064ms
1.0 cpu, 2048 ram, 3 iterations, map___ type, map___ 3: 0.058ms
2.0 cpu, 2048 ram, 3 iterations, object type, object 3: 0.07ms
2.0 cpu, 2048 ram, 3 iterations, array_ type, array_ 3: 0.059ms
2.0 cpu, 2048 ram, 3 iterations, map___ type, map___ 3: 0.059ms
3.0 cpu, 2048 ram, 3 iterations, object type, object 3: 0.065ms
3.0 cpu, 2048 ram, 3 iterations, array_ type, array_ 3: 0.07ms
3.0 cpu, 2048 ram, 3 iterations, map___ type, map___ 3: 0.072ms
4.0 cpu, 2048 ram, 3 iterations, object type, object 3: 0.064ms
4.0 cpu, 2048 ram, 3 iterations, array_ type, array_ 3: 0.056ms
4.0 cpu, 2048 ram, 3 iterations, map___ type, map___ 3: 0.069ms
0.5 cpu, 4096 ram, 3 iterations, object type, object 3: 0.073ms
0.5 cpu, 4096 ram, 3 iterations, array_ type, array_ 3: 0.067ms
0.5 cpu, 4096 ram, 3 iterations, map___ type, map___ 3: 0.057ms
1.0 cpu, 4096 ram, 3 iterations, object type, object 3: 0.058ms
1.0 cpu, 4096 ram, 3 iterations, array_ type, array_ 3: 0.058ms
1.0 cpu, 4096 ram, 3 iterations, map___ type, map___ 3: 0.066ms
2.0 cpu, 4096 ram, 3 iterations, object type, object 3: 0.061ms
2.0 cpu, 4096 ram, 3 iterations, array_ type, array_ 3: 0.064ms
2.0 cpu, 4096 ram, 3 iterations, map___ type, map___ 3: 0.071ms
3.0 cpu, 4096 ram, 3 iterations, object type, object 3: 0.059ms
3.0 cpu, 4096 ram, 3 iterations, array_ type, array_ 3: 0.059ms
3.0 cpu, 4096 ram, 3 iterations, map___ type, map___ 3: 0.079ms
4.0 cpu, 4096 ram, 3 iterations, object type, object 3: 0.062ms
4.0 cpu, 4096 ram, 3 iterations, array_ type, array_ 3: 0.067ms
4.0 cpu, 4096 ram, 3 iterations, map___ type, map___ 3: 0.068ms
0.5 cpu, 8192 ram, 3 iterations, object type, object 3: 0.076ms
0.5 cpu, 8192 ram, 3 iterations, array_ type, array_ 3: 0.061ms
0.5 cpu, 8192 ram, 3 iterations, map___ type, map___ 3: 0.061ms
1.0 cpu, 8192 ram, 3 iterations, object type, object 3: 0.061ms
1.0 cpu, 8192 ram, 3 iterations, array_ type, array_ 3: 0.062ms
1.0 cpu, 8192 ram, 3 iterations, map___ type, map___ 3: 0.056ms
2.0 cpu, 8192 ram, 3 iterations, object type, object 3: 0.064ms
2.0 cpu, 8192 ram, 3 iterations, array_ type, array_ 3: 0.058ms
2.0 cpu, 8192 ram, 3 iterations, map___ type, map___ 3: 0.059ms
3.0 cpu, 8192 ram, 3 iterations, object type, object 3: 0.063ms
3.0 cpu, 8192 ram, 3 iterations, array_ type, array_ 3: 0.063ms
3.0 cpu, 8192 ram, 3 iterations, map___ type, map___ 3: 0.065ms
4.0 cpu, 8192 ram, 3 iterations, object type, object 3: 0.086ms
4.0 cpu, 8192 ram, 3 iterations, array_ type, array_ 3: 0.062ms
4.0 cpu, 8192 ram, 3 iterations, map___ type, map___ 3: 0.063ms
0.5 cpu, 16384 ram, 3 iterations, object type, object 3: 0.061ms
0.5 cpu, 16384 ram, 3 iterations, array_ type, array_ 3: 0.065ms
0.5 cpu, 16384 ram, 3 iterations, map___ type, map___ 3: 0.067ms
1.0 cpu, 16384 ram, 3 iterations, object type, object 3: 0.061ms
1.0 cpu, 16384 ram, 3 iterations, array_ type, array_ 3: 0.061ms
1.0 cpu, 16384 ram, 3 iterations, map___ type, map___ 3: 0.063ms
2.0 cpu, 16384 ram, 3 iterations, object type, object 3: 0.067ms
2.0 cpu, 16384 ram, 3 iterations, array_ type, array_ 3: 0.066ms
2.0 cpu, 16384 ram, 3 iterations, map___ type, map___ 3: 0.06ms
3.0 cpu, 16384 ram, 3 iterations, object type, object 3: 0.068ms
3.0 cpu, 16384 ram, 3 iterations, array_ type, array_ 3: 0.058ms
3.0 cpu, 16384 ram, 3 iterations, map___ type, map___ 3: 0.061ms
4.0 cpu, 16384 ram, 3 iterations, object type, object 3: 0.062ms
4.0 cpu, 16384 ram, 3 iterations, array_ type, array_ 3: 0.058ms
4.0 cpu, 16384 ram, 3 iterations, map___ type, map___ 3: 0.065ms
0.5 cpu, 128 ram, 4 iterations, object type, object 4: 0.062ms
0.5 cpu, 128 ram, 4 iterations, array_ type, array_ 4: 0.058ms
0.5 cpu, 128 ram, 4 iterations, map___ type, map___ 4: 0.058ms
1.0 cpu, 128 ram, 4 iterations, object type, object 4: 0.059ms
1.0 cpu, 128 ram, 4 iterations, array_ type, array_ 4: 0.069ms
1.0 cpu, 128 ram, 4 iterations, map___ type, map___ 4: 0.063ms
2.0 cpu, 128 ram, 4 iterations, object type, object 4: 0.061ms
2.0 cpu, 128 ram, 4 iterations, array_ type, array_ 4: 0.059ms
2.0 cpu, 128 ram, 4 iterations, map___ type, map___ 4: 0.056ms
3.0 cpu, 128 ram, 4 iterations, object type, object 4: 0.062ms
3.0 cpu, 128 ram, 4 iterations, array_ type, array_ 4: 0.056ms
3.0 cpu, 128 ram, 4 iterations, map___ type, map___ 4: 0.087ms
4.0 cpu, 128 ram, 4 iterations, object type, object 4: 0.064ms
4.0 cpu, 128 ram, 4 iterations, array_ type, array_ 4: 0.066ms
4.0 cpu, 128 ram, 4 iterations, map___ type, map___ 4: 0.056ms
0.5 cpu, 256 ram, 4 iterations, object type, object 4: 0.06ms
0.5 cpu, 256 ram, 4 iterations, array_ type, array_ 4: 0.066ms
0.5 cpu, 256 ram, 4 iterations, map___ type, map___ 4: 0.059ms
1.0 cpu, 256 ram, 4 iterations, object type, object 4: 0.065ms
1.0 cpu, 256 ram, 4 iterations, array_ type, array_ 4: 0.067ms
1.0 cpu, 256 ram, 4 iterations, map___ type, map___ 4: 0.057ms
2.0 cpu, 256 ram, 4 iterations, object type, object 4: 0.058ms
2.0 cpu, 256 ram, 4 iterations, array_ type, array_ 4: 0.064ms
2.0 cpu, 256 ram, 4 iterations, map___ type, map___ 4: 0.057ms
3.0 cpu, 256 ram, 4 iterations, object type, object 4: 0.057ms
3.0 cpu, 256 ram, 4 iterations, array_ type, array_ 4: 0.061ms
3.0 cpu, 256 ram, 4 iterations, map___ type, map___ 4: 0.065ms
4.0 cpu, 256 ram, 4 iterations, object type, object 4: 0.064ms
4.0 cpu, 256 ram, 4 iterations, array_ type, array_ 4: 0.065ms
4.0 cpu, 256 ram, 4 iterations, map___ type, map___ 4: 0.065ms
0.5 cpu, 512 ram, 4 iterations, object type, object 4: 0.064ms
0.5 cpu, 512 ram, 4 iterations, array_ type, array_ 4: 0.056ms
0.5 cpu, 512 ram, 4 iterations, map___ type, map___ 4: 0.064ms
1.0 cpu, 512 ram, 4 iterations, object type, object 4: 0.064ms
1.0 cpu, 512 ram, 4 iterations, array_ type, array_ 4: 0.075ms
1.0 cpu, 512 ram, 4 iterations, map___ type, map___ 4: 0.073ms
2.0 cpu, 512 ram, 4 iterations, object type, object 4: 0.06ms
2.0 cpu, 512 ram, 4 iterations, array_ type, array_ 4: 0.064ms
2.0 cpu, 512 ram, 4 iterations, map___ type, map___ 4: 0.063ms
3.0 cpu, 512 ram, 4 iterations, object type, object 4: 0.067ms
3.0 cpu, 512 ram, 4 iterations, array_ type, array_ 4: 0.066ms
3.0 cpu, 512 ram, 4 iterations, map___ type, map___ 4: 0.057ms
4.0 cpu, 512 ram, 4 iterations, object type, object 4: 0.06ms
4.0 cpu, 512 ram, 4 iterations, array_ type, array_ 4: 0.065ms
4.0 cpu, 512 ram, 4 iterations, map___ type, map___ 4: 0.057ms
0.5 cpu, 1024 ram, 4 iterations, object type, object 4: 0.063ms
0.5 cpu, 1024 ram, 4 iterations, array_ type, array_ 4: 0.062ms
0.5 cpu, 1024 ram, 4 iterations, map___ type, map___ 4: 0.068ms
1.0 cpu, 1024 ram, 4 iterations, object type, object 4: 0.092ms
1.0 cpu, 1024 ram, 4 iterations, array_ type, array_ 4: 0.079ms
1.0 cpu, 1024 ram, 4 iterations, map___ type, map___ 4: 0.057ms
2.0 cpu, 1024 ram, 4 iterations, object type, object 4: 0.065ms
2.0 cpu, 1024 ram, 4 iterations, array_ type, array_ 4: 0.06ms
2.0 cpu, 1024 ram, 4 iterations, map___ type, map___ 4: 0.058ms
3.0 cpu, 1024 ram, 4 iterations, object type, object 4: 0.064ms
3.0 cpu, 1024 ram, 4 iterations, array_ type, array_ 4: 0.057ms
3.0 cpu, 1024 ram, 4 iterations, map___ type, map___ 4: 0.07ms
4.0 cpu, 1024 ram, 4 iterations, object type, object 4: 0.062ms
4.0 cpu, 1024 ram, 4 iterations, array_ type, array_ 4: 0.06ms
4.0 cpu, 1024 ram, 4 iterations, map___ type, map___ 4: 0.08ms
0.5 cpu, 2048 ram, 4 iterations, object type, object 4: 0.06ms
0.5 cpu, 2048 ram, 4 iterations, array_ type, array_ 4: 0.056ms
0.5 cpu, 2048 ram, 4 iterations, map___ type, map___ 4: 0.062ms
1.0 cpu, 2048 ram, 4 iterations, object type, object 4: 0.065ms
1.0 cpu, 2048 ram, 4 iterations, array_ type, array_ 4: 0.073ms
1.0 cpu, 2048 ram, 4 iterations, map___ type, map___ 4: 0.065ms
2.0 cpu, 2048 ram, 4 iterations, object type, object 4: 0.064ms
2.0 cpu, 2048 ram, 4 iterations, array_ type, array_ 4: 0.069ms
2.0 cpu, 2048 ram, 4 iterations, map___ type, map___ 4: 0.069ms
3.0 cpu, 2048 ram, 4 iterations, object type, object 4: 0.065ms
3.0 cpu, 2048 ram, 4 iterations, array_ type, array_ 4: 0.066ms
3.0 cpu, 2048 ram, 4 iterations, map___ type, map___ 4: 0.07ms
4.0 cpu, 2048 ram, 4 iterations, object type, object 4: 0.068ms
4.0 cpu, 2048 ram, 4 iterations, array_ type, array_ 4: 0.062ms
4.0 cpu, 2048 ram, 4 iterations, map___ type, map___ 4: 0.06ms
0.5 cpu, 4096 ram, 4 iterations, object type, object 4: 0.069ms
0.5 cpu, 4096 ram, 4 iterations, array_ type, array_ 4: 0.066ms
0.5 cpu, 4096 ram, 4 iterations, map___ type, map___ 4: 0.057ms
1.0 cpu, 4096 ram, 4 iterations, object type, object 4: 0.059ms
1.0 cpu, 4096 ram, 4 iterations, array_ type, array_ 4: 0.063ms
1.0 cpu, 4096 ram, 4 iterations, map___ type, map___ 4: 0.067ms
2.0 cpu, 4096 ram, 4 iterations, object type, object 4: 0.065ms
2.0 cpu, 4096 ram, 4 iterations, array_ type, array_ 4: 0.084ms
2.0 cpu, 4096 ram, 4 iterations, map___ type, map___ 4: 0.06ms
3.0 cpu, 4096 ram, 4 iterations, object type, object 4: 0.063ms
3.0 cpu, 4096 ram, 4 iterations, array_ type, array_ 4: 0.062ms
3.0 cpu, 4096 ram, 4 iterations, map___ type, map___ 4: 0.058ms
4.0 cpu, 4096 ram, 4 iterations, object type, object 4: 0.059ms
4.0 cpu, 4096 ram, 4 iterations, array_ type, array_ 4: 0.065ms
4.0 cpu, 4096 ram, 4 iterations, map___ type, map___ 4: 0.07ms
0.5 cpu, 8192 ram, 4 iterations, object type, object 4: 0.06ms
0.5 cpu, 8192 ram, 4 iterations, array_ type, array_ 4: 0.076ms
0.5 cpu, 8192 ram, 4 iterations, map___ type, map___ 4: 0.061ms
1.0 cpu, 8192 ram, 4 iterations, object type, object 4: 0.06ms
1.0 cpu, 8192 ram, 4 iterations, array_ type, array_ 4: 0.062ms
1.0 cpu, 8192 ram, 4 iterations, map___ type, map___ 4: 0.074ms
2.0 cpu, 8192 ram, 4 iterations, object type, object 4: 0.06ms
2.0 cpu, 8192 ram, 4 iterations, array_ type, array_ 4: 0.065ms
2.0 cpu, 8192 ram, 4 iterations, map___ type, map___ 4: 0.061ms
3.0 cpu, 8192 ram, 4 iterations, object type, object 4: 0.061ms
3.0 cpu, 8192 ram, 4 iterations, array_ type, array_ 4: 0.066ms
3.0 cpu, 8192 ram, 4 iterations, map___ type, map___ 4: 0.058ms
4.0 cpu, 8192 ram, 4 iterations, object type, object 4: 0.056ms
4.0 cpu, 8192 ram, 4 iterations, array_ type, array_ 4: 0.061ms
4.0 cpu, 8192 ram, 4 iterations, map___ type, map___ 4: 0.06ms
0.5 cpu, 16384 ram, 4 iterations, object type, object 4: 0.058ms
0.5 cpu, 16384 ram, 4 iterations, array_ type, array_ 4: 0.063ms
0.5 cpu, 16384 ram, 4 iterations, map___ type, map___ 4: 0.064ms
1.0 cpu, 16384 ram, 4 iterations, object type, object 4: 0.064ms
1.0 cpu, 16384 ram, 4 iterations, array_ type, array_ 4: 0.06ms
1.0 cpu, 16384 ram, 4 iterations, map___ type, map___ 4: 0.058ms
2.0 cpu, 16384 ram, 4 iterations, object type, object 4: 0.062ms
2.0 cpu, 16384 ram, 4 iterations, array_ type, array_ 4: 0.064ms
2.0 cpu, 16384 ram, 4 iterations, map___ type, map___ 4: 0.074ms
3.0 cpu, 16384 ram, 4 iterations, object type, object 4: 0.058ms
3.0 cpu, 16384 ram, 4 iterations, array_ type, array_ 4: 0.085ms
3.0 cpu, 16384 ram, 4 iterations, map___ type, map___ 4: 0.061ms
4.0 cpu, 16384 ram, 4 iterations, object type, object 4: 0.059ms
4.0 cpu, 16384 ram, 4 iterations, array_ type, array_ 4: 0.058ms
4.0 cpu, 16384 ram, 4 iterations, map___ type, map___ 4: 0.059ms
0.5 cpu, 128 ram, 5 iterations, object type, object 5: 0.063ms
0.5 cpu, 128 ram, 5 iterations, array_ type, array_ 5: 0.069ms
0.5 cpu, 128 ram, 5 iterations, map___ type, map___ 5: 0.06ms
1.0 cpu, 128 ram, 5 iterations, object type, object 5: 0.065ms
1.0 cpu, 128 ram, 5 iterations, array_ type, array_ 5: 0.067ms
1.0 cpu, 128 ram, 5 iterations, map___ type, map___ 5: 0.073ms
2.0 cpu, 128 ram, 5 iterations, object type, object 5: 0.066ms
2.0 cpu, 128 ram, 5 iterations, array_ type, array_ 5: 0.06ms
2.0 cpu, 128 ram, 5 iterations, map___ type, map___ 5: 0.057ms
3.0 cpu, 128 ram, 5 iterations, object type, object 5: 0.065ms
3.0 cpu, 128 ram, 5 iterations, array_ type, array_ 5: 0.059ms
3.0 cpu, 128 ram, 5 iterations, map___ type, map___ 5: 0.059ms
4.0 cpu, 128 ram, 5 iterations, object type, object 5: 0.064ms
4.0 cpu, 128 ram, 5 iterations, array_ type, array_ 5: 0.058ms
4.0 cpu, 128 ram, 5 iterations, map___ type, map___ 5: 0.063ms
0.5 cpu, 256 ram, 5 iterations, object type, object 5: 0.061ms
0.5 cpu, 256 ram, 5 iterations, array_ type, array_ 5: 0.069ms
0.5 cpu, 256 ram, 5 iterations, map___ type, map___ 5: 0.061ms
1.0 cpu, 256 ram, 5 iterations, object type, object 5: 0.06ms
1.0 cpu, 256 ram, 5 iterations, array_ type, array_ 5: 0.056ms
1.0 cpu, 256 ram, 5 iterations, map___ type, map___ 5: 0.064ms
2.0 cpu, 256 ram, 5 iterations, object type, object 5: 0.063ms
2.0 cpu, 256 ram, 5 iterations, array_ type, array_ 5: 0.065ms
2.0 cpu, 256 ram, 5 iterations, map___ type, map___ 5: 0.056ms
3.0 cpu, 256 ram, 5 iterations, object type, object 5: 0.067ms
3.0 cpu, 256 ram, 5 iterations, array_ type, array_ 5: 0.056ms
3.0 cpu, 256 ram, 5 iterations, map___ type, map___ 5: 0.067ms
4.0 cpu, 256 ram, 5 iterations, object type, object 5: 0.063ms
4.0 cpu, 256 ram, 5 iterations, array_ type, array_ 5: 0.071ms
4.0 cpu, 256 ram, 5 iterations, map___ type, map___ 5: 0.061ms
0.5 cpu, 512 ram, 5 iterations, object type, object 5: 0.062ms
0.5 cpu, 512 ram, 5 iterations, array_ type, array_ 5: 0.058ms
0.5 cpu, 512 ram, 5 iterations, map___ type, map___ 5: 0.063ms
1.0 cpu, 512 ram, 5 iterations, object type, object 5: 0.062ms
1.0 cpu, 512 ram, 5 iterations, array_ type, array_ 5: 0.065ms
1.0 cpu, 512 ram, 5 iterations, map___ type, map___ 5: 0.063ms
2.0 cpu, 512 ram, 5 iterations, object type, object 5: 0.062ms
2.0 cpu, 512 ram, 5 iterations, array_ type, array_ 5: 0.068ms
2.0 cpu, 512 ram, 5 iterations, map___ type, map___ 5: 0.06ms
3.0 cpu, 512 ram, 5 iterations, object type, object 5: 0.057ms
3.0 cpu, 512 ram, 5 iterations, array_ type, array_ 5: 0.064ms
3.0 cpu, 512 ram, 5 iterations, map___ type, map___ 5: 0.059ms
4.0 cpu, 512 ram, 5 iterations, object type, object 5: 0.06ms
4.0 cpu, 512 ram, 5 iterations, array_ type, array_ 5: 0.059ms
4.0 cpu, 512 ram, 5 iterations, map___ type, map___ 5: 0.062ms
0.5 cpu, 1024 ram, 5 iterations, object type, object 5: 0.06ms
0.5 cpu, 1024 ram, 5 iterations, array_ type, array_ 5: 0.056ms
0.5 cpu, 1024 ram, 5 iterations, map___ type, map___ 5: 0.061ms
1.0 cpu, 1024 ram, 5 iterations, object type, object 5: 0.061ms
1.0 cpu, 1024 ram, 5 iterations, array_ type, array_ 5: 0.076ms
1.0 cpu, 1024 ram, 5 iterations, map___ type, map___ 5: 0.062ms
2.0 cpu, 1024 ram, 5 iterations, object type, object 5: 0.082ms
2.0 cpu, 1024 ram, 5 iterations, array_ type, array_ 5: 0.08ms
2.0 cpu, 1024 ram, 5 iterations, map___ type, map___ 5: 0.068ms
3.0 cpu, 1024 ram, 5 iterations, object type, object 5: 0.075ms
3.0 cpu, 1024 ram, 5 iterations, array_ type, array_ 5: 0.057ms
3.0 cpu, 1024 ram, 5 iterations, map___ type, map___ 5: 0.075ms
4.0 cpu, 1024 ram, 5 iterations, object type, object 5: 0.071ms
4.0 cpu, 1024 ram, 5 iterations, array_ type, array_ 5: 0.065ms
4.0 cpu, 1024 ram, 5 iterations, map___ type, map___ 5: 0.063ms
0.5 cpu, 2048 ram, 5 iterations, object type, object 5: 0.063ms
0.5 cpu, 2048 ram, 5 iterations, array_ type, array_ 5: 0.07ms
0.5 cpu, 2048 ram, 5 iterations, map___ type, map___ 5: 0.066ms
1.0 cpu, 2048 ram, 5 iterations, object type, object 5: 0.098ms
1.0 cpu, 2048 ram, 5 iterations, array_ type, array_ 5: 0.058ms
1.0 cpu, 2048 ram, 5 iterations, map___ type, map___ 5: 0.06ms
2.0 cpu, 2048 ram, 5 iterations, object type, object 5: 0.063ms
2.0 cpu, 2048 ram, 5 iterations, array_ type, array_ 5: 0.064ms
2.0 cpu, 2048 ram, 5 iterations, map___ type, map___ 5: 0.063ms
3.0 cpu, 2048 ram, 5 iterations, object type, object 5: 0.064ms
3.0 cpu, 2048 ram, 5 iterations, array_ type, array_ 5: 0.063ms
3.0 cpu, 2048 ram, 5 iterations, map___ type, map___ 5: 0.062ms
4.0 cpu, 2048 ram, 5 iterations, object type, object 5: 0.065ms
4.0 cpu, 2048 ram, 5 iterations, array_ type, array_ 5: 0.072ms
4.0 cpu, 2048 ram, 5 iterations, map___ type, map___ 5: 0.059ms
0.5 cpu, 4096 ram, 5 iterations, object type, object 5: 0.066ms
0.5 cpu, 4096 ram, 5 iterations, array_ type, array_ 5: 0.068ms
0.5 cpu, 4096 ram, 5 iterations, map___ type, map___ 5: 0.06ms
1.0 cpu, 4096 ram, 5 iterations, object type, object 5: 0.067ms
1.0 cpu, 4096 ram, 5 iterations, array_ type, array_ 5: 0.064ms
1.0 cpu, 4096 ram, 5 iterations, map___ type, map___ 5: 0.058ms
2.0 cpu, 4096 ram, 5 iterations, object type, object 5: 0.085ms
2.0 cpu, 4096 ram, 5 iterations, array_ type, array_ 5: 0.067ms
2.0 cpu, 4096 ram, 5 iterations, map___ type, map___ 5: 0.062ms
3.0 cpu, 4096 ram, 5 iterations, object type, object 5: 0.074ms
3.0 cpu, 4096 ram, 5 iterations, array_ type, array_ 5: 0.06ms
3.0 cpu, 4096 ram, 5 iterations, map___ type, map___ 5: 0.065ms
4.0 cpu, 4096 ram, 5 iterations, object type, object 5: 0.071ms
4.0 cpu, 4096 ram, 5 iterations, array_ type, array_ 5: 0.068ms
4.0 cpu, 4096 ram, 5 iterations, map___ type, map___ 5: 0.058ms
0.5 cpu, 8192 ram, 5 iterations, object type, object 5: 0.063ms
0.5 cpu, 8192 ram, 5 iterations, array_ type, array_ 5: 0.066ms
0.5 cpu, 8192 ram, 5 iterations, map___ type, map___ 5: 0.061ms
1.0 cpu, 8192 ram, 5 iterations, object type, object 5: 0.074ms
1.0 cpu, 8192 ram, 5 iterations, array_ type, array_ 5: 0.064ms
1.0 cpu, 8192 ram, 5 iterations, map___ type, map___ 5: 0.063ms
2.0 cpu, 8192 ram, 5 iterations, object type, object 5: 0.059ms
2.0 cpu, 8192 ram, 5 iterations, array_ type, array_ 5: 0.059ms
2.0 cpu, 8192 ram, 5 iterations, map___ type, map___ 5: 0.065ms
3.0 cpu, 8192 ram, 5 iterations, object type, object 5: 0.059ms
3.0 cpu, 8192 ram, 5 iterations, array_ type, array_ 5: 0.066ms
3.0 cpu, 8192 ram, 5 iterations, map___ type, map___ 5: 0.072ms
4.0 cpu, 8192 ram, 5 iterations, object type, object 5: 0.058ms
4.0 cpu, 8192 ram, 5 iterations, array_ type, array_ 5: 0.058ms
4.0 cpu, 8192 ram, 5 iterations, map___ type, map___ 5: 0.054ms
0.5 cpu, 16384 ram, 5 iterations, object type, object 5: 0.067ms
0.5 cpu, 16384 ram, 5 iterations, array_ type, array_ 5: 0.062ms
0.5 cpu, 16384 ram, 5 iterations, map___ type, map___ 5: 0.069ms
1.0 cpu, 16384 ram, 5 iterations, object type, object 5: 0.057ms
1.0 cpu, 16384 ram, 5 iterations, array_ type, array_ 5: 0.069ms
1.0 cpu, 16384 ram, 5 iterations, map___ type, map___ 5: 0.061ms
2.0 cpu, 16384 ram, 5 iterations, object type, object 5: 0.062ms
2.0 cpu, 16384 ram, 5 iterations, array_ type, array_ 5: 0.066ms
2.0 cpu, 16384 ram, 5 iterations, map___ type, map___ 5: 0.063ms
3.0 cpu, 16384 ram, 5 iterations, object type, object 5: 0.076ms
3.0 cpu, 16384 ram, 5 iterations, array_ type, array_ 5: 0.065ms
3.0 cpu, 16384 ram, 5 iterations, map___ type, map___ 5: 0.062ms
4.0 cpu, 16384 ram, 5 iterations, object type, object 5: 0.063ms
4.0 cpu, 16384 ram, 5 iterations, array_ type, array_ 5: 0.067ms
4.0 cpu, 16384 ram, 5 iterations, map___ type, map___ 5: 0.062ms
0.5 cpu, 128 ram, 6 iterations, object type, object 6: 0.062ms
0.5 cpu, 128 ram, 6 iterations, array_ type, array_ 6: 0.07ms
0.5 cpu, 128 ram, 6 iterations, map___ type, map___ 6: 0.065ms
1.0 cpu, 128 ram, 6 iterations, object type, object 6: 0.06ms
1.0 cpu, 128 ram, 6 iterations, array_ type, array_ 6: 0.073ms
1.0 cpu, 128 ram, 6 iterations, map___ type, map___ 6: 0.062ms
2.0 cpu, 128 ram, 6 iterations, object type, object 6: 0.065ms
2.0 cpu, 128 ram, 6 iterations, array_ type, array_ 6: 0.063ms
2.0 cpu, 128 ram, 6 iterations, map___ type, map___ 6: 0.065ms
3.0 cpu, 128 ram, 6 iterations, object type, object 6: 0.07ms
3.0 cpu, 128 ram, 6 iterations, array_ type, array_ 6: 0.07ms
3.0 cpu, 128 ram, 6 iterations, map___ type, map___ 6: 0.066ms
4.0 cpu, 128 ram, 6 iterations, object type, object 6: 0.068ms
4.0 cpu, 128 ram, 6 iterations, array_ type, array_ 6: 0.058ms
4.0 cpu, 128 ram, 6 iterations, map___ type, map___ 6: 0.068ms
0.5 cpu, 256 ram, 6 iterations, object type, object 6: 0.066ms
0.5 cpu, 256 ram, 6 iterations, array_ type, array_ 6: 0.066ms
0.5 cpu, 256 ram, 6 iterations, map___ type, map___ 6: 0.059ms
1.0 cpu, 256 ram, 6 iterations, object type, object 6: 0.06ms
1.0 cpu, 256 ram, 6 iterations, array_ type, array_ 6: 0.067ms
1.0 cpu, 256 ram, 6 iterations, map___ type, map___ 6: 0.059ms
2.0 cpu, 256 ram, 6 iterations, object type, object 6: 0.065ms
2.0 cpu, 256 ram, 6 iterations, array_ type, array_ 6: 0.061ms
2.0 cpu, 256 ram, 6 iterations, map___ type, map___ 6: 0.075ms
3.0 cpu, 256 ram, 6 iterations, object type, object 6: 0.07ms
3.0 cpu, 256 ram, 6 iterations, array_ type, array_ 6: 0.061ms
3.0 cpu, 256 ram, 6 iterations, map___ type, map___ 6: 0.061ms
4.0 cpu, 256 ram, 6 iterations, object type, object 6: 0.066ms
4.0 cpu, 256 ram, 6 iterations, array_ type, array_ 6: 0.063ms
4.0 cpu, 256 ram, 6 iterations, map___ type, map___ 6: 0.062ms
0.5 cpu, 512 ram, 6 iterations, object type, object 6: 0.062ms
0.5 cpu, 512 ram, 6 iterations, array_ type, array_ 6: 0.065ms
0.5 cpu, 512 ram, 6 iterations, map___ type, map___ 6: 0.06ms
1.0 cpu, 512 ram, 6 iterations, object type, object 6: 0.06ms
1.0 cpu, 512 ram, 6 iterations, array_ type, array_ 6: 0.062ms
1.0 cpu, 512 ram, 6 iterations, map___ type, map___ 6: 0.061ms
2.0 cpu, 512 ram, 6 iterations, object type, object 6: 0.074ms
2.0 cpu, 512 ram, 6 iterations, array_ type, array_ 6: 0.074ms
2.0 cpu, 512 ram, 6 iterations, map___ type, map___ 6: 0.057ms
3.0 cpu, 512 ram, 6 iterations, object type, object 6: 0.067ms
3.0 cpu, 512 ram, 6 iterations, array_ type, array_ 6: 0.058ms
3.0 cpu, 512 ram, 6 iterations, map___ type, map___ 6: 0.065ms
4.0 cpu, 512 ram, 6 iterations, object type, object 6: 0.06ms
4.0 cpu, 512 ram, 6 iterations, array_ type, array_ 6: 0.065ms
4.0 cpu, 512 ram, 6 iterations, map___ type, map___ 6: 0.065ms
0.5 cpu, 1024 ram, 6 iterations, object type, object 6: 0.084ms
0.5 cpu, 1024 ram, 6 iterations, array_ type, array_ 6: 0.065ms
0.5 cpu, 1024 ram, 6 iterations, map___ type, map___ 6: 0.061ms
1.0 cpu, 1024 ram, 6 iterations, object type, object 6: 0.067ms
1.0 cpu, 1024 ram, 6 iterations, array_ type, array_ 6: 0.062ms
1.0 cpu, 1024 ram, 6 iterations, map___ type, map___ 6: 0.062ms
2.0 cpu, 1024 ram, 6 iterations, object type, object 6: 0.06ms
2.0 cpu, 1024 ram, 6 iterations, array_ type, array_ 6: 0.067ms
2.0 cpu, 1024 ram, 6 iterations, map___ type, map___ 6: 0.061ms
3.0 cpu, 1024 ram, 6 iterations, object type, object 6: 0.06ms
3.0 cpu, 1024 ram, 6 iterations, array_ type, array_ 6: 0.071ms
3.0 cpu, 1024 ram, 6 iterations, map___ type, map___ 6: 0.065ms
4.0 cpu, 1024 ram, 6 iterations, object type, object 6: 0.064ms
4.0 cpu, 1024 ram, 6 iterations, array_ type, array_ 6: 0.074ms
4.0 cpu, 1024 ram, 6 iterations, map___ type, map___ 6: 0.067ms
0.5 cpu, 2048 ram, 6 iterations, object type, object 6: 0.059ms
0.5 cpu, 2048 ram, 6 iterations, array_ type, array_ 6: 0.068ms
0.5 cpu, 2048 ram, 6 iterations, map___ type, map___ 6: 0.059ms
1.0 cpu, 2048 ram, 6 iterations, object type, object 6: 0.066ms
1.0 cpu, 2048 ram, 6 iterations, array_ type, array_ 6: 0.069ms
1.0 cpu, 2048 ram, 6 iterations, map___ type, map___ 6: 0.07ms
2.0 cpu, 2048 ram, 6 iterations, object type, object 6: 0.064ms
2.0 cpu, 2048 ram, 6 iterations, array_ type, array_ 6: 0.073ms
2.0 cpu, 2048 ram, 6 iterations, map___ type, map___ 6: 0.062ms
3.0 cpu, 2048 ram, 6 iterations, object type, object 6: 0.067ms
3.0 cpu, 2048 ram, 6 iterations, array_ type, array_ 6: 0.06ms
3.0 cpu, 2048 ram, 6 iterations, map___ type, map___ 6: 0.083ms
4.0 cpu, 2048 ram, 6 iterations, object type, object 6: 0.059ms
4.0 cpu, 2048 ram, 6 iterations, array_ type, array_ 6: 0.065ms
4.0 cpu, 2048 ram, 6 iterations, map___ type, map___ 6: 0.058ms
0.5 cpu, 4096 ram, 6 iterations, object type, object 6: 0.063ms
0.5 cpu, 4096 ram, 6 iterations, array_ type, array_ 6: 0.062ms
0.5 cpu, 4096 ram, 6 iterations, map___ type, map___ 6: 0.066ms
1.0 cpu, 4096 ram, 6 iterations, object type, object 6: 0.083ms
1.0 cpu, 4096 ram, 6 iterations, array_ type, array_ 6: 0.07ms
1.0 cpu, 4096 ram, 6 iterations, map___ type, map___ 6: 0.063ms
2.0 cpu, 4096 ram, 6 iterations, object type, object 6: 0.068ms
2.0 cpu, 4096 ram, 6 iterations, array_ type, array_ 6: 0.061ms
2.0 cpu, 4096 ram, 6 iterations, map___ type, map___ 6: 0.062ms
3.0 cpu, 4096 ram, 6 iterations, object type, object 6: 0.059ms
3.0 cpu, 4096 ram, 6 iterations, array_ type, array_ 6: 0.061ms
3.0 cpu, 4096 ram, 6 iterations, map___ type, map___ 6: 0.058ms
4.0 cpu, 4096 ram, 6 iterations, object type, object 6: 0.064ms
4.0 cpu, 4096 ram, 6 iterations, array_ type, array_ 6: 0.062ms
4.0 cpu, 4096 ram, 6 iterations, map___ type, map___ 6: 0.06ms
0.5 cpu, 8192 ram, 6 iterations, object type, object 6: 0.06ms
0.5 cpu, 8192 ram, 6 iterations, array_ type, array_ 6: 0.073ms
0.5 cpu, 8192 ram, 6 iterations, map___ type, map___ 6: 0.064ms
1.0 cpu, 8192 ram, 6 iterations, object type, object 6: 0.06ms
1.0 cpu, 8192 ram, 6 iterations, array_ type, array_ 6: 0.064ms
1.0 cpu, 8192 ram, 6 iterations, map___ type, map___ 6: 0.068ms
2.0 cpu, 8192 ram, 6 iterations, object type, object 6: 0.06ms
2.0 cpu, 8192 ram, 6 iterations, array_ type, array_ 6: 0.058ms
2.0 cpu, 8192 ram, 6 iterations, map___ type, map___ 6: 0.061ms
3.0 cpu, 8192 ram, 6 iterations, object type, object 6: 0.06ms
3.0 cpu, 8192 ram, 6 iterations, array_ type, array_ 6: 0.065ms
3.0 cpu, 8192 ram, 6 iterations, map___ type, map___ 6: 0.075ms
4.0 cpu, 8192 ram, 6 iterations, object type, object 6: 0.061ms
4.0 cpu, 8192 ram, 6 iterations, array_ type, array_ 6: 0.068ms
4.0 cpu, 8192 ram, 6 iterations, map___ type, map___ 6: 0.061ms
0.5 cpu, 16384 ram, 6 iterations, object type, object 6: 0.063ms
0.5 cpu, 16384 ram, 6 iterations, array_ type, array_ 6: 0.07ms
0.5 cpu, 16384 ram, 6 iterations, map___ type, map___ 6: 0.06ms
1.0 cpu, 16384 ram, 6 iterations, object type, object 6: 0.058ms
1.0 cpu, 16384 ram, 6 iterations, array_ type, array_ 6: 0.065ms
1.0 cpu, 16384 ram, 6 iterations, map___ type, map___ 6: 0.062ms
2.0 cpu, 16384 ram, 6 iterations, object type, object 6: 0.064ms
2.0 cpu, 16384 ram, 6 iterations, array_ type, array_ 6: 0.06ms
2.0 cpu, 16384 ram, 6 iterations, map___ type, map___ 6: 0.065ms
3.0 cpu, 16384 ram, 6 iterations, object type, object 6: 0.069ms
3.0 cpu, 16384 ram, 6 iterations, array_ type, array_ 6: 0.057ms
3.0 cpu, 16384 ram, 6 iterations, map___ type, map___ 6: 0.055ms
4.0 cpu, 16384 ram, 6 iterations, object type, object 6: 0.063ms
4.0 cpu, 16384 ram, 6 iterations, array_ type, array_ 6: 0.067ms
4.0 cpu, 16384 ram, 6 iterations, map___ type, map___ 6: 0.065ms
0.5 cpu, 128 ram, 7 iterations, object type, object 7: 0.065ms
0.5 cpu, 128 ram, 7 iterations, array_ type, array_ 7: 0.071ms
0.5 cpu, 128 ram, 7 iterations, map___ type, map___ 7: 0.06ms
1.0 cpu, 128 ram, 7 iterations, object type, object 7: 0.062ms
1.0 cpu, 128 ram, 7 iterations, array_ type, array_ 7: 0.074ms
1.0 cpu, 128 ram, 7 iterations, map___ type, map___ 7: 0.058ms
2.0 cpu, 128 ram, 7 iterations, object type, object 7: 0.058ms
2.0 cpu, 128 ram, 7 iterations, array_ type, array_ 7: 0.069ms
2.0 cpu, 128 ram, 7 iterations, map___ type, map___ 7: 0.093ms
3.0 cpu, 128 ram, 7 iterations, object type, object 7: 0.07ms
3.0 cpu, 128 ram, 7 iterations, array_ type, array_ 7: 0.063ms
3.0 cpu, 128 ram, 7 iterations, map___ type, map___ 7: 0.062ms
4.0 cpu, 128 ram, 7 iterations, object type, object 7: 0.065ms
4.0 cpu, 128 ram, 7 iterations, array_ type, array_ 7: 0.066ms
4.0 cpu, 128 ram, 7 iterations, map___ type, map___ 7: 0.061ms
0.5 cpu, 256 ram, 7 iterations, object type, object 7: 0.058ms
0.5 cpu, 256 ram, 7 iterations, array_ type, array_ 7: 0.063ms
0.5 cpu, 256 ram, 7 iterations, map___ type, map___ 7: 0.059ms
1.0 cpu, 256 ram, 7 iterations, object type, object 7: 0.065ms
1.0 cpu, 256 ram, 7 iterations, array_ type, array_ 7: 0.066ms
1.0 cpu, 256 ram, 7 iterations, map___ type, map___ 7: 0.071ms
2.0 cpu, 256 ram, 7 iterations, object type, object 7: 0.068ms
2.0 cpu, 256 ram, 7 iterations, array_ type, array_ 7: 0.061ms
2.0 cpu, 256 ram, 7 iterations, map___ type, map___ 7: 0.066ms
3.0 cpu, 256 ram, 7 iterations, object type, object 7: 0.063ms
3.0 cpu, 256 ram, 7 iterations, array_ type, array_ 7: 0.063ms
3.0 cpu, 256 ram, 7 iterations, map___ type, map___ 7: 0.06ms
4.0 cpu, 256 ram, 7 iterations, object type, object 7: 0.067ms
4.0 cpu, 256 ram, 7 iterations, array_ type, array_ 7: 0.06ms
4.0 cpu, 256 ram, 7 iterations, map___ type, map___ 7: 0.062ms
0.5 cpu, 512 ram, 7 iterations, object type, object 7: 0.067ms
0.5 cpu, 512 ram, 7 iterations, array_ type, array_ 7: 0.058ms
0.5 cpu, 512 ram, 7 iterations, map___ type, map___ 7: 0.063ms
1.0 cpu, 512 ram, 7 iterations, object type, object 7: 0.058ms
1.0 cpu, 512 ram, 7 iterations, array_ type, array_ 7: 0.063ms
1.0 cpu, 512 ram, 7 iterations, map___ type, map___ 7: 0.058ms
2.0 cpu, 512 ram, 7 iterations, object type, object 7: 0.058ms
2.0 cpu, 512 ram, 7 iterations, array_ type, array_ 7: 0.066ms
2.0 cpu, 512 ram, 7 iterations, map___ type, map___ 7: 0.066ms
3.0 cpu, 512 ram, 7 iterations, object type, object 7: 0.061ms
3.0 cpu, 512 ram, 7 iterations, array_ type, array_ 7: 0.066ms
3.0 cpu, 512 ram, 7 iterations, map___ type, map___ 7: 0.063ms
4.0 cpu, 512 ram, 7 iterations, object type, object 7: 0.066ms
4.0 cpu, 512 ram, 7 iterations, array_ type, array_ 7: 0.062ms
4.0 cpu, 512 ram, 7 iterations, map___ type, map___ 7: 0.06ms
0.5 cpu, 1024 ram, 7 iterations, object type, object 7: 0.06ms
0.5 cpu, 1024 ram, 7 iterations, array_ type, array_ 7: 0.061ms
0.5 cpu, 1024 ram, 7 iterations, map___ type, map___ 7: 0.059ms
1.0 cpu, 1024 ram, 7 iterations, object type, object 7: 0.063ms
1.0 cpu, 1024 ram, 7 iterations, array_ type, array_ 7: 0.069ms
1.0 cpu, 1024 ram, 7 iterations, map___ type, map___ 7: 0.078ms
2.0 cpu, 1024 ram, 7 iterations, object type, object 7: 0.078ms
2.0 cpu, 1024 ram, 7 iterations, array_ type, array_ 7: 0.059ms
2.0 cpu, 1024 ram, 7 iterations, map___ type, map___ 7: 0.06ms
3.0 cpu, 1024 ram, 7 iterations, object type, object 7: 0.069ms
3.0 cpu, 1024 ram, 7 iterations, array_ type, array_ 7: 0.066ms
3.0 cpu, 1024 ram, 7 iterations, map___ type, map___ 7: 0.069ms
4.0 cpu, 1024 ram, 7 iterations, object type, object 7: 0.062ms
4.0 cpu, 1024 ram, 7 iterations, array_ type, array_ 7: 0.072ms
4.0 cpu, 1024 ram, 7 iterations, map___ type, map___ 7: 0.089ms
0.5 cpu, 2048 ram, 7 iterations, object type, object 7: 0.064ms
0.5 cpu, 2048 ram, 7 iterations, array_ type, array_ 7: 0.068ms
0.5 cpu, 2048 ram, 7 iterations, map___ type, map___ 7: 0.071ms
1.0 cpu, 2048 ram, 7 iterations, object type, object 7: 0.057ms
1.0 cpu, 2048 ram, 7 iterations, array_ type, array_ 7: 0.066ms
1.0 cpu, 2048 ram, 7 iterations, map___ type, map___ 7: 0.062ms
2.0 cpu, 2048 ram, 7 iterations, object type, object 7: 0.071ms
2.0 cpu, 2048 ram, 7 iterations, array_ type, array_ 7: 0.064ms
2.0 cpu, 2048 ram, 7 iterations, map___ type, map___ 7: 0.06ms
3.0 cpu, 2048 ram, 7 iterations, object type, object 7: 0.068ms
3.0 cpu, 2048 ram, 7 iterations, array_ type, array_ 7: 0.07ms
3.0 cpu, 2048 ram, 7 iterations, map___ type, map___ 7: 0.063ms
4.0 cpu, 2048 ram, 7 iterations, object type, object 7: 0.071ms
4.0 cpu, 2048 ram, 7 iterations, array_ type, array_ 7: 0.065ms
4.0 cpu, 2048 ram, 7 iterations, map___ type, map___ 7: 0.06ms
0.5 cpu, 4096 ram, 7 iterations, object type, object 7: 0.059ms
0.5 cpu, 4096 ram, 7 iterations, array_ type, array_ 7: 0.072ms
0.5 cpu, 4096 ram, 7 iterations, map___ type, map___ 7: 0.066ms
1.0 cpu, 4096 ram, 7 iterations, object type, object 7: 0.057ms
1.0 cpu, 4096 ram, 7 iterations, array_ type, array_ 7: 0.062ms
1.0 cpu, 4096 ram, 7 iterations, map___ type, map___ 7: 0.064ms
2.0 cpu, 4096 ram, 7 iterations, object type, object 7: 0.065ms
2.0 cpu, 4096 ram, 7 iterations, array_ type, array_ 7: 0.062ms
2.0 cpu, 4096 ram, 7 iterations, map___ type, map___ 7: 0.064ms
3.0 cpu, 4096 ram, 7 iterations, object type, object 7: 0.064ms
3.0 cpu, 4096 ram, 7 iterations, array_ type, array_ 7: 0.063ms
3.0 cpu, 4096 ram, 7 iterations, map___ type, map___ 7: 0.068ms
4.0 cpu, 4096 ram, 7 iterations, object type, object 7: 0.064ms
4.0 cpu, 4096 ram, 7 iterations, array_ type, array_ 7: 0.078ms
4.0 cpu, 4096 ram, 7 iterations, map___ type, map___ 7: 0.064ms
0.5 cpu, 8192 ram, 7 iterations, object type, object 7: 0.064ms
0.5 cpu, 8192 ram, 7 iterations, array_ type, array_ 7: 0.074ms
0.5 cpu, 8192 ram, 7 iterations, map___ type, map___ 7: 0.061ms
1.0 cpu, 8192 ram, 7 iterations, object type, object 7: 0.062ms
1.0 cpu, 8192 ram, 7 iterations, array_ type, array_ 7: 0.065ms
1.0 cpu, 8192 ram, 7 iterations, map___ type, map___ 7: 0.058ms
2.0 cpu, 8192 ram, 7 iterations, object type, object 7: 0.066ms
2.0 cpu, 8192 ram, 7 iterations, array_ type, array_ 7: 0.065ms
2.0 cpu, 8192 ram, 7 iterations, map___ type, map___ 7: 0.064ms
3.0 cpu, 8192 ram, 7 iterations, object type, object 7: 0.066ms
3.0 cpu, 8192 ram, 7 iterations, array_ type, array_ 7: 0.092ms
3.0 cpu, 8192 ram, 7 iterations, map___ type, map___ 7: 0.064ms
4.0 cpu, 8192 ram, 7 iterations, object type, object 7: 0.065ms
4.0 cpu, 8192 ram, 7 iterations, array_ type, array_ 7: 0.067ms
4.0 cpu, 8192 ram, 7 iterations, map___ type, map___ 7: 0.068ms
0.5 cpu, 16384 ram, 7 iterations, object type, object 7: 0.059ms
0.5 cpu, 16384 ram, 7 iterations, array_ type, array_ 7: 0.066ms
0.5 cpu, 16384 ram, 7 iterations, map___ type, map___ 7: 0.065ms
1.0 cpu, 16384 ram, 7 iterations, object type, object 7: 0.057ms
1.0 cpu, 16384 ram, 7 iterations, array_ type, array_ 7: 0.067ms
1.0 cpu, 16384 ram, 7 iterations, map___ type, map___ 7: 0.055ms
2.0 cpu, 16384 ram, 7 iterations, object type, object 7: 0.074ms
2.0 cpu, 16384 ram, 7 iterations, array_ type, array_ 7: 0.075ms
2.0 cpu, 16384 ram, 7 iterations, map___ type, map___ 7: 0.063ms
3.0 cpu, 16384 ram, 7 iterations, object type, object 7: 0.065ms
3.0 cpu, 16384 ram, 7 iterations, array_ type, array_ 7: 0.065ms
3.0 cpu, 16384 ram, 7 iterations, map___ type, map___ 7: 0.071ms
4.0 cpu, 16384 ram, 7 iterations, object type, object 7: 0.058ms
4.0 cpu, 16384 ram, 7 iterations, array_ type, array_ 7: 0.06ms
4.0 cpu, 16384 ram, 7 iterations, map___ type, map___ 7: 0.064ms
0.5 cpu, 128 ram, 8 iterations, object type, object 8: 0.058ms
0.5 cpu, 128 ram, 8 iterations, array_ type, array_ 8: 0.06ms
0.5 cpu, 128 ram, 8 iterations, map___ type, map___ 8: 0.062ms
1.0 cpu, 128 ram, 8 iterations, object type, object 8: 0.12ms
1.0 cpu, 128 ram, 8 iterations, array_ type, array_ 8: 0.067ms
1.0 cpu, 128 ram, 8 iterations, map___ type, map___ 8: 0.062ms
2.0 cpu, 128 ram, 8 iterations, object type, object 8: 0.066ms
2.0 cpu, 128 ram, 8 iterations, array_ type, array_ 8: 0.063ms
2.0 cpu, 128 ram, 8 iterations, map___ type, map___ 8: 0.058ms
3.0 cpu, 128 ram, 8 iterations, object type, object 8: 0.064ms
3.0 cpu, 128 ram, 8 iterations, array_ type, array_ 8: 0.08ms
3.0 cpu, 128 ram, 8 iterations, map___ type, map___ 8: 0.058ms
4.0 cpu, 128 ram, 8 iterations, object type, object 8: 0.063ms
4.0 cpu, 128 ram, 8 iterations, array_ type, array_ 8: 0.076ms
4.0 cpu, 128 ram, 8 iterations, map___ type, map___ 8: 0.06ms
0.5 cpu, 256 ram, 8 iterations, object type, object 8: 0.065ms
0.5 cpu, 256 ram, 8 iterations, array_ type, array_ 8: 0.062ms
0.5 cpu, 256 ram, 8 iterations, map___ type, map___ 8: 0.071ms
1.0 cpu, 256 ram, 8 iterations, object type, object 8: 0.067ms
1.0 cpu, 256 ram, 8 iterations, array_ type, array_ 8: 0.067ms
1.0 cpu, 256 ram, 8 iterations, map___ type, map___ 8: 0.057ms
2.0 cpu, 256 ram, 8 iterations, object type, object 8: 0.078ms
2.0 cpu, 256 ram, 8 iterations, array_ type, array_ 8: 0.065ms
2.0 cpu, 256 ram, 8 iterations, map___ type, map___ 8: 0.064ms
3.0 cpu, 256 ram, 8 iterations, object type, object 8: 0.065ms
3.0 cpu, 256 ram, 8 iterations, array_ type, array_ 8: 0.061ms
3.0 cpu, 256 ram, 8 iterations, map___ type, map___ 8: 0.065ms
4.0 cpu, 256 ram, 8 iterations, object type, object 8: 0.06ms
4.0 cpu, 256 ram, 8 iterations, array_ type, array_ 8: 0.064ms
4.0 cpu, 256 ram, 8 iterations, map___ type, map___ 8: 0.07ms
0.5 cpu, 512 ram, 8 iterations, object type, object 8: 0.062ms
0.5 cpu, 512 ram, 8 iterations, array_ type, array_ 8: 0.061ms
0.5 cpu, 512 ram, 8 iterations, map___ type, map___ 8: 0.061ms
1.0 cpu, 512 ram, 8 iterations, object type, object 8: 0.07ms
1.0 cpu, 512 ram, 8 iterations, array_ type, array_ 8: 0.057ms
1.0 cpu, 512 ram, 8 iterations, map___ type, map___ 8: 0.066ms
2.0 cpu, 512 ram, 8 iterations, object type, object 8: 0.07ms
2.0 cpu, 512 ram, 8 iterations, array_ type, array_ 8: 0.063ms
2.0 cpu, 512 ram, 8 iterations, map___ type, map___ 8: 0.066ms
3.0 cpu, 512 ram, 8 iterations, object type, object 8: 0.064ms
3.0 cpu, 512 ram, 8 iterations, array_ type, array_ 8: 0.071ms
3.0 cpu, 512 ram, 8 iterations, map___ type, map___ 8: 0.063ms
4.0 cpu, 512 ram, 8 iterations, object type, object 8: 0.068ms
4.0 cpu, 512 ram, 8 iterations, array_ type, array_ 8: 0.064ms
4.0 cpu, 512 ram, 8 iterations, map___ type, map___ 8: 0.067ms
0.5 cpu, 1024 ram, 8 iterations, object type, object 8: 0.07ms
0.5 cpu, 1024 ram, 8 iterations, array_ type, array_ 8: 0.076ms
0.5 cpu, 1024 ram, 8 iterations, map___ type, map___ 8: 0.056ms
1.0 cpu, 1024 ram, 8 iterations, object type, object 8: 0.06ms
1.0 cpu, 1024 ram, 8 iterations, array_ type, array_ 8: 0.087ms
1.0 cpu, 1024 ram, 8 iterations, map___ type, map___ 8: 0.063ms
2.0 cpu, 1024 ram, 8 iterations, object type, object 8: 0.058ms
2.0 cpu, 1024 ram, 8 iterations, array_ type, array_ 8: 0.06ms
2.0 cpu, 1024 ram, 8 iterations, map___ type, map___ 8: 0.067ms
3.0 cpu, 1024 ram, 8 iterations, object type, object 8: 0.066ms
3.0 cpu, 1024 ram, 8 iterations, array_ type, array_ 8: 0.062ms
3.0 cpu, 1024 ram, 8 iterations, map___ type, map___ 8: 0.058ms
4.0 cpu, 1024 ram, 8 iterations, object type, object 8: 0.067ms
4.0 cpu, 1024 ram, 8 iterations, array_ type, array_ 8: 0.06ms
4.0 cpu, 1024 ram, 8 iterations, map___ type, map___ 8: 0.059ms
0.5 cpu, 2048 ram, 8 iterations, object type, object 8: 0.065ms
0.5 cpu, 2048 ram, 8 iterations, array_ type, array_ 8: 0.063ms
0.5 cpu, 2048 ram, 8 iterations, map___ type, map___ 8: 0.063ms
1.0 cpu, 2048 ram, 8 iterations, object type, object 8: 0.067ms
1.0 cpu, 2048 ram, 8 iterations, array_ type, array_ 8: 0.061ms
1.0 cpu, 2048 ram, 8 iterations, map___ type, map___ 8: 0.065ms
2.0 cpu, 2048 ram, 8 iterations, object type, object 8: 0.065ms
2.0 cpu, 2048 ram, 8 iterations, array_ type, array_ 8: 0.061ms
2.0 cpu, 2048 ram, 8 iterations, map___ type, map___ 8: 0.059ms
3.0 cpu, 2048 ram, 8 iterations, object type, object 8: 0.065ms
3.0 cpu, 2048 ram, 8 iterations, array_ type, array_ 8: 0.065ms
3.0 cpu, 2048 ram, 8 iterations, map___ type, map___ 8: 0.062ms
4.0 cpu, 2048 ram, 8 iterations, object type, object 8: 0.067ms
4.0 cpu, 2048 ram, 8 iterations, array_ type, array_ 8: 0.063ms
4.0 cpu, 2048 ram, 8 iterations, map___ type, map___ 8: 0.057ms
0.5 cpu, 4096 ram, 8 iterations, object type, object 8: 0.063ms
0.5 cpu, 4096 ram, 8 iterations, array_ type, array_ 8: 0.062ms
0.5 cpu, 4096 ram, 8 iterations, map___ type, map___ 8: 0.068ms
1.0 cpu, 4096 ram, 8 iterations, object type, object 8: 0.062ms
1.0 cpu, 4096 ram, 8 iterations, array_ type, array_ 8: 0.079ms
1.0 cpu, 4096 ram, 8 iterations, map___ type, map___ 8: 0.06ms
2.0 cpu, 4096 ram, 8 iterations, object type, object 8: 0.079ms
2.0 cpu, 4096 ram, 8 iterations, array_ type, array_ 8: 0.064ms
2.0 cpu, 4096 ram, 8 iterations, map___ type, map___ 8: 0.065ms
3.0 cpu, 4096 ram, 8 iterations, object type, object 8: 0.058ms
3.0 cpu, 4096 ram, 8 iterations, array_ type, array_ 8: 0.062ms
3.0 cpu, 4096 ram, 8 iterations, map___ type, map___ 8: 0.063ms
4.0 cpu, 4096 ram, 8 iterations, object type, object 8: 0.065ms
4.0 cpu, 4096 ram, 8 iterations, array_ type, array_ 8: 0.077ms
4.0 cpu, 4096 ram, 8 iterations, map___ type, map___ 8: 0.063ms
0.5 cpu, 8192 ram, 8 iterations, object type, object 8: 0.083ms
0.5 cpu, 8192 ram, 8 iterations, array_ type, array_ 8: 0.063ms
0.5 cpu, 8192 ram, 8 iterations, map___ type, map___ 8: 0.062ms
1.0 cpu, 8192 ram, 8 iterations, object type, object 8: 0.063ms
1.0 cpu, 8192 ram, 8 iterations, array_ type, array_ 8: 0.064ms
1.0 cpu, 8192 ram, 8 iterations, map___ type, map___ 8: 0.056ms
2.0 cpu, 8192 ram, 8 iterations, object type, object 8: 0.075ms
2.0 cpu, 8192 ram, 8 iterations, array_ type, array_ 8: 0.063ms
2.0 cpu, 8192 ram, 8 iterations, map___ type, map___ 8: 0.058ms
3.0 cpu, 8192 ram, 8 iterations, object type, object 8: 0.063ms
3.0 cpu, 8192 ram, 8 iterations, array_ type, array_ 8: 0.082ms
3.0 cpu, 8192 ram, 8 iterations, map___ type, map___ 8: 0.062ms
4.0 cpu, 8192 ram, 8 iterations, object type, object 8: 0.061ms
4.0 cpu, 8192 ram, 8 iterations, array_ type, array_ 8: 0.064ms
4.0 cpu, 8192 ram, 8 iterations, map___ type, map___ 8: 0.07ms
0.5 cpu, 16384 ram, 8 iterations, object type, object 8: 0.068ms
0.5 cpu, 16384 ram, 8 iterations, array_ type, array_ 8: 0.056ms
0.5 cpu, 16384 ram, 8 iterations, map___ type, map___ 8: 0.064ms
1.0 cpu, 16384 ram, 8 iterations, object type, object 8: 0.061ms
1.0 cpu, 16384 ram, 8 iterations, array_ type, array_ 8: 0.062ms
1.0 cpu, 16384 ram, 8 iterations, map___ type, map___ 8: 0.06ms
2.0 cpu, 16384 ram, 8 iterations, object type, object 8: 0.057ms
2.0 cpu, 16384 ram, 8 iterations, array_ type, array_ 8: 0.066ms
2.0 cpu, 16384 ram, 8 iterations, map___ type, map___ 8: 0.064ms
3.0 cpu, 16384 ram, 8 iterations, object type, object 8: 0.062ms
3.0 cpu, 16384 ram, 8 iterations, array_ type, array_ 8: 0.07ms
3.0 cpu, 16384 ram, 8 iterations, map___ type, map___ 8: 0.063ms
4.0 cpu, 16384 ram, 8 iterations, object type, object 8: 0.06ms
4.0 cpu, 16384 ram, 8 iterations, array_ type, array_ 8: 0.071ms
4.0 cpu, 16384 ram, 8 iterations, map___ type, map___ 8: 0.058ms
0.5 cpu, 128 ram, 9 iterations, object type, object 9: 0.069ms
0.5 cpu, 128 ram, 9 iterations, array_ type, array_ 9: 0.06ms
0.5 cpu, 128 ram, 9 iterations, map___ type, map___ 9: 0.06ms
1.0 cpu, 128 ram, 9 iterations, object type, object 9: 0.08ms
1.0 cpu, 128 ram, 9 iterations, array_ type, array_ 9: 0.067ms
1.0 cpu, 128 ram, 9 iterations, map___ type, map___ 9: 0.069ms
2.0 cpu, 128 ram, 9 iterations, object type, object 9: 0.057ms
2.0 cpu, 128 ram, 9 iterations, array_ type, array_ 9: 0.068ms
2.0 cpu, 128 ram, 9 iterations, map___ type, map___ 9: 0.068ms
3.0 cpu, 128 ram, 9 iterations, object type, object 9: 0.065ms
3.0 cpu, 128 ram, 9 iterations, array_ type, array_ 9: 0.071ms
3.0 cpu, 128 ram, 9 iterations, map___ type, map___ 9: 0.058ms
4.0 cpu, 128 ram, 9 iterations, object type, object 9: 0.057ms
4.0 cpu, 128 ram, 9 iterations, array_ type, array_ 9: 0.063ms
4.0 cpu, 128 ram, 9 iterations, map___ type, map___ 9: 0.059ms
0.5 cpu, 256 ram, 9 iterations, object type, object 9: 0.062ms
0.5 cpu, 256 ram, 9 iterations, array_ type, array_ 9: 0.066ms
0.5 cpu, 256 ram, 9 iterations, map___ type, map___ 9: 0.063ms
1.0 cpu, 256 ram, 9 iterations, object type, object 9: 0.063ms
1.0 cpu, 256 ram, 9 iterations, array_ type, array_ 9: 0.066ms
1.0 cpu, 256 ram, 9 iterations, map___ type, map___ 9: 0.06ms
2.0 cpu, 256 ram, 9 iterations, object type, object 9: 0.063ms
2.0 cpu, 256 ram, 9 iterations, array_ type, array_ 9: 0.063ms
2.0 cpu, 256 ram, 9 iterations, map___ type, map___ 9: 0.057ms
3.0 cpu, 256 ram, 9 iterations, object type, object 9: 0.062ms
3.0 cpu, 256 ram, 9 iterations, array_ type, array_ 9: 0.061ms
3.0 cpu, 256 ram, 9 iterations, map___ type, map___ 9: 0.059ms
4.0 cpu, 256 ram, 9 iterations, object type, object 9: 0.063ms
4.0 cpu, 256 ram, 9 iterations, array_ type, array_ 9: 0.061ms
4.0 cpu, 256 ram, 9 iterations, map___ type, map___ 9: 0.059ms
0.5 cpu, 512 ram, 9 iterations, object type, object 9: 0.063ms
0.5 cpu, 512 ram, 9 iterations, array_ type, array_ 9: 0.064ms
0.5 cpu, 512 ram, 9 iterations, map___ type, map___ 9: 0.06ms
1.0 cpu, 512 ram, 9 iterations, object type, object 9: 0.063ms
1.0 cpu, 512 ram, 9 iterations, array_ type, array_ 9: 0.06ms
1.0 cpu, 512 ram, 9 iterations, map___ type, map___ 9: 0.069ms
2.0 cpu, 512 ram, 9 iterations, object type, object 9: 0.064ms
2.0 cpu, 512 ram, 9 iterations, array_ type, array_ 9: 0.065ms
2.0 cpu, 512 ram, 9 iterations, map___ type, map___ 9: 0.06ms
3.0 cpu, 512 ram, 9 iterations, object type, object 9: 0.063ms
3.0 cpu, 512 ram, 9 iterations, array_ type, array_ 9: 0.061ms
3.0 cpu, 512 ram, 9 iterations, map___ type, map___ 9: 0.069ms
4.0 cpu, 512 ram, 9 iterations, object type, object 9: 0.059ms
4.0 cpu, 512 ram, 9 iterations, array_ type, array_ 9: 0.061ms
4.0 cpu, 512 ram, 9 iterations, map___ type, map___ 9: 0.061ms
0.5 cpu, 1024 ram, 9 iterations, object type, object 9: 0.068ms
0.5 cpu, 1024 ram, 9 iterations, array_ type, array_ 9: 0.066ms
0.5 cpu, 1024 ram, 9 iterations, map___ type, map___ 9: 0.071ms
1.0 cpu, 1024 ram, 9 iterations, object type, object 9: 0.06ms
1.0 cpu, 1024 ram, 9 iterations, array_ type, array_ 9: 0.062ms
1.0 cpu, 1024 ram, 9 iterations, map___ type, map___ 9: 0.073ms
2.0 cpu, 1024 ram, 9 iterations, object type, object 9: 0.066ms
2.0 cpu, 1024 ram, 9 iterations, array_ type, array_ 9: 0.074ms
2.0 cpu, 1024 ram, 9 iterations, map___ type, map___ 9: 0.06ms
3.0 cpu, 1024 ram, 9 iterations, object type, object 9: 0.061ms
3.0 cpu, 1024 ram, 9 iterations, array_ type, array_ 9: 0.066ms
3.0 cpu, 1024 ram, 9 iterations, map___ type, map___ 9: 0.088ms
4.0 cpu, 1024 ram, 9 iterations, object type, object 9: 0.074ms
4.0 cpu, 1024 ram, 9 iterations, array_ type, array_ 9: 0.06ms
4.0 cpu, 1024 ram, 9 iterations, map___ type, map___ 9: 0.071ms
0.5 cpu, 2048 ram, 9 iterations, object type, object 9: 0.065ms
0.5 cpu, 2048 ram, 9 iterations, array_ type, array_ 9: 0.061ms
0.5 cpu, 2048 ram, 9 iterations, map___ type, map___ 9: 0.077ms
1.0 cpu, 2048 ram, 9 iterations, object type, object 9: 0.063ms
1.0 cpu, 2048 ram, 9 iterations, array_ type, array_ 9: 0.062ms
1.0 cpu, 2048 ram, 9 iterations, map___ type, map___ 9: 0.058ms
2.0 cpu, 2048 ram, 9 iterations, object type, object 9: 0.067ms
2.0 cpu, 2048 ram, 9 iterations, array_ type, array_ 9: 0.063ms
2.0 cpu, 2048 ram, 9 iterations, map___ type, map___ 9: 0.073ms
3.0 cpu, 2048 ram, 9 iterations, object type, object 9: 0.064ms
3.0 cpu, 2048 ram, 9 iterations, array_ type, array_ 9: 0.067ms
3.0 cpu, 2048 ram, 9 iterations, map___ type, map___ 9: 0.06ms
4.0 cpu, 2048 ram, 9 iterations, object type, object 9: 0.061ms
4.0 cpu, 2048 ram, 9 iterations, array_ type, array_ 9: 0.059ms
4.0 cpu, 2048 ram, 9 iterations, map___ type, map___ 9: 0.062ms
0.5 cpu, 4096 ram, 9 iterations, object type, object 9: 0.064ms
0.5 cpu, 4096 ram, 9 iterations, array_ type, array_ 9: 0.062ms
0.5 cpu, 4096 ram, 9 iterations, map___ type, map___ 9: 0.056ms
1.0 cpu, 4096 ram, 9 iterations, object type, object 9: 0.058ms
1.0 cpu, 4096 ram, 9 iterations, array_ type, array_ 9: 0.069ms
1.0 cpu, 4096 ram, 9 iterations, map___ type, map___ 9: 0.075ms
2.0 cpu, 4096 ram, 9 iterations, object type, object 9: 0.063ms
2.0 cpu, 4096 ram, 9 iterations, array_ type, array_ 9: 0.059ms
2.0 cpu, 4096 ram, 9 iterations, map___ type, map___ 9: 0.064ms
3.0 cpu, 4096 ram, 9 iterations, object type, object 9: 0.079ms
3.0 cpu, 4096 ram, 9 iterations, array_ type, array_ 9: 0.062ms
3.0 cpu, 4096 ram, 9 iterations, map___ type, map___ 9: 0.063ms
4.0 cpu, 4096 ram, 9 iterations, object type, object 9: 0.059ms
4.0 cpu, 4096 ram, 9 iterations, array_ type, array_ 9: 0.061ms
4.0 cpu, 4096 ram, 9 iterations, map___ type, map___ 9: 0.059ms
0.5 cpu, 8192 ram, 9 iterations, object type, object 9: 0.061ms
0.5 cpu, 8192 ram, 9 iterations, array_ type, array_ 9: 0.064ms
0.5 cpu, 8192 ram, 9 iterations, map___ type, map___ 9: 0.057ms
1.0 cpu, 8192 ram, 9 iterations, object type, object 9: 0.063ms
1.0 cpu, 8192 ram, 9 iterations, array_ type, array_ 9: 0.059ms
1.0 cpu, 8192 ram, 9 iterations, map___ type, map___ 9: 0.056ms
2.0 cpu, 8192 ram, 9 iterations, object type, object 9: 0.062ms
2.0 cpu, 8192 ram, 9 iterations, array_ type, array_ 9: 0.065ms
2.0 cpu, 8192 ram, 9 iterations, map___ type, map___ 9: 0.061ms
3.0 cpu, 8192 ram, 9 iterations, object type, object 9: 0.07ms
3.0 cpu, 8192 ram, 9 iterations, array_ type, array_ 9: 0.066ms
3.0 cpu, 8192 ram, 9 iterations, map___ type, map___ 9: 0.06ms
4.0 cpu, 8192 ram, 9 iterations, object type, object 9: 0.055ms
4.0 cpu, 8192 ram, 9 iterations, array_ type, array_ 9: 0.06ms
4.0 cpu, 8192 ram, 9 iterations, map___ type, map___ 9: 0.06ms
0.5 cpu, 16384 ram, 9 iterations, object type, object 9: 0.061ms
0.5 cpu, 16384 ram, 9 iterations, array_ type, array_ 9: 0.061ms
0.5 cpu, 16384 ram, 9 iterations, map___ type, map___ 9: 0.062ms
1.0 cpu, 16384 ram, 9 iterations, object type, object 9: 0.059ms
1.0 cpu, 16384 ram, 9 iterations, array_ type, array_ 9: 0.059ms
1.0 cpu, 16384 ram, 9 iterations, map___ type, map___ 9: 0.06ms
2.0 cpu, 16384 ram, 9 iterations, object type, object 9: 0.061ms
2.0 cpu, 16384 ram, 9 iterations, array_ type, array_ 9: 0.058ms
2.0 cpu, 16384 ram, 9 iterations, map___ type, map___ 9: 0.062ms
3.0 cpu, 16384 ram, 9 iterations, object type, object 9: 0.06ms
3.0 cpu, 16384 ram, 9 iterations, array_ type, array_ 9: 0.062ms
3.0 cpu, 16384 ram, 9 iterations, map___ type, map___ 9: 0.061ms
4.0 cpu, 16384 ram, 9 iterations, object type, object 9: 0.057ms
4.0 cpu, 16384 ram, 9 iterations, array_ type, array_ 9: 0.06ms
4.0 cpu, 16384 ram, 9 iterations, map___ type, map___ 9: 0.059ms
0.5 cpu, 128 ram, 10 iterations, object type, object 10: 0.059ms
0.5 cpu, 128 ram, 10 iterations, array_ type, array_ 10: 0.065ms
0.5 cpu, 128 ram, 10 iterations, map___ type, map___ 10: 0.059ms
1.0 cpu, 128 ram, 10 iterations, object type, object 10: 0.061ms
1.0 cpu, 128 ram, 10 iterations, array_ type, array_ 10: 0.063ms
1.0 cpu, 128 ram, 10 iterations, map___ type, map___ 10: 0.059ms
2.0 cpu, 128 ram, 10 iterations, object type, object 10: 0.06ms
2.0 cpu, 128 ram, 10 iterations, array_ type, array_ 10: 0.062ms
2.0 cpu, 128 ram, 10 iterations, map___ type, map___ 10: 0.061ms
3.0 cpu, 128 ram, 10 iterations, object type, object 10: 0.065ms
3.0 cpu, 128 ram, 10 iterations, array_ type, array_ 10: 0.062ms
3.0 cpu, 128 ram, 10 iterations, map___ type, map___ 10: 0.061ms
4.0 cpu, 128 ram, 10 iterations, object type, object 10: 0.074ms
4.0 cpu, 128 ram, 10 iterations, array_ type, array_ 10: 0.065ms
4.0 cpu, 128 ram, 10 iterations, map___ type, map___ 10: 0.07ms
0.5 cpu, 256 ram, 10 iterations, object type, object 10: 0.066ms
0.5 cpu, 256 ram, 10 iterations, array_ type, array_ 10: 0.061ms
0.5 cpu, 256 ram, 10 iterations, map___ type, map___ 10: 0.058ms
1.0 cpu, 256 ram, 10 iterations, object type, object 10: 0.06ms
1.0 cpu, 256 ram, 10 iterations, array_ type, array_ 10: 0.063ms
1.0 cpu, 256 ram, 10 iterations, map___ type, map___ 10: 0.065ms
2.0 cpu, 256 ram, 10 iterations, object type, object 10: 0.06ms
2.0 cpu, 256 ram, 10 iterations, array_ type, array_ 10: 0.065ms
2.0 cpu, 256 ram, 10 iterations, map___ type, map___ 10: 0.06ms
3.0 cpu, 256 ram, 10 iterations, object type, object 10: 0.069ms
3.0 cpu, 256 ram, 10 iterations, array_ type, array_ 10: 0.074ms
3.0 cpu, 256 ram, 10 iterations, map___ type, map___ 10: 0.06ms
4.0 cpu, 256 ram, 10 iterations, object type, object 10: 0.061ms
4.0 cpu, 256 ram, 10 iterations, array_ type, array_ 10: 0.064ms
4.0 cpu, 256 ram, 10 iterations, map___ type, map___ 10: 0.071ms
0.5 cpu, 512 ram, 10 iterations, object type, object 10: 0.06ms
0.5 cpu, 512 ram, 10 iterations, array_ type, array_ 10: 0.062ms
0.5 cpu, 512 ram, 10 iterations, map___ type, map___ 10: 0.067ms
1.0 cpu, 512 ram, 10 iterations, object type, object 10: 0.066ms
1.0 cpu, 512 ram, 10 iterations, array_ type, array_ 10: 0.068ms
1.0 cpu, 512 ram, 10 iterations, map___ type, map___ 10: 0.086ms
2.0 cpu, 512 ram, 10 iterations, object type, object 10: 0.064ms
2.0 cpu, 512 ram, 10 iterations, array_ type, array_ 10: 0.067ms
2.0 cpu, 512 ram, 10 iterations, map___ type, map___ 10: 0.067ms
3.0 cpu, 512 ram, 10 iterations, object type, object 10: 0.063ms
3.0 cpu, 512 ram, 10 iterations, array_ type, array_ 10: 0.063ms
3.0 cpu, 512 ram, 10 iterations, map___ type, map___ 10: 0.062ms
4.0 cpu, 512 ram, 10 iterations, object type, object 10: 0.072ms
4.0 cpu, 512 ram, 10 iterations, array_ type, array_ 10: 0.06ms
4.0 cpu, 512 ram, 10 iterations, map___ type, map___ 10: 0.065ms
0.5 cpu, 1024 ram, 10 iterations, object type, object 10: 0.066ms
0.5 cpu, 1024 ram, 10 iterations, array_ type, array_ 10: 0.06ms
0.5 cpu, 1024 ram, 10 iterations, map___ type, map___ 10: 0.063ms
1.0 cpu, 1024 ram, 10 iterations, object type, object 10: 0.064ms
1.0 cpu, 1024 ram, 10 iterations, array_ type, array_ 10: 0.07ms
1.0 cpu, 1024 ram, 10 iterations, map___ type, map___ 10: 0.058ms
2.0 cpu, 1024 ram, 10 iterations, object type, object 10: 0.092ms
2.0 cpu, 1024 ram, 10 iterations, array_ type, array_ 10: 0.089ms
2.0 cpu, 1024 ram, 10 iterations, map___ type, map___ 10: 0.07ms
3.0 cpu, 1024 ram, 10 iterations, object type, object 10: 0.072ms
3.0 cpu, 1024 ram, 10 iterations, array_ type, array_ 10: 0.059ms
3.0 cpu, 1024 ram, 10 iterations, map___ type, map___ 10: 0.064ms
4.0 cpu, 1024 ram, 10 iterations, object type, object 10: 0.065ms
4.0 cpu, 1024 ram, 10 iterations, array_ type, array_ 10: 0.061ms
4.0 cpu, 1024 ram, 10 iterations, map___ type, map___ 10: 0.063ms
0.5 cpu, 2048 ram, 10 iterations, object type, object 10: 0.065ms
0.5 cpu, 2048 ram, 10 iterations, array_ type, array_ 10: 0.065ms
0.5 cpu, 2048 ram, 10 iterations, map___ type, map___ 10: 0.062ms
1.0 cpu, 2048 ram, 10 iterations, object type, object 10: 0.064ms
1.0 cpu, 2048 ram, 10 iterations, array_ type, array_ 10: 0.063ms
1.0 cpu, 2048 ram, 10 iterations, map___ type, map___ 10: 0.062ms
2.0 cpu, 2048 ram, 10 iterations, object type, object 10: 0.064ms
2.0 cpu, 2048 ram, 10 iterations, array_ type, array_ 10: 0.064ms
2.0 cpu, 2048 ram, 10 iterations, map___ type, map___ 10: 0.068ms
3.0 cpu, 2048 ram, 10 iterations, object type, object 10: 0.058ms
3.0 cpu, 2048 ram, 10 iterations, array_ type, array_ 10: 0.063ms
3.0 cpu, 2048 ram, 10 iterations, map___ type, map___ 10: 0.076ms
4.0 cpu, 2048 ram, 10 iterations, object type, object 10: 0.058ms
4.0 cpu, 2048 ram, 10 iterations, array_ type, array_ 10: 0.067ms
4.0 cpu, 2048 ram, 10 iterations, map___ type, map___ 10: 0.063ms
0.5 cpu, 4096 ram, 10 iterations, object type, object 10: 0.064ms
0.5 cpu, 4096 ram, 10 iterations, array_ type, array_ 10: 0.063ms
0.5 cpu, 4096 ram, 10 iterations, map___ type, map___ 10: 0.074ms
1.0 cpu, 4096 ram, 10 iterations, object type, object 10: 0.058ms
1.0 cpu, 4096 ram, 10 iterations, array_ type, array_ 10: 0.059ms
1.0 cpu, 4096 ram, 10 iterations, map___ type, map___ 10: 0.06ms
2.0 cpu, 4096 ram, 10 iterations, object type, object 10: 0.059ms
2.0 cpu, 4096 ram, 10 iterations, array_ type, array_ 10: 0.059ms
2.0 cpu, 4096 ram, 10 iterations, map___ type, map___ 10: 0.062ms
3.0 cpu, 4096 ram, 10 iterations, object type, object 10: 0.073ms
3.0 cpu, 4096 ram, 10 iterations, array_ type, array_ 10: 0.068ms
3.0 cpu, 4096 ram, 10 iterations, map___ type, map___ 10: 0.068ms
4.0 cpu, 4096 ram, 10 iterations, object type, object 10: 0.064ms
4.0 cpu, 4096 ram, 10 iterations, array_ type, array_ 10: 0.064ms
4.0 cpu, 4096 ram, 10 iterations, map___ type, map___ 10: 0.064ms
0.5 cpu, 8192 ram, 10 iterations, object type, object 10: 0.063ms
0.5 cpu, 8192 ram, 10 iterations, array_ type, array_ 10: 0.083ms
0.5 cpu, 8192 ram, 10 iterations, map___ type, map___ 10: 0.064ms
1.0 cpu, 8192 ram, 10 iterations, object type, object 10: 0.075ms
1.0 cpu, 8192 ram, 10 iterations, array_ type, array_ 10: 0.065ms
1.0 cpu, 8192 ram, 10 iterations, map___ type, map___ 10: 0.065ms
2.0 cpu, 8192 ram, 10 iterations, object type, object 10: 0.059ms
2.0 cpu, 8192 ram, 10 iterations, array_ type, array_ 10: 0.062ms
2.0 cpu, 8192 ram, 10 iterations, map___ type, map___ 10: 0.064ms
3.0 cpu, 8192 ram, 10 iterations, object type, object 10: 0.06ms
3.0 cpu, 8192 ram, 10 iterations, array_ type, array_ 10: 0.055ms
3.0 cpu, 8192 ram, 10 iterations, map___ type, map___ 10: 0.058ms
4.0 cpu, 8192 ram, 10 iterations, object type, object 10: 0.079ms
4.0 cpu, 8192 ram, 10 iterations, array_ type, array_ 10: 0.059ms
4.0 cpu, 8192 ram, 10 iterations, map___ type, map___ 10: 0.061ms
0.5 cpu, 16384 ram, 10 iterations, object type, object 10: 0.061ms
0.5 cpu, 16384 ram, 10 iterations, array_ type, array_ 10: 0.058ms
0.5 cpu, 16384 ram, 10 iterations, map___ type, map___ 10: 0.062ms
1.0 cpu, 16384 ram, 10 iterations, object type, object 10: 0.091ms
1.0 cpu, 16384 ram, 10 iterations, array_ type, array_ 10: 0.067ms
1.0 cpu, 16384 ram, 10 iterations, map___ type, map___ 10: 0.061ms
2.0 cpu, 16384 ram, 10 iterations, object type, object 10: 0.077ms
2.0 cpu, 16384 ram, 10 iterations, array_ type, array_ 10: 0.056ms
2.0 cpu, 16384 ram, 10 iterations, map___ type, map___ 10: 0.077ms
3.0 cpu, 16384 ram, 10 iterations, object type, object 10: 0.065ms
3.0 cpu, 16384 ram, 10 iterations, array_ type, array_ 10: 0.075ms
3.0 cpu, 16384 ram, 10 iterations, map___ type, map___ 10: 0.06ms
4.0 cpu, 16384 ram, 10 iterations, object type, object 10: 0.078ms
4.0 cpu, 16384 ram, 10 iterations, array_ type, array_ 10: 0.065ms
4.0 cpu, 16384 ram, 10 iterations, map___ type, map___ 10: 0.067ms
0.5 cpu, 128 ram, 20 iterations, object type, object 20: 0.068ms
0.5 cpu, 128 ram, 20 iterations, array_ type, array_ 20: 0.064ms
0.5 cpu, 128 ram, 20 iterations, map___ type, map___ 20: 0.061ms
1.0 cpu, 128 ram, 20 iterations, object type, object 20: 0.061ms
1.0 cpu, 128 ram, 20 iterations, array_ type, array_ 20: 0.064ms
1.0 cpu, 128 ram, 20 iterations, map___ type, map___ 20: 0.063ms
2.0 cpu, 128 ram, 20 iterations, object type, object 20: 0.07ms
2.0 cpu, 128 ram, 20 iterations, array_ type, array_ 20: 0.064ms
2.0 cpu, 128 ram, 20 iterations, map___ type, map___ 20: 0.058ms
3.0 cpu, 128 ram, 20 iterations, object type, object 20: 0.066ms
3.0 cpu, 128 ram, 20 iterations, array_ type, array_ 20: 0.059ms
3.0 cpu, 128 ram, 20 iterations, map___ type, map___ 20: 0.066ms
4.0 cpu, 128 ram, 20 iterations, object type, object 20: 0.068ms
4.0 cpu, 128 ram, 20 iterations, array_ type, array_ 20: 0.062ms
4.0 cpu, 128 ram, 20 iterations, map___ type, map___ 20: 0.061ms
0.5 cpu, 256 ram, 20 iterations, object type, object 20: 0.065ms
0.5 cpu, 256 ram, 20 iterations, array_ type, array_ 20: 0.072ms
0.5 cpu, 256 ram, 20 iterations, map___ type, map___ 20: 0.064ms
1.0 cpu, 256 ram, 20 iterations, object type, object 20: 0.09ms
1.0 cpu, 256 ram, 20 iterations, array_ type, array_ 20: 0.064ms
1.0 cpu, 256 ram, 20 iterations, map___ type, map___ 20: 0.064ms
2.0 cpu, 256 ram, 20 iterations, object type, object 20: 0.064ms
2.0 cpu, 256 ram, 20 iterations, array_ type, array_ 20: 0.069ms
2.0 cpu, 256 ram, 20 iterations, map___ type, map___ 20: 0.063ms
3.0 cpu, 256 ram, 20 iterations, object type, object 20: 0.06ms
3.0 cpu, 256 ram, 20 iterations, array_ type, array_ 20: 0.062ms
3.0 cpu, 256 ram, 20 iterations, map___ type, map___ 20: 0.065ms
4.0 cpu, 256 ram, 20 iterations, object type, object 20: 0.064ms
4.0 cpu, 256 ram, 20 iterations, array_ type, array_ 20: 0.072ms
4.0 cpu, 256 ram, 20 iterations, map___ type, map___ 20: 0.063ms
0.5 cpu, 512 ram, 20 iterations, object type, object 20: 0.099ms
0.5 cpu, 512 ram, 20 iterations, array_ type, array_ 20: 0.064ms
0.5 cpu, 512 ram, 20 iterations, map___ type, map___ 20: 0.067ms
1.0 cpu, 512 ram, 20 iterations, object type, object 20: 0.061ms
1.0 cpu, 512 ram, 20 iterations, array_ type, array_ 20: 0.066ms
1.0 cpu, 512 ram, 20 iterations, map___ type, map___ 20: 0.063ms
2.0 cpu, 512 ram, 20 iterations, object type, object 20: 0.064ms
2.0 cpu, 512 ram, 20 iterations, array_ type, array_ 20: 0.066ms
2.0 cpu, 512 ram, 20 iterations, map___ type, map___ 20: 0.068ms
3.0 cpu, 512 ram, 20 iterations, object type, object 20: 0.061ms
3.0 cpu, 512 ram, 20 iterations, array_ type, array_ 20: 0.08ms
3.0 cpu, 512 ram, 20 iterations, map___ type, map___ 20: 0.059ms
4.0 cpu, 512 ram, 20 iterations, object type, object 20: 0.062ms
4.0 cpu, 512 ram, 20 iterations, array_ type, array_ 20: 0.075ms
4.0 cpu, 512 ram, 20 iterations, map___ type, map___ 20: 0.073ms
0.5 cpu, 1024 ram, 20 iterations, object type, object 20: 0.067ms
0.5 cpu, 1024 ram, 20 iterations, array_ type, array_ 20: 0.083ms
0.5 cpu, 1024 ram, 20 iterations, map___ type, map___ 20: 0.064ms
1.0 cpu, 1024 ram, 20 iterations, object type, object 20: 0.064ms
1.0 cpu, 1024 ram, 20 iterations, array_ type, array_ 20: 0.125ms
1.0 cpu, 1024 ram, 20 iterations, map___ type, map___ 20: 0.065ms
2.0 cpu, 1024 ram, 20 iterations, object type, object 20: 0.071ms
2.0 cpu, 1024 ram, 20 iterations, array_ type, array_ 20: 0.065ms
2.0 cpu, 1024 ram, 20 iterations, map___ type, map___ 20: 0.085ms
3.0 cpu, 1024 ram, 20 iterations, object type, object 20: 0.067ms
3.0 cpu, 1024 ram, 20 iterations, array_ type, array_ 20: 0.063ms
3.0 cpu, 1024 ram, 20 iterations, map___ type, map___ 20: 0.057ms
4.0 cpu, 1024 ram, 20 iterations, object type, object 20: 0.062ms
4.0 cpu, 1024 ram, 20 iterations, array_ type, array_ 20: 0.062ms
4.0 cpu, 1024 ram, 20 iterations, map___ type, map___ 20: 0.061ms
0.5 cpu, 2048 ram, 20 iterations, object type, object 20: 0.067ms
0.5 cpu, 2048 ram, 20 iterations, array_ type, array_ 20: 0.065ms
0.5 cpu, 2048 ram, 20 iterations, map___ type, map___ 20: 0.067ms
1.0 cpu, 2048 ram, 20 iterations, object type, object 20: 0.06ms
1.0 cpu, 2048 ram, 20 iterations, array_ type, array_ 20: 0.063ms
1.0 cpu, 2048 ram, 20 iterations, map___ type, map___ 20: 0.059ms
2.0 cpu, 2048 ram, 20 iterations, object type, object 20: 0.066ms
2.0 cpu, 2048 ram, 20 iterations, array_ type, array_ 20: 0.065ms
2.0 cpu, 2048 ram, 20 iterations, map___ type, map___ 20: 0.072ms
3.0 cpu, 2048 ram, 20 iterations, object type, object 20: 0.064ms
3.0 cpu, 2048 ram, 20 iterations, array_ type, array_ 20: 0.064ms
3.0 cpu, 2048 ram, 20 iterations, map___ type, map___ 20: 0.06ms
4.0 cpu, 2048 ram, 20 iterations, object type, object 20: 0.068ms
4.0 cpu, 2048 ram, 20 iterations, array_ type, array_ 20: 0.067ms
4.0 cpu, 2048 ram, 20 iterations, map___ type, map___ 20: 0.06ms
0.5 cpu, 4096 ram, 20 iterations, object type, object 20: 0.066ms
0.5 cpu, 4096 ram, 20 iterations, array_ type, array_ 20: 0.071ms
0.5 cpu, 4096 ram, 20 iterations, map___ type, map___ 20: 0.07ms
1.0 cpu, 4096 ram, 20 iterations, object type, object 20: 0.067ms
1.0 cpu, 4096 ram, 20 iterations, array_ type, array_ 20: 0.091ms
1.0 cpu, 4096 ram, 20 iterations, map___ type, map___ 20: 0.061ms
2.0 cpu, 4096 ram, 20 iterations, object type, object 20: 0.066ms
2.0 cpu, 4096 ram, 20 iterations, array_ type, array_ 20: 0.075ms
2.0 cpu, 4096 ram, 20 iterations, map___ type, map___ 20: 0.062ms
3.0 cpu, 4096 ram, 20 iterations, object type, object 20: 0.061ms
3.0 cpu, 4096 ram, 20 iterations, array_ type, array_ 20: 0.065ms
3.0 cpu, 4096 ram, 20 iterations, map___ type, map___ 20: 0.059ms
4.0 cpu, 4096 ram, 20 iterations, object type, object 20: 0.063ms
4.0 cpu, 4096 ram, 20 iterations, array_ type, array_ 20: 0.078ms
4.0 cpu, 4096 ram, 20 iterations, map___ type, map___ 20: 0.066ms
0.5 cpu, 8192 ram, 20 iterations, object type, object 20: 0.062ms
0.5 cpu, 8192 ram, 20 iterations, array_ type, array_ 20: 0.068ms
0.5 cpu, 8192 ram, 20 iterations, map___ type, map___ 20: 0.062ms
1.0 cpu, 8192 ram, 20 iterations, object type, object 20: 0.061ms
1.0 cpu, 8192 ram, 20 iterations, array_ type, array_ 20: 0.061ms
1.0 cpu, 8192 ram, 20 iterations, map___ type, map___ 20: 0.069ms
2.0 cpu, 8192 ram, 20 iterations, object type, object 20: 0.076ms
2.0 cpu, 8192 ram, 20 iterations, array_ type, array_ 20: 0.061ms
2.0 cpu, 8192 ram, 20 iterations, map___ type, map___ 20: 0.066ms
3.0 cpu, 8192 ram, 20 iterations, object type, object 20: 0.084ms
3.0 cpu, 8192 ram, 20 iterations, array_ type, array_ 20: 0.066ms
3.0 cpu, 8192 ram, 20 iterations, map___ type, map___ 20: 0.057ms
4.0 cpu, 8192 ram, 20 iterations, object type, object 20: 0.062ms
4.0 cpu, 8192 ram, 20 iterations, array_ type, array_ 20: 0.074ms
4.0 cpu, 8192 ram, 20 iterations, map___ type, map___ 20: 0.072ms
0.5 cpu, 16384 ram, 20 iterations, object type, object 20: 0.062ms
0.5 cpu, 16384 ram, 20 iterations, array_ type, array_ 20: 0.063ms
0.5 cpu, 16384 ram, 20 iterations, map___ type, map___ 20: 0.074ms
1.0 cpu, 16384 ram, 20 iterations, object type, object 20: 0.06ms
1.0 cpu, 16384 ram, 20 iterations, array_ type, array_ 20: 0.061ms
1.0 cpu, 16384 ram, 20 iterations, map___ type, map___ 20: 0.072ms
2.0 cpu, 16384 ram, 20 iterations, object type, object 20: 0.062ms
2.0 cpu, 16384 ram, 20 iterations, array_ type, array_ 20: 0.064ms
2.0 cpu, 16384 ram, 20 iterations, map___ type, map___ 20: 0.06ms
3.0 cpu, 16384 ram, 20 iterations, object type, object 20: 0.059ms
3.0 cpu, 16384 ram, 20 iterations, array_ type, array_ 20: 0.062ms
3.0 cpu, 16384 ram, 20 iterations, map___ type, map___ 20: 0.071ms
4.0 cpu, 16384 ram, 20 iterations, object type, object 20: 0.062ms
4.0 cpu, 16384 ram, 20 iterations, array_ type, array_ 20: 0.062ms
4.0 cpu, 16384 ram, 20 iterations, map___ type, map___ 20: 0.065ms
0.5 cpu, 128 ram, 30 iterations, object type, object 30: 0.07ms
0.5 cpu, 128 ram, 30 iterations, array_ type, array_ 30: 0.093ms
0.5 cpu, 128 ram, 30 iterations, map___ type, map___ 30: 0.071ms
1.0 cpu, 128 ram, 30 iterations, object type, object 30: 0.07ms
1.0 cpu, 128 ram, 30 iterations, array_ type, array_ 30: 0.088ms
1.0 cpu, 128 ram, 30 iterations, map___ type, map___ 30: 0.066ms
2.0 cpu, 128 ram, 30 iterations, object type, object 30: 0.065ms
2.0 cpu, 128 ram, 30 iterations, array_ type, array_ 30: 0.072ms
2.0 cpu, 128 ram, 30 iterations, map___ type, map___ 30: 0.069ms
3.0 cpu, 128 ram, 30 iterations, object type, object 30: 0.076ms
3.0 cpu, 128 ram, 30 iterations, array_ type, array_ 30: 0.075ms
3.0 cpu, 128 ram, 30 iterations, map___ type, map___ 30: 0.094ms
4.0 cpu, 128 ram, 30 iterations, object type, object 30: 0.071ms
4.0 cpu, 128 ram, 30 iterations, array_ type, array_ 30: 0.08ms
4.0 cpu, 128 ram, 30 iterations, map___ type, map___ 30: 0.066ms
0.5 cpu, 256 ram, 30 iterations, object type, object 30: 0.082ms
0.5 cpu, 256 ram, 30 iterations, array_ type, array_ 30: 0.072ms
0.5 cpu, 256 ram, 30 iterations, map___ type, map___ 30: 0.069ms
1.0 cpu, 256 ram, 30 iterations, object type, object 30: 0.079ms
1.0 cpu, 256 ram, 30 iterations, array_ type, array_ 30: 0.07ms
1.0 cpu, 256 ram, 30 iterations, map___ type, map___ 30: 0.066ms
2.0 cpu, 256 ram, 30 iterations, object type, object 30: 0.073ms
2.0 cpu, 256 ram, 30 iterations, array_ type, array_ 30: 0.074ms
2.0 cpu, 256 ram, 30 iterations, map___ type, map___ 30: 0.071ms
3.0 cpu, 256 ram, 30 iterations, object type, object 30: 0.071ms
3.0 cpu, 256 ram, 30 iterations, array_ type, array_ 30: 0.066ms
3.0 cpu, 256 ram, 30 iterations, map___ type, map___ 30: 0.084ms
4.0 cpu, 256 ram, 30 iterations, object type, object 30: 0.078ms
4.0 cpu, 256 ram, 30 iterations, array_ type, array_ 30: 0.067ms
4.0 cpu, 256 ram, 30 iterations, map___ type, map___ 30: 0.066ms
0.5 cpu, 512 ram, 30 iterations, object type, object 30: 0.076ms
0.5 cpu, 512 ram, 30 iterations, array_ type, array_ 30: 0.077ms
0.5 cpu, 512 ram, 30 iterations, map___ type, map___ 30: 0.073ms
1.0 cpu, 512 ram, 30 iterations, object type, object 30: 0.076ms
1.0 cpu, 512 ram, 30 iterations, array_ type, array_ 30: 0.067ms
1.0 cpu, 512 ram, 30 iterations, map___ type, map___ 30: 0.069ms
2.0 cpu, 512 ram, 30 iterations, object type, object 30: 0.066ms
2.0 cpu, 512 ram, 30 iterations, array_ type, array_ 30: 0.073ms
2.0 cpu, 512 ram, 30 iterations, map___ type, map___ 30: 0.079ms
3.0 cpu, 512 ram, 30 iterations, object type, object 30: 0.071ms
3.0 cpu, 512 ram, 30 iterations, array_ type, array_ 30: 0.071ms
3.0 cpu, 512 ram, 30 iterations, map___ type, map___ 30: 0.082ms
4.0 cpu, 512 ram, 30 iterations, object type, object 30: 0.07ms
4.0 cpu, 512 ram, 30 iterations, array_ type, array_ 30: 0.078ms
4.0 cpu, 512 ram, 30 iterations, map___ type, map___ 30: 0.072ms
0.5 cpu, 1024 ram, 30 iterations, object type, object 30: 0.068ms
0.5 cpu, 1024 ram, 30 iterations, array_ type, array_ 30: 0.076ms
0.5 cpu, 1024 ram, 30 iterations, map___ type, map___ 30: 0.071ms
1.0 cpu, 1024 ram, 30 iterations, object type, object 30: 0.09ms
1.0 cpu, 1024 ram, 30 iterations, array_ type, array_ 30: 0.087ms
1.0 cpu, 1024 ram, 30 iterations, map___ type, map___ 30: 0.072ms
2.0 cpu, 1024 ram, 30 iterations, object type, object 30: 0.077ms
2.0 cpu, 1024 ram, 30 iterations, array_ type, array_ 30: 0.086ms
2.0 cpu, 1024 ram, 30 iterations, map___ type, map___ 30: 0.073ms
3.0 cpu, 1024 ram, 30 iterations, object type, object 30: 0.07ms
3.0 cpu, 1024 ram, 30 iterations, array_ type, array_ 30: 0.085ms
3.0 cpu, 1024 ram, 30 iterations, map___ type, map___ 30: 0.071ms
4.0 cpu, 1024 ram, 30 iterations, object type, object 30: 0.069ms
4.0 cpu, 1024 ram, 30 iterations, array_ type, array_ 30: 0.07ms
4.0 cpu, 1024 ram, 30 iterations, map___ type, map___ 30: 0.074ms
0.5 cpu, 2048 ram, 30 iterations, object type, object 30: 0.084ms
0.5 cpu, 2048 ram, 30 iterations, array_ type, array_ 30: 0.088ms
0.5 cpu, 2048 ram, 30 iterations, map___ type, map___ 30: 0.077ms
1.0 cpu, 2048 ram, 30 iterations, object type, object 30: 0.079ms
1.0 cpu, 2048 ram, 30 iterations, array_ type, array_ 30: 0.068ms
1.0 cpu, 2048 ram, 30 iterations, map___ type, map___ 30: 0.079ms
2.0 cpu, 2048 ram, 30 iterations, object type, object 30: 0.085ms
2.0 cpu, 2048 ram, 30 iterations, array_ type, array_ 30: 0.084ms
2.0 cpu, 2048 ram, 30 iterations, map___ type, map___ 30: 0.067ms
3.0 cpu, 2048 ram, 30 iterations, object type, object 30: 0.075ms
3.0 cpu, 2048 ram, 30 iterations, array_ type, array_ 30: 0.071ms
3.0 cpu, 2048 ram, 30 iterations, map___ type, map___ 30: 0.067ms
4.0 cpu, 2048 ram, 30 iterations, object type, object 30: 0.08ms
4.0 cpu, 2048 ram, 30 iterations, array_ type, array_ 30: 0.071ms
4.0 cpu, 2048 ram, 30 iterations, map___ type, map___ 30: 0.072ms
0.5 cpu, 4096 ram, 30 iterations, object type, object 30: 0.075ms
0.5 cpu, 4096 ram, 30 iterations, array_ type, array_ 30: 0.076ms
0.5 cpu, 4096 ram, 30 iterations, map___ type, map___ 30: 0.074ms
1.0 cpu, 4096 ram, 30 iterations, object type, object 30: 0.084ms
1.0 cpu, 4096 ram, 30 iterations, array_ type, array_ 30: 0.08ms
1.0 cpu, 4096 ram, 30 iterations, map___ type, map___ 30: 0.074ms
2.0 cpu, 4096 ram, 30 iterations, object type, object 30: 0.078ms
2.0 cpu, 4096 ram, 30 iterations, array_ type, array_ 30: 0.074ms
2.0 cpu, 4096 ram, 30 iterations, map___ type, map___ 30: 0.076ms
3.0 cpu, 4096 ram, 30 iterations, object type, object 30: 0.069ms
3.0 cpu, 4096 ram, 30 iterations, array_ type, array_ 30: 0.066ms
3.0 cpu, 4096 ram, 30 iterations, map___ type, map___ 30: 0.104ms
4.0 cpu, 4096 ram, 30 iterations, object type, object 30: 0.071ms
4.0 cpu, 4096 ram, 30 iterations, array_ type, array_ 30: 0.073ms
4.0 cpu, 4096 ram, 30 iterations, map___ type, map___ 30: 0.072ms
0.5 cpu, 8192 ram, 30 iterations, object type, object 30: 0.066ms
0.5 cpu, 8192 ram, 30 iterations, array_ type, array_ 30: 0.078ms
0.5 cpu, 8192 ram, 30 iterations, map___ type, map___ 30: 0.075ms
1.0 cpu, 8192 ram, 30 iterations, object type, object 30: 0.076ms
1.0 cpu, 8192 ram, 30 iterations, array_ type, array_ 30: 0.091ms
1.0 cpu, 8192 ram, 30 iterations, map___ type, map___ 30: 0.073ms
2.0 cpu, 8192 ram, 30 iterations, object type, object 30: 0.077ms
2.0 cpu, 8192 ram, 30 iterations, array_ type, array_ 30: 0.072ms
2.0 cpu, 8192 ram, 30 iterations, map___ type, map___ 30: 0.068ms
3.0 cpu, 8192 ram, 30 iterations, object type, object 30: 0.082ms
3.0 cpu, 8192 ram, 30 iterations, array_ type, array_ 30: 0.072ms
3.0 cpu, 8192 ram, 30 iterations, map___ type, map___ 30: 0.073ms
4.0 cpu, 8192 ram, 30 iterations, object type, object 30: 0.067ms
4.0 cpu, 8192 ram, 30 iterations, array_ type, array_ 30: 0.078ms
4.0 cpu, 8192 ram, 30 iterations, map___ type, map___ 30: 0.072ms
0.5 cpu, 16384 ram, 30 iterations, object type, object 30: 0.077ms
0.5 cpu, 16384 ram, 30 iterations, array_ type, array_ 30: 0.067ms
0.5 cpu, 16384 ram, 30 iterations, map___ type, map___ 30: 0.071ms
1.0 cpu, 16384 ram, 30 iterations, object type, object 30: 0.076ms
1.0 cpu, 16384 ram, 30 iterations, array_ type, array_ 30: 0.091ms
1.0 cpu, 16384 ram, 30 iterations, map___ type, map___ 30: 0.067ms
2.0 cpu, 16384 ram, 30 iterations, object type, object 30: 0.078ms
2.0 cpu, 16384 ram, 30 iterations, array_ type, array_ 30: 0.083ms
2.0 cpu, 16384 ram, 30 iterations, map___ type, map___ 30: 0.101ms
3.0 cpu, 16384 ram, 30 iterations, object type, object 30: 0.071ms
3.0 cpu, 16384 ram, 30 iterations, array_ type, array_ 30: 0.071ms
3.0 cpu, 16384 ram, 30 iterations, map___ type, map___ 30: 0.066ms
4.0 cpu, 16384 ram, 30 iterations, object type, object 30: 0.067ms
4.0 cpu, 16384 ram, 30 iterations, array_ type, array_ 30: 0.078ms
4.0 cpu, 16384 ram, 30 iterations, map___ type, map___ 30: 0.071ms
0.5 cpu, 128 ram, 40 iterations, object type, object 40: 0.079ms
0.5 cpu, 128 ram, 40 iterations, array_ type, array_ 40: 0.079ms
0.5 cpu, 128 ram, 40 iterations, map___ type, map___ 40: 0.069ms
1.0 cpu, 128 ram, 40 iterations, object type, object 40: 0.074ms
1.0 cpu, 128 ram, 40 iterations, array_ type, array_ 40: 0.077ms
1.0 cpu, 128 ram, 40 iterations, map___ type, map___ 40: 0.067ms
2.0 cpu, 128 ram, 40 iterations, object type, object 40: 0.076ms
2.0 cpu, 128 ram, 40 iterations, array_ type, array_ 40: 0.068ms
2.0 cpu, 128 ram, 40 iterations, map___ type, map___ 40: 0.09ms
3.0 cpu, 128 ram, 40 iterations, object type, object 40: 0.076ms
3.0 cpu, 128 ram, 40 iterations, array_ type, array_ 40: 0.079ms
3.0 cpu, 128 ram, 40 iterations, map___ type, map___ 40: 0.073ms
4.0 cpu, 128 ram, 40 iterations, object type, object 40: 0.076ms
4.0 cpu, 128 ram, 40 iterations, array_ type, array_ 40: 0.073ms
4.0 cpu, 128 ram, 40 iterations, map___ type, map___ 40: 0.079ms
0.5 cpu, 256 ram, 40 iterations, object type, object 40: 0.074ms
0.5 cpu, 256 ram, 40 iterations, array_ type, array_ 40: 0.09ms
0.5 cpu, 256 ram, 40 iterations, map___ type, map___ 40: 0.103ms
1.0 cpu, 256 ram, 40 iterations, object type, object 40: 0.071ms
1.0 cpu, 256 ram, 40 iterations, array_ type, array_ 40: 0.074ms
1.0 cpu, 256 ram, 40 iterations, map___ type, map___ 40: 0.079ms
2.0 cpu, 256 ram, 40 iterations, object type, object 40: 0.073ms
2.0 cpu, 256 ram, 40 iterations, array_ type, array_ 40: 0.074ms
2.0 cpu, 256 ram, 40 iterations, map___ type, map___ 40: 0.081ms
3.0 cpu, 256 ram, 40 iterations, object type, object 40: 0.066ms
3.0 cpu, 256 ram, 40 iterations, array_ type, array_ 40: 0.082ms
3.0 cpu, 256 ram, 40 iterations, map___ type, map___ 40: 0.066ms
4.0 cpu, 256 ram, 40 iterations, object type, object 40: 0.08ms
4.0 cpu, 256 ram, 40 iterations, array_ type, array_ 40: 0.075ms
4.0 cpu, 256 ram, 40 iterations, map___ type, map___ 40: 0.065ms
0.5 cpu, 512 ram, 40 iterations, object type, object 40: 0.073ms
0.5 cpu, 512 ram, 40 iterations, array_ type, array_ 40: 0.075ms
0.5 cpu, 512 ram, 40 iterations, map___ type, map___ 40: 0.074ms
1.0 cpu, 512 ram, 40 iterations, object type, object 40: 0.083ms
1.0 cpu, 512 ram, 40 iterations, array_ type, array_ 40: 0.071ms
1.0 cpu, 512 ram, 40 iterations, map___ type, map___ 40: 0.069ms
2.0 cpu, 512 ram, 40 iterations, object type, object 40: 0.073ms
2.0 cpu, 512 ram, 40 iterations, array_ type, array_ 40: 0.078ms
2.0 cpu, 512 ram, 40 iterations, map___ type, map___ 40: 0.065ms
3.0 cpu, 512 ram, 40 iterations, object type, object 40: 0.079ms
3.0 cpu, 512 ram, 40 iterations, array_ type, array_ 40: 0.076ms
3.0 cpu, 512 ram, 40 iterations, map___ type, map___ 40: 0.071ms
4.0 cpu, 512 ram, 40 iterations, object type, object 40: 0.081ms
4.0 cpu, 512 ram, 40 iterations, array_ type, array_ 40: 0.065ms
4.0 cpu, 512 ram, 40 iterations, map___ type, map___ 40: 0.073ms
0.5 cpu, 1024 ram, 40 iterations, object type, object 40: 0.067ms
0.5 cpu, 1024 ram, 40 iterations, array_ type, array_ 40: 0.098ms
0.5 cpu, 1024 ram, 40 iterations, map___ type, map___ 40: 0.074ms
1.0 cpu, 1024 ram, 40 iterations, object type, object 40: 0.066ms
1.0 cpu, 1024 ram, 40 iterations, array_ type, array_ 40: 0.082ms
1.0 cpu, 1024 ram, 40 iterations, map___ type, map___ 40: 0.102ms
2.0 cpu, 1024 ram, 40 iterations, object type, object 40: 0.087ms
2.0 cpu, 1024 ram, 40 iterations, array_ type, array_ 40: 0.077ms
2.0 cpu, 1024 ram, 40 iterations, map___ type, map___ 40: 0.067ms
3.0 cpu, 1024 ram, 40 iterations, object type, object 40: 0.075ms
3.0 cpu, 1024 ram, 40 iterations, array_ type, array_ 40: 0.066ms
3.0 cpu, 1024 ram, 40 iterations, map___ type, map___ 40: 0.074ms
4.0 cpu, 1024 ram, 40 iterations, object type, object 40: 0.079ms
4.0 cpu, 1024 ram, 40 iterations, array_ type, array_ 40: 0.07ms
4.0 cpu, 1024 ram, 40 iterations, map___ type, map___ 40: 0.069ms
0.5 cpu, 2048 ram, 40 iterations, object type, object 40: 0.07ms
0.5 cpu, 2048 ram, 40 iterations, array_ type, array_ 40: 0.073ms
0.5 cpu, 2048 ram, 40 iterations, map___ type, map___ 40: 0.066ms
1.0 cpu, 2048 ram, 40 iterations, object type, object 40: 0.079ms
1.0 cpu, 2048 ram, 40 iterations, array_ type, array_ 40: 0.074ms
1.0 cpu, 2048 ram, 40 iterations, map___ type, map___ 40: 0.089ms
2.0 cpu, 2048 ram, 40 iterations, object type, object 40: 0.084ms
2.0 cpu, 2048 ram, 40 iterations, array_ type, array_ 40: 0.078ms
2.0 cpu, 2048 ram, 40 iterations, map___ type, map___ 40: 0.073ms
3.0 cpu, 2048 ram, 40 iterations, object type, object 40: 0.072ms
3.0 cpu, 2048 ram, 40 iterations, array_ type, array_ 40: 0.078ms
3.0 cpu, 2048 ram, 40 iterations, map___ type, map___ 40: 0.07ms
4.0 cpu, 2048 ram, 40 iterations, object type, object 40: 0.082ms
4.0 cpu, 2048 ram, 40 iterations, array_ type, array_ 40: 0.076ms
4.0 cpu, 2048 ram, 40 iterations, map___ type, map___ 40: 0.067ms
0.5 cpu, 4096 ram, 40 iterations, object type, object 40: 0.067ms
0.5 cpu, 4096 ram, 40 iterations, array_ type, array_ 40: 0.077ms
0.5 cpu, 4096 ram, 40 iterations, map___ type, map___ 40: 0.067ms
1.0 cpu, 4096 ram, 40 iterations, object type, object 40: 0.084ms
1.0 cpu, 4096 ram, 40 iterations, array_ type, array_ 40: 0.067ms
1.0 cpu, 4096 ram, 40 iterations, map___ type, map___ 40: 0.069ms
2.0 cpu, 4096 ram, 40 iterations, object type, object 40: 0.068ms
2.0 cpu, 4096 ram, 40 iterations, array_ type, array_ 40: 0.085ms
2.0 cpu, 4096 ram, 40 iterations, map___ type, map___ 40: 0.077ms
3.0 cpu, 4096 ram, 40 iterations, object type, object 40: 0.082ms
3.0 cpu, 4096 ram, 40 iterations, array_ type, array_ 40: 0.067ms
3.0 cpu, 4096 ram, 40 iterations, map___ type, map___ 40: 0.067ms
4.0 cpu, 4096 ram, 40 iterations, object type, object 40: 0.075ms
4.0 cpu, 4096 ram, 40 iterations, array_ type, array_ 40: 0.094ms
4.0 cpu, 4096 ram, 40 iterations, map___ type, map___ 40: 0.069ms
0.5 cpu, 8192 ram, 40 iterations, object type, object 40: 0.074ms
0.5 cpu, 8192 ram, 40 iterations, array_ type, array_ 40: 0.075ms
0.5 cpu, 8192 ram, 40 iterations, map___ type, map___ 40: 0.073ms
1.0 cpu, 8192 ram, 40 iterations, object type, object 40: 0.079ms
1.0 cpu, 8192 ram, 40 iterations, array_ type, array_ 40: 0.078ms
1.0 cpu, 8192 ram, 40 iterations, map___ type, map___ 40: 0.085ms
2.0 cpu, 8192 ram, 40 iterations, object type, object 40: 0.071ms
2.0 cpu, 8192 ram, 40 iterations, array_ type, array_ 40: 0.073ms
2.0 cpu, 8192 ram, 40 iterations, map___ type, map___ 40: 0.08ms
3.0 cpu, 8192 ram, 40 iterations, object type, object 40: 0.07ms
3.0 cpu, 8192 ram, 40 iterations, array_ type, array_ 40: 0.074ms
3.0 cpu, 8192 ram, 40 iterations, map___ type, map___ 40: 0.067ms
4.0 cpu, 8192 ram, 40 iterations, object type, object 40: 0.075ms
4.0 cpu, 8192 ram, 40 iterations, array_ type, array_ 40: 0.08ms
4.0 cpu, 8192 ram, 40 iterations, map___ type, map___ 40: 0.073ms
0.5 cpu, 16384 ram, 40 iterations, object type, object 40: 0.095ms
0.5 cpu, 16384 ram, 40 iterations, array_ type, array_ 40: 0.077ms
0.5 cpu, 16384 ram, 40 iterations, map___ type, map___ 40: 0.068ms
1.0 cpu, 16384 ram, 40 iterations, object type, object 40: 0.08ms
1.0 cpu, 16384 ram, 40 iterations, array_ type, array_ 40: 0.084ms
1.0 cpu, 16384 ram, 40 iterations, map___ type, map___ 40: 0.076ms
2.0 cpu, 16384 ram, 40 iterations, object type, object 40: 0.077ms
2.0 cpu, 16384 ram, 40 iterations, array_ type, array_ 40: 0.078ms
2.0 cpu, 16384 ram, 40 iterations, map___ type, map___ 40: 0.073ms
3.0 cpu, 16384 ram, 40 iterations, object type, object 40: 0.066ms
3.0 cpu, 16384 ram, 40 iterations, array_ type, array_ 40: 0.08ms
3.0 cpu, 16384 ram, 40 iterations, map___ type, map___ 40: 0.078ms
4.0 cpu, 16384 ram, 40 iterations, object type, object 40: 0.077ms
4.0 cpu, 16384 ram, 40 iterations, array_ type, array_ 40: 0.068ms
4.0 cpu, 16384 ram, 40 iterations, map___ type, map___ 40: 0.065ms
0.5 cpu, 128 ram, 50 iterations, object type, object 50: 0.073ms
0.5 cpu, 128 ram, 50 iterations, array_ type, array_ 50: 0.085ms
0.5 cpu, 128 ram, 50 iterations, map___ type, map___ 50: 0.079ms
1.0 cpu, 128 ram, 50 iterations, object type, object 50: 0.069ms
1.0 cpu, 128 ram, 50 iterations, array_ type, array_ 50: 0.072ms
1.0 cpu, 128 ram, 50 iterations, map___ type, map___ 50: 0.08ms
2.0 cpu, 128 ram, 50 iterations, object type, object 50: 0.079ms
2.0 cpu, 128 ram, 50 iterations, array_ type, array_ 50: 0.072ms
2.0 cpu, 128 ram, 50 iterations, map___ type, map___ 50: 0.075ms
3.0 cpu, 128 ram, 50 iterations, object type, object 50: 0.077ms
3.0 cpu, 128 ram, 50 iterations, array_ type, array_ 50: 0.085ms
3.0 cpu, 128 ram, 50 iterations, map___ type, map___ 50: 0.077ms
4.0 cpu, 128 ram, 50 iterations, object type, object 50: 0.079ms
4.0 cpu, 128 ram, 50 iterations, array_ type, array_ 50: 0.076ms
4.0 cpu, 128 ram, 50 iterations, map___ type, map___ 50: 0.074ms
0.5 cpu, 256 ram, 50 iterations, object type, object 50: 0.076ms
0.5 cpu, 256 ram, 50 iterations, array_ type, array_ 50: 0.087ms
0.5 cpu, 256 ram, 50 iterations, map___ type, map___ 50: 0.08ms
1.0 cpu, 256 ram, 50 iterations, object type, object 50: 0.076ms
1.0 cpu, 256 ram, 50 iterations, array_ type, array_ 50: 0.07ms
1.0 cpu, 256 ram, 50 iterations, map___ type, map___ 50: 0.087ms
2.0 cpu, 256 ram, 50 iterations, object type, object 50: 0.077ms
2.0 cpu, 256 ram, 50 iterations, array_ type, array_ 50: 0.075ms
2.0 cpu, 256 ram, 50 iterations, map___ type, map___ 50: 0.078ms
3.0 cpu, 256 ram, 50 iterations, object type, object 50: 0.073ms
3.0 cpu, 256 ram, 50 iterations, array_ type, array_ 50: 0.074ms
3.0 cpu, 256 ram, 50 iterations, map___ type, map___ 50: 0.087ms
4.0 cpu, 256 ram, 50 iterations, object type, object 50: 0.076ms
4.0 cpu, 256 ram, 50 iterations, array_ type, array_ 50: 0.077ms
4.0 cpu, 256 ram, 50 iterations, map___ type, map___ 50: 0.079ms
0.5 cpu, 512 ram, 50 iterations, object type, object 50: 0.086ms
0.5 cpu, 512 ram, 50 iterations, array_ type, array_ 50: 0.076ms
0.5 cpu, 512 ram, 50 iterations, map___ type, map___ 50: 0.068ms
1.0 cpu, 512 ram, 50 iterations, object type, object 50: 0.074ms
1.0 cpu, 512 ram, 50 iterations, array_ type, array_ 50: 0.076ms
1.0 cpu, 512 ram, 50 iterations, map___ type, map___ 50: 0.075ms
2.0 cpu, 512 ram, 50 iterations, object type, object 50: 0.076ms
2.0 cpu, 512 ram, 50 iterations, array_ type, array_ 50: 0.071ms
2.0 cpu, 512 ram, 50 iterations, map___ type, map___ 50: 0.073ms
3.0 cpu, 512 ram, 50 iterations, object type, object 50: 0.076ms
3.0 cpu, 512 ram, 50 iterations, array_ type, array_ 50: 0.082ms
3.0 cpu, 512 ram, 50 iterations, map___ type, map___ 50: 0.078ms
4.0 cpu, 512 ram, 50 iterations, object type, object 50: 0.081ms
4.0 cpu, 512 ram, 50 iterations, array_ type, array_ 50: 0.1ms
4.0 cpu, 512 ram, 50 iterations, map___ type, map___ 50: 0.068ms
0.5 cpu, 1024 ram, 50 iterations, object type, object 50: 0.093ms
0.5 cpu, 1024 ram, 50 iterations, array_ type, array_ 50: 0.066ms
0.5 cpu, 1024 ram, 50 iterations, map___ type, map___ 50: 0.08ms
1.0 cpu, 1024 ram, 50 iterations, object type, object 50: 0.076ms
1.0 cpu, 1024 ram, 50 iterations, array_ type, array_ 50: 0.072ms
1.0 cpu, 1024 ram, 50 iterations, map___ type, map___ 50: 0.077ms
2.0 cpu, 1024 ram, 50 iterations, object type, object 50: 0.073ms
2.0 cpu, 1024 ram, 50 iterations, array_ type, array_ 50: 0.067ms
2.0 cpu, 1024 ram, 50 iterations, map___ type, map___ 50: 0.069ms
3.0 cpu, 1024 ram, 50 iterations, object type, object 50: 0.082ms
3.0 cpu, 1024 ram, 50 iterations, array_ type, array_ 50: 0.078ms
3.0 cpu, 1024 ram, 50 iterations, map___ type, map___ 50: 0.079ms
4.0 cpu, 1024 ram, 50 iterations, object type, object 50: 0.072ms
4.0 cpu, 1024 ram, 50 iterations, array_ type, array_ 50: 0.069ms
4.0 cpu, 1024 ram, 50 iterations, map___ type, map___ 50: 0.068ms
0.5 cpu, 2048 ram, 50 iterations, object type, object 50: 0.074ms
0.5 cpu, 2048 ram, 50 iterations, array_ type, array_ 50: 0.079ms
0.5 cpu, 2048 ram, 50 iterations, map___ type, map___ 50: 0.071ms
1.0 cpu, 2048 ram, 50 iterations, object type, object 50: 0.083ms
1.0 cpu, 2048 ram, 50 iterations, array_ type, array_ 50: 0.074ms
1.0 cpu, 2048 ram, 50 iterations, map___ type, map___ 50: 0.071ms
2.0 cpu, 2048 ram, 50 iterations, object type, object 50: 0.085ms
2.0 cpu, 2048 ram, 50 iterations, array_ type, array_ 50: 0.077ms
2.0 cpu, 2048 ram, 50 iterations, map___ type, map___ 50: 0.069ms
3.0 cpu, 2048 ram, 50 iterations, object type, object 50: 0.078ms
3.0 cpu, 2048 ram, 50 iterations, array_ type, array_ 50: 0.074ms
3.0 cpu, 2048 ram, 50 iterations, map___ type, map___ 50: 0.067ms
4.0 cpu, 2048 ram, 50 iterations, object type, object 50: 0.081ms
4.0 cpu, 2048 ram, 50 iterations, array_ type, array_ 50: 0.091ms
4.0 cpu, 2048 ram, 50 iterations, map___ type, map___ 50: 0.078ms
0.5 cpu, 4096 ram, 50 iterations, object type, object 50: 0.081ms
0.5 cpu, 4096 ram, 50 iterations, array_ type, array_ 50: 0.069ms
0.5 cpu, 4096 ram, 50 iterations, map___ type, map___ 50: 0.076ms
1.0 cpu, 4096 ram, 50 iterations, object type, object 50: 0.068ms
1.0 cpu, 4096 ram, 50 iterations, array_ type, array_ 50: 0.075ms
1.0 cpu, 4096 ram, 50 iterations, map___ type, map___ 50: 0.082ms
2.0 cpu, 4096 ram, 50 iterations, object type, object 50: 0.087ms
2.0 cpu, 4096 ram, 50 iterations, array_ type, array_ 50: 0.071ms
2.0 cpu, 4096 ram, 50 iterations, map___ type, map___ 50: 0.078ms
3.0 cpu, 4096 ram, 50 iterations, object type, object 50: 0.094ms
3.0 cpu, 4096 ram, 50 iterations, array_ type, array_ 50: 0.074ms
3.0 cpu, 4096 ram, 50 iterations, map___ type, map___ 50: 0.085ms
4.0 cpu, 4096 ram, 50 iterations, object type, object 50: 0.077ms
4.0 cpu, 4096 ram, 50 iterations, array_ type, array_ 50: 0.075ms
4.0 cpu, 4096 ram, 50 iterations, map___ type, map___ 50: 0.069ms
0.5 cpu, 8192 ram, 50 iterations, object type, object 50: 0.08ms
0.5 cpu, 8192 ram, 50 iterations, array_ type, array_ 50: 0.078ms
0.5 cpu, 8192 ram, 50 iterations, map___ type, map___ 50: 0.067ms
1.0 cpu, 8192 ram, 50 iterations, object type, object 50: 0.087ms
1.0 cpu, 8192 ram, 50 iterations, array_ type, array_ 50: 0.073ms
1.0 cpu, 8192 ram, 50 iterations, map___ type, map___ 50: 0.072ms
2.0 cpu, 8192 ram, 50 iterations, object type, object 50: 0.1ms
2.0 cpu, 8192 ram, 50 iterations, array_ type, array_ 50: 0.096ms
2.0 cpu, 8192 ram, 50 iterations, map___ type, map___ 50: 0.069ms
3.0 cpu, 8192 ram, 50 iterations, object type, object 50: 0.073ms
3.0 cpu, 8192 ram, 50 iterations, array_ type, array_ 50: 0.076ms
3.0 cpu, 8192 ram, 50 iterations, map___ type, map___ 50: 0.069ms
4.0 cpu, 8192 ram, 50 iterations, object type, object 50: 0.074ms
4.0 cpu, 8192 ram, 50 iterations, array_ type, array_ 50: 0.075ms
4.0 cpu, 8192 ram, 50 iterations, map___ type, map___ 50: 0.073ms
0.5 cpu, 16384 ram, 50 iterations, object type, object 50: 0.076ms
0.5 cpu, 16384 ram, 50 iterations, array_ type, array_ 50: 0.066ms
0.5 cpu, 16384 ram, 50 iterations, map___ type, map___ 50: 0.078ms
1.0 cpu, 16384 ram, 50 iterations, object type, object 50: 0.091ms
1.0 cpu, 16384 ram, 50 iterations, array_ type, array_ 50: 0.084ms
1.0 cpu, 16384 ram, 50 iterations, map___ type, map___ 50: 0.087ms
2.0 cpu, 16384 ram, 50 iterations, object type, object 50: 0.073ms
2.0 cpu, 16384 ram, 50 iterations, array_ type, array_ 50: 0.074ms
2.0 cpu, 16384 ram, 50 iterations, map___ type, map___ 50: 0.072ms
3.0 cpu, 16384 ram, 50 iterations, object type, object 50: 0.07ms
3.0 cpu, 16384 ram, 50 iterations, array_ type, array_ 50: 0.073ms
3.0 cpu, 16384 ram, 50 iterations, map___ type, map___ 50: 0.084ms
4.0 cpu, 16384 ram, 50 iterations, object type, object 50: 0.075ms
4.0 cpu, 16384 ram, 50 iterations, array_ type, array_ 50: 0.072ms
4.0 cpu, 16384 ram, 50 iterations, map___ type, map___ 50: 0.072ms
0.5 cpu, 128 ram, 60 iterations, object type, object 60: 0.082ms
0.5 cpu, 128 ram, 60 iterations, array_ type, array_ 60: 0.079ms
0.5 cpu, 128 ram, 60 iterations, map___ type, map___ 60: 0.077ms
1.0 cpu, 128 ram, 60 iterations, object type, object 60: 0.086ms
1.0 cpu, 128 ram, 60 iterations, array_ type, array_ 60: 0.076ms
1.0 cpu, 128 ram, 60 iterations, map___ type, map___ 60: 0.068ms
2.0 cpu, 128 ram, 60 iterations, object type, object 60: 0.08ms
2.0 cpu, 128 ram, 60 iterations, array_ type, array_ 60: 0.076ms
2.0 cpu, 128 ram, 60 iterations, map___ type, map___ 60: 0.069ms
3.0 cpu, 128 ram, 60 iterations, object type, object 60: 0.069ms
3.0 cpu, 128 ram, 60 iterations, array_ type, array_ 60: 0.084ms
3.0 cpu, 128 ram, 60 iterations, map___ type, map___ 60: 0.083ms
4.0 cpu, 128 ram, 60 iterations, object type, object 60: 0.068ms
4.0 cpu, 128 ram, 60 iterations, array_ type, array_ 60: 0.066ms
4.0 cpu, 128 ram, 60 iterations, map___ type, map___ 60: 0.073ms
0.5 cpu, 256 ram, 60 iterations, object type, object 60: 0.082ms
0.5 cpu, 256 ram, 60 iterations, array_ type, array_ 60: 0.074ms
0.5 cpu, 256 ram, 60 iterations, map___ type, map___ 60: 0.076ms
1.0 cpu, 256 ram, 60 iterations, object type, object 60: 0.075ms
1.0 cpu, 256 ram, 60 iterations, array_ type, array_ 60: 0.086ms
1.0 cpu, 256 ram, 60 iterations, map___ type, map___ 60: 0.078ms
2.0 cpu, 256 ram, 60 iterations, object type, object 60: 0.071ms
2.0 cpu, 256 ram, 60 iterations, array_ type, array_ 60: 0.088ms
2.0 cpu, 256 ram, 60 iterations, map___ type, map___ 60: 0.076ms
3.0 cpu, 256 ram, 60 iterations, object type, object 60: 0.097ms
3.0 cpu, 256 ram, 60 iterations, array_ type, array_ 60: 0.077ms
3.0 cpu, 256 ram, 60 iterations, map___ type, map___ 60: 0.08ms
4.0 cpu, 256 ram, 60 iterations, object type, object 60: 0.073ms
4.0 cpu, 256 ram, 60 iterations, array_ type, array_ 60: 0.074ms
4.0 cpu, 256 ram, 60 iterations, map___ type, map___ 60: 0.074ms
0.5 cpu, 512 ram, 60 iterations, object type, object 60: 0.076ms
0.5 cpu, 512 ram, 60 iterations, array_ type, array_ 60: 0.073ms
0.5 cpu, 512 ram, 60 iterations, map___ type, map___ 60: 0.081ms
1.0 cpu, 512 ram, 60 iterations, object type, object 60: 0.07ms
1.0 cpu, 512 ram, 60 iterations, array_ type, array_ 60: 0.067ms
1.0 cpu, 512 ram, 60 iterations, map___ type, map___ 60: 0.076ms
2.0 cpu, 512 ram, 60 iterations, object type, object 60: 0.073ms
2.0 cpu, 512 ram, 60 iterations, array_ type, array_ 60: 0.085ms
2.0 cpu, 512 ram, 60 iterations, map___ type, map___ 60: 0.07ms
3.0 cpu, 512 ram, 60 iterations, object type, object 60: 0.081ms
3.0 cpu, 512 ram, 60 iterations, array_ type, array_ 60: 0.072ms
3.0 cpu, 512 ram, 60 iterations, map___ type, map___ 60: 0.087ms
4.0 cpu, 512 ram, 60 iterations, object type, object 60: 0.07ms
4.0 cpu, 512 ram, 60 iterations, array_ type, array_ 60: 0.077ms
4.0 cpu, 512 ram, 60 iterations, map___ type, map___ 60: 0.075ms
0.5 cpu, 1024 ram, 60 iterations, object type, object 60: 0.076ms
0.5 cpu, 1024 ram, 60 iterations, array_ type, array_ 60: 0.072ms
0.5 cpu, 1024 ram, 60 iterations, map___ type, map___ 60: 0.086ms
1.0 cpu, 1024 ram, 60 iterations, object type, object 60: 0.081ms
1.0 cpu, 1024 ram, 60 iterations, array_ type, array_ 60: 0.095ms
1.0 cpu, 1024 ram, 60 iterations, map___ type, map___ 60: 0.071ms
2.0 cpu, 1024 ram, 60 iterations, object type, object 60: 0.074ms
2.0 cpu, 1024 ram, 60 iterations, array_ type, array_ 60: 0.073ms
2.0 cpu, 1024 ram, 60 iterations, map___ type, map___ 60: 0.073ms
3.0 cpu, 1024 ram, 60 iterations, object type, object 60: 0.079ms
3.0 cpu, 1024 ram, 60 iterations, array_ type, array_ 60: 0.083ms
3.0 cpu, 1024 ram, 60 iterations, map___ type, map___ 60: 0.073ms
4.0 cpu, 1024 ram, 60 iterations, object type, object 60: 0.081ms
4.0 cpu, 1024 ram, 60 iterations, array_ type, array_ 60: 0.07ms
4.0 cpu, 1024 ram, 60 iterations, map___ type, map___ 60: 0.069ms
0.5 cpu, 2048 ram, 60 iterations, object type, object 60: 0.074ms
0.5 cpu, 2048 ram, 60 iterations, array_ type, array_ 60: 0.082ms
0.5 cpu, 2048 ram, 60 iterations, map___ type, map___ 60: 0.079ms
1.0 cpu, 2048 ram, 60 iterations, object type, object 60: 0.088ms
1.0 cpu, 2048 ram, 60 iterations, array_ type, array_ 60: 0.077ms
1.0 cpu, 2048 ram, 60 iterations, map___ type, map___ 60: 0.076ms
2.0 cpu, 2048 ram, 60 iterations, object type, object 60: 0.073ms
2.0 cpu, 2048 ram, 60 iterations, array_ type, array_ 60: 0.074ms
2.0 cpu, 2048 ram, 60 iterations, map___ type, map___ 60: 0.07ms
3.0 cpu, 2048 ram, 60 iterations, object type, object 60: 0.075ms
3.0 cpu, 2048 ram, 60 iterations, array_ type, array_ 60: 0.07ms
3.0 cpu, 2048 ram, 60 iterations, map___ type, map___ 60: 0.069ms
4.0 cpu, 2048 ram, 60 iterations, object type, object 60: 0.077ms
4.0 cpu, 2048 ram, 60 iterations, array_ type, array_ 60: 0.074ms
4.0 cpu, 2048 ram, 60 iterations, map___ type, map___ 60: 0.085ms
0.5 cpu, 4096 ram, 60 iterations, object type, object 60: 0.078ms
0.5 cpu, 4096 ram, 60 iterations, array_ type, array_ 60: 0.074ms
0.5 cpu, 4096 ram, 60 iterations, map___ type, map___ 60: 0.079ms
1.0 cpu, 4096 ram, 60 iterations, object type, object 60: 0.076ms
1.0 cpu, 4096 ram, 60 iterations, array_ type, array_ 60: 0.074ms
1.0 cpu, 4096 ram, 60 iterations, map___ type, map___ 60: 0.075ms
2.0 cpu, 4096 ram, 60 iterations, object type, object 60: 0.081ms
2.0 cpu, 4096 ram, 60 iterations, array_ type, array_ 60: 0.084ms
2.0 cpu, 4096 ram, 60 iterations, map___ type, map___ 60: 0.078ms
3.0 cpu, 4096 ram, 60 iterations, object type, object 60: 0.079ms
3.0 cpu, 4096 ram, 60 iterations, array_ type, array_ 60: 0.08ms
3.0 cpu, 4096 ram, 60 iterations, map___ type, map___ 60: 0.077ms
4.0 cpu, 4096 ram, 60 iterations, object type, object 60: 0.151ms
4.0 cpu, 4096 ram, 60 iterations, array_ type, array_ 60: 0.086ms
4.0 cpu, 4096 ram, 60 iterations, map___ type, map___ 60: 0.069ms
0.5 cpu, 8192 ram, 60 iterations, object type, object 60: 0.088ms
0.5 cpu, 8192 ram, 60 iterations, array_ type, array_ 60: 0.099ms
0.5 cpu, 8192 ram, 60 iterations, map___ type, map___ 60: 0.081ms
1.0 cpu, 8192 ram, 60 iterations, object type, object 60: 0.07ms
1.0 cpu, 8192 ram, 60 iterations, array_ type, array_ 60: 0.083ms
1.0 cpu, 8192 ram, 60 iterations, map___ type, map___ 60: 0.075ms
2.0 cpu, 8192 ram, 60 iterations, object type, object 60: 0.077ms
2.0 cpu, 8192 ram, 60 iterations, array_ type, array_ 60: 0.082ms
2.0 cpu, 8192 ram, 60 iterations, map___ type, map___ 60: 0.075ms
3.0 cpu, 8192 ram, 60 iterations, object type, object 60: 0.078ms
3.0 cpu, 8192 ram, 60 iterations, array_ type, array_ 60: 0.083ms
3.0 cpu, 8192 ram, 60 iterations, map___ type, map___ 60: 0.078ms
4.0 cpu, 8192 ram, 60 iterations, object type, object 60: 0.079ms
4.0 cpu, 8192 ram, 60 iterations, array_ type, array_ 60: 0.075ms
4.0 cpu, 8192 ram, 60 iterations, map___ type, map___ 60: 0.076ms
0.5 cpu, 16384 ram, 60 iterations, object type, object 60: 0.075ms
0.5 cpu, 16384 ram, 60 iterations, array_ type, array_ 60: 0.077ms
0.5 cpu, 16384 ram, 60 iterations, map___ type, map___ 60: 0.072ms
1.0 cpu, 16384 ram, 60 iterations, object type, object 60: 0.102ms
1.0 cpu, 16384 ram, 60 iterations, array_ type, array_ 60: 0.077ms
1.0 cpu, 16384 ram, 60 iterations, map___ type, map___ 60: 0.07ms
2.0 cpu, 16384 ram, 60 iterations, object type, object 60: 0.07ms
2.0 cpu, 16384 ram, 60 iterations, array_ type, array_ 60: 0.079ms
2.0 cpu, 16384 ram, 60 iterations, map___ type, map___ 60: 0.069ms
3.0 cpu, 16384 ram, 60 iterations, object type, object 60: 0.078ms
3.0 cpu, 16384 ram, 60 iterations, array_ type, array_ 60: 0.072ms
3.0 cpu, 16384 ram, 60 iterations, map___ type, map___ 60: 0.067ms
4.0 cpu, 16384 ram, 60 iterations, object type, object 60: 0.068ms
4.0 cpu, 16384 ram, 60 iterations, array_ type, array_ 60: 0.077ms
4.0 cpu, 16384 ram, 60 iterations, map___ type, map___ 60: 0.098ms
0.5 cpu, 128 ram, 70 iterations, object type, object 70: 0.081ms
0.5 cpu, 128 ram, 70 iterations, array_ type, array_ 70: 0.075ms
0.5 cpu, 128 ram, 70 iterations, map___ type, map___ 70: 0.079ms
1.0 cpu, 128 ram, 70 iterations, object type, object 70: 0.076ms
1.0 cpu, 128 ram, 70 iterations, array_ type, array_ 70: 0.078ms
1.0 cpu, 128 ram, 70 iterations, map___ type, map___ 70: 0.078ms
2.0 cpu, 128 ram, 70 iterations, object type, object 70: 0.071ms
2.0 cpu, 128 ram, 70 iterations, array_ type, array_ 70: 0.07ms
2.0 cpu, 128 ram, 70 iterations, map___ type, map___ 70: 0.07ms
3.0 cpu, 128 ram, 70 iterations, object type, object 70: 0.081ms
3.0 cpu, 128 ram, 70 iterations, array_ type, array_ 70: 0.069ms
3.0 cpu, 128 ram, 70 iterations, map___ type, map___ 70: 0.078ms
4.0 cpu, 128 ram, 70 iterations, object type, object 70: 0.102ms
4.0 cpu, 128 ram, 70 iterations, array_ type, array_ 70: 0.071ms
4.0 cpu, 128 ram, 70 iterations, map___ type, map___ 70: 0.072ms
0.5 cpu, 256 ram, 70 iterations, object type, object 70: 0.069ms
0.5 cpu, 256 ram, 70 iterations, array_ type, array_ 70: 0.082ms
0.5 cpu, 256 ram, 70 iterations, map___ type, map___ 70: 0.111ms
1.0 cpu, 256 ram, 70 iterations, object type, object 70: 0.075ms
1.0 cpu, 256 ram, 70 iterations, array_ type, array_ 70: 0.075ms
1.0 cpu, 256 ram, 70 iterations, map___ type, map___ 70: 0.072ms
2.0 cpu, 256 ram, 70 iterations, object type, object 70: 0.085ms
2.0 cpu, 256 ram, 70 iterations, array_ type, array_ 70: 0.072ms
2.0 cpu, 256 ram, 70 iterations, map___ type, map___ 70: 0.09ms
3.0 cpu, 256 ram, 70 iterations, object type, object 70: 0.086ms
3.0 cpu, 256 ram, 70 iterations, array_ type, array_ 70: 0.068ms
3.0 cpu, 256 ram, 70 iterations, map___ type, map___ 70: 0.068ms
4.0 cpu, 256 ram, 70 iterations, object type, object 70: 0.073ms
4.0 cpu, 256 ram, 70 iterations, array_ type, array_ 70: 0.098ms
4.0 cpu, 256 ram, 70 iterations, map___ type, map___ 70: 0.073ms
0.5 cpu, 512 ram, 70 iterations, object type, object 70: 0.084ms
0.5 cpu, 512 ram, 70 iterations, array_ type, array_ 70: 0.077ms
0.5 cpu, 512 ram, 70 iterations, map___ type, map___ 70: 0.078ms
1.0 cpu, 512 ram, 70 iterations, object type, object 70: 0.072ms
1.0 cpu, 512 ram, 70 iterations, array_ type, array_ 70: 0.071ms
1.0 cpu, 512 ram, 70 iterations, map___ type, map___ 70: 0.076ms
2.0 cpu, 512 ram, 70 iterations, object type, object 70: 0.077ms
2.0 cpu, 512 ram, 70 iterations, array_ type, array_ 70: 0.133ms
2.0 cpu, 512 ram, 70 iterations, map___ type, map___ 70: 0.073ms
3.0 cpu, 512 ram, 70 iterations, object type, object 70: 0.079ms
3.0 cpu, 512 ram, 70 iterations, array_ type, array_ 70: 0.072ms
3.0 cpu, 512 ram, 70 iterations, map___ type, map___ 70: 0.088ms
4.0 cpu, 512 ram, 70 iterations, object type, object 70: 0.071ms
4.0 cpu, 512 ram, 70 iterations, array_ type, array_ 70: 0.068ms
4.0 cpu, 512 ram, 70 iterations, map___ type, map___ 70: 0.168ms
0.5 cpu, 1024 ram, 70 iterations, object type, object 70: 0.103ms
0.5 cpu, 1024 ram, 70 iterations, array_ type, array_ 70: 0.118ms
0.5 cpu, 1024 ram, 70 iterations, map___ type, map___ 70: 0.069ms
1.0 cpu, 1024 ram, 70 iterations, object type, object 70: 0.083ms
1.0 cpu, 1024 ram, 70 iterations, array_ type, array_ 70: 0.071ms
1.0 cpu, 1024 ram, 70 iterations, map___ type, map___ 70: 0.081ms
2.0 cpu, 1024 ram, 70 iterations, object type, object 70: 0.072ms
2.0 cpu, 1024 ram, 70 iterations, array_ type, array_ 70: 0.104ms
2.0 cpu, 1024 ram, 70 iterations, map___ type, map___ 70: 0.073ms
3.0 cpu, 1024 ram, 70 iterations, object type, object 70: 0.082ms
3.0 cpu, 1024 ram, 70 iterations, array_ type, array_ 70: 0.067ms
3.0 cpu, 1024 ram, 70 iterations, map___ type, map___ 70: 0.097ms
4.0 cpu, 1024 ram, 70 iterations, object type, object 70: 0.08ms
4.0 cpu, 1024 ram, 70 iterations, array_ type, array_ 70: 0.074ms
4.0 cpu, 1024 ram, 70 iterations, map___ type, map___ 70: 0.076ms
0.5 cpu, 2048 ram, 70 iterations, object type, object 70: 0.082ms
0.5 cpu, 2048 ram, 70 iterations, array_ type, array_ 70: 0.08ms
0.5 cpu, 2048 ram, 70 iterations, map___ type, map___ 70: 0.072ms
1.0 cpu, 2048 ram, 70 iterations, object type, object 70: 0.092ms
1.0 cpu, 2048 ram, 70 iterations, array_ type, array_ 70: 0.079ms
1.0 cpu, 2048 ram, 70 iterations, map___ type, map___ 70: 0.083ms
2.0 cpu, 2048 ram, 70 iterations, object type, object 70: 0.107ms
2.0 cpu, 2048 ram, 70 iterations, array_ type, array_ 70: 0.074ms
2.0 cpu, 2048 ram, 70 iterations, map___ type, map___ 70: 0.073ms
3.0 cpu, 2048 ram, 70 iterations, object type, object 70: 0.074ms
3.0 cpu, 2048 ram, 70 iterations, array_ type, array_ 70: 0.08ms
3.0 cpu, 2048 ram, 70 iterations, map___ type, map___ 70: 0.073ms
4.0 cpu, 2048 ram, 70 iterations, object type, object 70: 0.075ms
4.0 cpu, 2048 ram, 70 iterations, array_ type, array_ 70: 0.074ms
4.0 cpu, 2048 ram, 70 iterations, map___ type, map___ 70: 0.096ms
0.5 cpu, 4096 ram, 70 iterations, object type, object 70: 0.078ms
0.5 cpu, 4096 ram, 70 iterations, array_ type, array_ 70: 0.078ms
0.5 cpu, 4096 ram, 70 iterations, map___ type, map___ 70: 0.075ms
1.0 cpu, 4096 ram, 70 iterations, object type, object 70: 0.089ms
1.0 cpu, 4096 ram, 70 iterations, array_ type, array_ 70: 0.076ms
1.0 cpu, 4096 ram, 70 iterations, map___ type, map___ 70: 0.074ms
2.0 cpu, 4096 ram, 70 iterations, object type, object 70: 0.083ms
2.0 cpu, 4096 ram, 70 iterations, array_ type, array_ 70: 0.075ms
2.0 cpu, 4096 ram, 70 iterations, map___ type, map___ 70: 0.078ms
3.0 cpu, 4096 ram, 70 iterations, object type, object 70: 0.067ms
3.0 cpu, 4096 ram, 70 iterations, array_ type, array_ 70: 0.07ms
3.0 cpu, 4096 ram, 70 iterations, map___ type, map___ 70: 0.068ms
4.0 cpu, 4096 ram, 70 iterations, object type, object 70: 0.072ms
4.0 cpu, 4096 ram, 70 iterations, array_ type, array_ 70: 0.086ms
4.0 cpu, 4096 ram, 70 iterations, map___ type, map___ 70: 0.068ms
0.5 cpu, 8192 ram, 70 iterations, object type, object 70: 0.089ms
0.5 cpu, 8192 ram, 70 iterations, array_ type, array_ 70: 0.074ms
0.5 cpu, 8192 ram, 70 iterations, map___ type, map___ 70: 0.1ms
1.0 cpu, 8192 ram, 70 iterations, object type, object 70: 0.087ms
1.0 cpu, 8192 ram, 70 iterations, array_ type, array_ 70: 0.076ms
1.0 cpu, 8192 ram, 70 iterations, map___ type, map___ 70: 0.075ms
2.0 cpu, 8192 ram, 70 iterations, object type, object 70: 0.077ms
2.0 cpu, 8192 ram, 70 iterations, array_ type, array_ 70: 0.081ms
2.0 cpu, 8192 ram, 70 iterations, map___ type, map___ 70: 0.072ms
3.0 cpu, 8192 ram, 70 iterations, object type, object 70: 0.078ms
3.0 cpu, 8192 ram, 70 iterations, array_ type, array_ 70: 0.078ms
3.0 cpu, 8192 ram, 70 iterations, map___ type, map___ 70: 0.071ms
4.0 cpu, 8192 ram, 70 iterations, object type, object 70: 0.08ms
4.0 cpu, 8192 ram, 70 iterations, array_ type, array_ 70: 0.079ms
4.0 cpu, 8192 ram, 70 iterations, map___ type, map___ 70: 0.075ms
0.5 cpu, 16384 ram, 70 iterations, object type, object 70: 0.08ms
0.5 cpu, 16384 ram, 70 iterations, array_ type, array_ 70: 0.07ms
0.5 cpu, 16384 ram, 70 iterations, map___ type, map___ 70: 0.069ms
1.0 cpu, 16384 ram, 70 iterations, object type, object 70: 0.084ms
1.0 cpu, 16384 ram, 70 iterations, array_ type, array_ 70: 0.074ms
1.0 cpu, 16384 ram, 70 iterations, map___ type, map___ 70: 0.078ms
2.0 cpu, 16384 ram, 70 iterations, object type, object 70: 0.075ms
2.0 cpu, 16384 ram, 70 iterations, array_ type, array_ 70: 0.08ms
2.0 cpu, 16384 ram, 70 iterations, map___ type, map___ 70: 0.077ms
3.0 cpu, 16384 ram, 70 iterations, object type, object 70: 0.075ms
3.0 cpu, 16384 ram, 70 iterations, array_ type, array_ 70: 0.084ms
3.0 cpu, 16384 ram, 70 iterations, map___ type, map___ 70: 0.081ms
4.0 cpu, 16384 ram, 70 iterations, object type, object 70: 0.085ms
4.0 cpu, 16384 ram, 70 iterations, array_ type, array_ 70: 0.087ms
4.0 cpu, 16384 ram, 70 iterations, map___ type, map___ 70: 0.079ms
0.5 cpu, 128 ram, 80 iterations, object type, object 80: 0.075ms
0.5 cpu, 128 ram, 80 iterations, array_ type, array_ 80: 0.085ms
0.5 cpu, 128 ram, 80 iterations, map___ type, map___ 80: 0.098ms
1.0 cpu, 128 ram, 80 iterations, object type, object 80: 0.079ms
1.0 cpu, 128 ram, 80 iterations, array_ type, array_ 80: 0.099ms
1.0 cpu, 128 ram, 80 iterations, map___ type, map___ 80: 0.076ms
2.0 cpu, 128 ram, 80 iterations, object type, object 80: 0.085ms
2.0 cpu, 128 ram, 80 iterations, array_ type, array_ 80: 0.076ms
2.0 cpu, 128 ram, 80 iterations, map___ type, map___ 80: 0.074ms
3.0 cpu, 128 ram, 80 iterations, object type, object 80: 0.075ms
3.0 cpu, 128 ram, 80 iterations, array_ type, array_ 80: 0.067ms
3.0 cpu, 128 ram, 80 iterations, map___ type, map___ 80: 0.081ms
4.0 cpu, 128 ram, 80 iterations, object type, object 80: 0.077ms
4.0 cpu, 128 ram, 80 iterations, array_ type, array_ 80: 0.077ms
4.0 cpu, 128 ram, 80 iterations, map___ type, map___ 80: 0.078ms
0.5 cpu, 256 ram, 80 iterations, object type, object 80: 0.08ms
0.5 cpu, 256 ram, 80 iterations, array_ type, array_ 80: 0.069ms
0.5 cpu, 256 ram, 80 iterations, map___ type, map___ 80: 0.073ms
1.0 cpu, 256 ram, 80 iterations, object type, object 80: 0.073ms
1.0 cpu, 256 ram, 80 iterations, array_ type, array_ 80: 0.07ms
1.0 cpu, 256 ram, 80 iterations, map___ type, map___ 80: 0.078ms
2.0 cpu, 256 ram, 80 iterations, object type, object 80: 0.073ms
2.0 cpu, 256 ram, 80 iterations, array_ type, array_ 80: 0.079ms
2.0 cpu, 256 ram, 80 iterations, map___ type, map___ 80: 0.079ms
3.0 cpu, 256 ram, 80 iterations, object type, object 80: 0.082ms
3.0 cpu, 256 ram, 80 iterations, array_ type, array_ 80: 0.095ms
3.0 cpu, 256 ram, 80 iterations, map___ type, map___ 80: 0.084ms
4.0 cpu, 256 ram, 80 iterations, object type, object 80: 0.083ms
4.0 cpu, 256 ram, 80 iterations, array_ type, array_ 80: 0.074ms
4.0 cpu, 256 ram, 80 iterations, map___ type, map___ 80: 0.08ms
0.5 cpu, 512 ram, 80 iterations, object type, object 80: 0.087ms
0.5 cpu, 512 ram, 80 iterations, array_ type, array_ 80: 0.073ms
0.5 cpu, 512 ram, 80 iterations, map___ type, map___ 80: 0.08ms
1.0 cpu, 512 ram, 80 iterations, object type, object 80: 0.079ms
1.0 cpu, 512 ram, 80 iterations, array_ type, array_ 80: 0.074ms
1.0 cpu, 512 ram, 80 iterations, map___ type, map___ 80: 0.106ms
2.0 cpu, 512 ram, 80 iterations, object type, object 80: 0.072ms
2.0 cpu, 512 ram, 80 iterations, array_ type, array_ 80: 0.079ms
2.0 cpu, 512 ram, 80 iterations, map___ type, map___ 80: 0.074ms
3.0 cpu, 512 ram, 80 iterations, object type, object 80: 0.071ms
3.0 cpu, 512 ram, 80 iterations, array_ type, array_ 80: 0.07ms
3.0 cpu, 512 ram, 80 iterations, map___ type, map___ 80: 0.091ms
4.0 cpu, 512 ram, 80 iterations, object type, object 80: 0.076ms
4.0 cpu, 512 ram, 80 iterations, array_ type, array_ 80: 0.072ms
4.0 cpu, 512 ram, 80 iterations, map___ type, map___ 80: 0.072ms
0.5 cpu, 1024 ram, 80 iterations, object type, object 80: 0.09ms
0.5 cpu, 1024 ram, 80 iterations, array_ type, array_ 80: 0.076ms
0.5 cpu, 1024 ram, 80 iterations, map___ type, map___ 80: 0.074ms
1.0 cpu, 1024 ram, 80 iterations, object type, object 80: 0.081ms
1.0 cpu, 1024 ram, 80 iterations, array_ type, array_ 80: 0.082ms
1.0 cpu, 1024 ram, 80 iterations, map___ type, map___ 80: 0.076ms
2.0 cpu, 1024 ram, 80 iterations, object type, object 80: 0.076ms
2.0 cpu, 1024 ram, 80 iterations, array_ type, array_ 80: 0.077ms
2.0 cpu, 1024 ram, 80 iterations, map___ type, map___ 80: 0.075ms
3.0 cpu, 1024 ram, 80 iterations, object type, object 80: 0.082ms
3.0 cpu, 1024 ram, 80 iterations, array_ type, array_ 80: 0.075ms
3.0 cpu, 1024 ram, 80 iterations, map___ type, map___ 80: 0.07ms
4.0 cpu, 1024 ram, 80 iterations, object type, object 80: 0.07ms
4.0 cpu, 1024 ram, 80 iterations, array_ type, array_ 80: 0.086ms
4.0 cpu, 1024 ram, 80 iterations, map___ type, map___ 80: 0.07ms
0.5 cpu, 2048 ram, 80 iterations, object type, object 80: 0.069ms
0.5 cpu, 2048 ram, 80 iterations, array_ type, array_ 80: 0.07ms
0.5 cpu, 2048 ram, 80 iterations, map___ type, map___ 80: 0.072ms
1.0 cpu, 2048 ram, 80 iterations, object type, object 80: 0.076ms
1.0 cpu, 2048 ram, 80 iterations, array_ type, array_ 80: 0.073ms
1.0 cpu, 2048 ram, 80 iterations, map___ type, map___ 80: 0.085ms
2.0 cpu, 2048 ram, 80 iterations, object type, object 80: 0.078ms
2.0 cpu, 2048 ram, 80 iterations, array_ type, array_ 80: 0.082ms
2.0 cpu, 2048 ram, 80 iterations, map___ type, map___ 80: 0.079ms
3.0 cpu, 2048 ram, 80 iterations, object type, object 80: 0.099ms
3.0 cpu, 2048 ram, 80 iterations, array_ type, array_ 80: 0.071ms
3.0 cpu, 2048 ram, 80 iterations, map___ type, map___ 80: 0.078ms
4.0 cpu, 2048 ram, 80 iterations, object type, object 80: 0.096ms
4.0 cpu, 2048 ram, 80 iterations, array_ type, array_ 80: 0.094ms
4.0 cpu, 2048 ram, 80 iterations, map___ type, map___ 80: 0.081ms
0.5 cpu, 4096 ram, 80 iterations, object type, object 80: 0.077ms
0.5 cpu, 4096 ram, 80 iterations, array_ type, array_ 80: 0.077ms
0.5 cpu, 4096 ram, 80 iterations, map___ type, map___ 80: 0.092ms
1.0 cpu, 4096 ram, 80 iterations, object type, object 80: 0.077ms
1.0 cpu, 4096 ram, 80 iterations, array_ type, array_ 80: 0.09ms
1.0 cpu, 4096 ram, 80 iterations, map___ type, map___ 80: 0.072ms
2.0 cpu, 4096 ram, 80 iterations, object type, object 80: 0.074ms
2.0 cpu, 4096 ram, 80 iterations, array_ type, array_ 80: 0.084ms
2.0 cpu, 4096 ram, 80 iterations, map___ type, map___ 80: 0.071ms
3.0 cpu, 4096 ram, 80 iterations, object type, object 80: 0.084ms
3.0 cpu, 4096 ram, 80 iterations, array_ type, array_ 80: 0.078ms
3.0 cpu, 4096 ram, 80 iterations, map___ type, map___ 80: 0.08ms
4.0 cpu, 4096 ram, 80 iterations, object type, object 80: 0.078ms
4.0 cpu, 4096 ram, 80 iterations, array_ type, array_ 80: 0.07ms
4.0 cpu, 4096 ram, 80 iterations, map___ type, map___ 80: 0.074ms
0.5 cpu, 8192 ram, 80 iterations, object type, object 80: 0.068ms
0.5 cpu, 8192 ram, 80 iterations, array_ type, array_ 80: 0.076ms
0.5 cpu, 8192 ram, 80 iterations, map___ type, map___ 80: 0.088ms
1.0 cpu, 8192 ram, 80 iterations, object type, object 80: 0.072ms
1.0 cpu, 8192 ram, 80 iterations, array_ type, array_ 80: 0.083ms
1.0 cpu, 8192 ram, 80 iterations, map___ type, map___ 80: 0.089ms
2.0 cpu, 8192 ram, 80 iterations, object type, object 80: 0.088ms
2.0 cpu, 8192 ram, 80 iterations, array_ type, array_ 80: 0.077ms
2.0 cpu, 8192 ram, 80 iterations, map___ type, map___ 80: 0.069ms
3.0 cpu, 8192 ram, 80 iterations, object type, object 80: 0.103ms
3.0 cpu, 8192 ram, 80 iterations, array_ type, array_ 80: 0.088ms
3.0 cpu, 8192 ram, 80 iterations, map___ type, map___ 80: 0.077ms
4.0 cpu, 8192 ram, 80 iterations, object type, object 80: 0.086ms
4.0 cpu, 8192 ram, 80 iterations, array_ type, array_ 80: 0.09ms
4.0 cpu, 8192 ram, 80 iterations, map___ type, map___ 80: 0.071ms
0.5 cpu, 16384 ram, 80 iterations, object type, object 80: 0.08ms
0.5 cpu, 16384 ram, 80 iterations, array_ type, array_ 80: 0.072ms
0.5 cpu, 16384 ram, 80 iterations, map___ type, map___ 80: 0.081ms
1.0 cpu, 16384 ram, 80 iterations, object type, object 80: 0.08ms
1.0 cpu, 16384 ram, 80 iterations, array_ type, array_ 80: 0.073ms
1.0 cpu, 16384 ram, 80 iterations, map___ type, map___ 80: 0.075ms
2.0 cpu, 16384 ram, 80 iterations, object type, object 80: 0.079ms
2.0 cpu, 16384 ram, 80 iterations, array_ type, array_ 80: 0.079ms
2.0 cpu, 16384 ram, 80 iterations, map___ type, map___ 80: 0.08ms
3.0 cpu, 16384 ram, 80 iterations, object type, object 80: 0.077ms
3.0 cpu, 16384 ram, 80 iterations, array_ type, array_ 80: 0.08ms
3.0 cpu, 16384 ram, 80 iterations, map___ type, map___ 80: 0.075ms
4.0 cpu, 16384 ram, 80 iterations, object type, object 80: 0.085ms
4.0 cpu, 16384 ram, 80 iterations, array_ type, array_ 80: 0.073ms
4.0 cpu, 16384 ram, 80 iterations, map___ type, map___ 80: 0.079ms
0.5 cpu, 128 ram, 90 iterations, object type, object 90: 0.081ms
0.5 cpu, 128 ram, 90 iterations, array_ type, array_ 90: 0.085ms
0.5 cpu, 128 ram, 90 iterations, map___ type, map___ 90: 0.071ms
1.0 cpu, 128 ram, 90 iterations, object type, object 90: 0.077ms
1.0 cpu, 128 ram, 90 iterations, array_ type, array_ 90: 0.094ms
1.0 cpu, 128 ram, 90 iterations, map___ type, map___ 90: 0.077ms
2.0 cpu, 128 ram, 90 iterations, object type, object 90: 0.083ms
2.0 cpu, 128 ram, 90 iterations, array_ type, array_ 90: 0.09ms
2.0 cpu, 128 ram, 90 iterations, map___ type, map___ 90: 0.083ms
3.0 cpu, 128 ram, 90 iterations, object type, object 90: 0.086ms
3.0 cpu, 128 ram, 90 iterations, array_ type, array_ 90: 0.074ms
3.0 cpu, 128 ram, 90 iterations, map___ type, map___ 90: 0.081ms
4.0 cpu, 128 ram, 90 iterations, object type, object 90: 0.078ms
4.0 cpu, 128 ram, 90 iterations, array_ type, array_ 90: 0.096ms
4.0 cpu, 128 ram, 90 iterations, map___ type, map___ 90: 0.085ms
0.5 cpu, 256 ram, 90 iterations, object type, object 90: 0.074ms
0.5 cpu, 256 ram, 90 iterations, array_ type, array_ 90: 0.085ms
0.5 cpu, 256 ram, 90 iterations, map___ type, map___ 90: 0.079ms
1.0 cpu, 256 ram, 90 iterations, object type, object 90: 0.077ms
1.0 cpu, 256 ram, 90 iterations, array_ type, array_ 90: 0.084ms
1.0 cpu, 256 ram, 90 iterations, map___ type, map___ 90: 0.075ms
2.0 cpu, 256 ram, 90 iterations, object type, object 90: 0.099ms
2.0 cpu, 256 ram, 90 iterations, array_ type, array_ 90: 0.077ms
2.0 cpu, 256 ram, 90 iterations, map___ type, map___ 90: 0.093ms
3.0 cpu, 256 ram, 90 iterations, object type, object 90: 0.074ms
3.0 cpu, 256 ram, 90 iterations, array_ type, array_ 90: 0.079ms
3.0 cpu, 256 ram, 90 iterations, map___ type, map___ 90: 0.075ms
4.0 cpu, 256 ram, 90 iterations, object type, object 90: 0.095ms
4.0 cpu, 256 ram, 90 iterations, array_ type, array_ 90: 0.085ms
4.0 cpu, 256 ram, 90 iterations, map___ type, map___ 90: 0.088ms
0.5 cpu, 512 ram, 90 iterations, object type, object 90: 0.082ms
0.5 cpu, 512 ram, 90 iterations, array_ type, array_ 90: 0.076ms
0.5 cpu, 512 ram, 90 iterations, map___ type, map___ 90: 0.082ms
1.0 cpu, 512 ram, 90 iterations, object type, object 90: 0.077ms
1.0 cpu, 512 ram, 90 iterations, array_ type, array_ 90: 0.077ms
1.0 cpu, 512 ram, 90 iterations, map___ type, map___ 90: 0.072ms
2.0 cpu, 512 ram, 90 iterations, object type, object 90: 0.079ms
2.0 cpu, 512 ram, 90 iterations, array_ type, array_ 90: 0.07ms
2.0 cpu, 512 ram, 90 iterations, map___ type, map___ 90: 0.076ms
3.0 cpu, 512 ram, 90 iterations, object type, object 90: 0.077ms
3.0 cpu, 512 ram, 90 iterations, array_ type, array_ 90: 0.076ms
3.0 cpu, 512 ram, 90 iterations, map___ type, map___ 90: 0.075ms
4.0 cpu, 512 ram, 90 iterations, object type, object 90: 0.083ms
4.0 cpu, 512 ram, 90 iterations, array_ type, array_ 90: 0.074ms
4.0 cpu, 512 ram, 90 iterations, map___ type, map___ 90: 0.075ms
0.5 cpu, 1024 ram, 90 iterations, object type, object 90: 0.075ms
0.5 cpu, 1024 ram, 90 iterations, array_ type, array_ 90: 0.077ms
0.5 cpu, 1024 ram, 90 iterations, map___ type, map___ 90: 0.098ms
1.0 cpu, 1024 ram, 90 iterations, object type, object 90: 0.079ms
1.0 cpu, 1024 ram, 90 iterations, array_ type, array_ 90: 0.074ms
1.0 cpu, 1024 ram, 90 iterations, map___ type, map___ 90: 0.078ms
2.0 cpu, 1024 ram, 90 iterations, object type, object 90: 0.082ms
2.0 cpu, 1024 ram, 90 iterations, array_ type, array_ 90: 0.07ms
2.0 cpu, 1024 ram, 90 iterations, map___ type, map___ 90: 0.075ms
3.0 cpu, 1024 ram, 90 iterations, object type, object 90: 0.088ms
3.0 cpu, 1024 ram, 90 iterations, array_ type, array_ 90: 0.081ms
3.0 cpu, 1024 ram, 90 iterations, map___ type, map___ 90: 0.085ms
4.0 cpu, 1024 ram, 90 iterations, object type, object 90: 0.095ms
4.0 cpu, 1024 ram, 90 iterations, array_ type, array_ 90: 0.083ms
4.0 cpu, 1024 ram, 90 iterations, map___ type, map___ 90: 0.08ms
0.5 cpu, 2048 ram, 90 iterations, object type, object 90: 0.089ms
0.5 cpu, 2048 ram, 90 iterations, array_ type, array_ 90: 0.075ms
0.5 cpu, 2048 ram, 90 iterations, map___ type, map___ 90: 0.072ms
1.0 cpu, 2048 ram, 90 iterations, object type, object 90: 0.076ms
1.0 cpu, 2048 ram, 90 iterations, array_ type, array_ 90: 0.077ms
1.0 cpu, 2048 ram, 90 iterations, map___ type, map___ 90: 0.077ms
2.0 cpu, 2048 ram, 90 iterations, object type, object 90: 0.089ms
2.0 cpu, 2048 ram, 90 iterations, array_ type, array_ 90: 0.078ms
2.0 cpu, 2048 ram, 90 iterations, map___ type, map___ 90: 0.072ms
3.0 cpu, 2048 ram, 90 iterations, object type, object 90: 0.076ms
3.0 cpu, 2048 ram, 90 iterations, array_ type, array_ 90: 0.088ms
3.0 cpu, 2048 ram, 90 iterations, map___ type, map___ 90: 0.109ms
4.0 cpu, 2048 ram, 90 iterations, object type, object 90: 0.072ms
4.0 cpu, 2048 ram, 90 iterations, array_ type, array_ 90: 0.077ms
4.0 cpu, 2048 ram, 90 iterations, map___ type, map___ 90: 0.07ms
0.5 cpu, 4096 ram, 90 iterations, object type, object 90: 0.079ms
0.5 cpu, 4096 ram, 90 iterations, array_ type, array_ 90: 0.103ms
0.5 cpu, 4096 ram, 90 iterations, map___ type, map___ 90: 0.078ms
1.0 cpu, 4096 ram, 90 iterations, object type, object 90: 0.072ms
1.0 cpu, 4096 ram, 90 iterations, array_ type, array_ 90: 0.07ms
1.0 cpu, 4096 ram, 90 iterations, map___ type, map___ 90: 0.076ms
2.0 cpu, 4096 ram, 90 iterations, object type, object 90: 0.084ms
2.0 cpu, 4096 ram, 90 iterations, array_ type, array_ 90: 0.069ms
2.0 cpu, 4096 ram, 90 iterations, map___ type, map___ 90: 0.081ms
3.0 cpu, 4096 ram, 90 iterations, object type, object 90: 0.081ms
3.0 cpu, 4096 ram, 90 iterations, array_ type, array_ 90: 0.082ms
3.0 cpu, 4096 ram, 90 iterations, map___ type, map___ 90: 0.077ms
4.0 cpu, 4096 ram, 90 iterations, object type, object 90: 0.08ms
4.0 cpu, 4096 ram, 90 iterations, array_ type, array_ 90: 0.074ms
4.0 cpu, 4096 ram, 90 iterations, map___ type, map___ 90: 0.076ms
0.5 cpu, 8192 ram, 90 iterations, object type, object 90: 0.077ms
0.5 cpu, 8192 ram, 90 iterations, array_ type, array_ 90: 0.074ms
0.5 cpu, 8192 ram, 90 iterations, map___ type, map___ 90: 0.077ms
1.0 cpu, 8192 ram, 90 iterations, object type, object 90: 0.08ms
1.0 cpu, 8192 ram, 90 iterations, array_ type, array_ 90: 0.084ms
1.0 cpu, 8192 ram, 90 iterations, map___ type, map___ 90: 0.076ms
2.0 cpu, 8192 ram, 90 iterations, object type, object 90: 0.074ms
2.0 cpu, 8192 ram, 90 iterations, array_ type, array_ 90: 0.07ms
2.0 cpu, 8192 ram, 90 iterations, map___ type, map___ 90: 0.091ms
3.0 cpu, 8192 ram, 90 iterations, object type, object 90: 0.086ms
3.0 cpu, 8192 ram, 90 iterations, array_ type, array_ 90: 0.073ms
3.0 cpu, 8192 ram, 90 iterations, map___ type, map___ 90: 0.082ms
4.0 cpu, 8192 ram, 90 iterations, object type, object 90: 0.086ms
4.0 cpu, 8192 ram, 90 iterations, array_ type, array_ 90: 0.076ms
4.0 cpu, 8192 ram, 90 iterations, map___ type, map___ 90: 0.077ms
0.5 cpu, 16384 ram, 90 iterations, object type, object 90: 0.108ms
0.5 cpu, 16384 ram, 90 iterations, array_ type, array_ 90: 0.073ms
0.5 cpu, 16384 ram, 90 iterations, map___ type, map___ 90: 0.082ms
1.0 cpu, 16384 ram, 90 iterations, object type, object 90: 0.081ms
1.0 cpu, 16384 ram, 90 iterations, array_ type, array_ 90: 0.076ms
1.0 cpu, 16384 ram, 90 iterations, map___ type, map___ 90: 0.081ms
2.0 cpu, 16384 ram, 90 iterations, object type, object 90: 0.079ms
2.0 cpu, 16384 ram, 90 iterations, array_ type, array_ 90: 0.078ms
2.0 cpu, 16384 ram, 90 iterations, map___ type, map___ 90: 0.093ms
3.0 cpu, 16384 ram, 90 iterations, object type, object 90: 0.08ms
3.0 cpu, 16384 ram, 90 iterations, array_ type, array_ 90: 0.072ms
3.0 cpu, 16384 ram, 90 iterations, map___ type, map___ 90: 0.072ms
4.0 cpu, 16384 ram, 90 iterations, object type, object 90: 0.072ms
4.0 cpu, 16384 ram, 90 iterations, array_ type, array_ 90: 0.073ms
4.0 cpu, 16384 ram, 90 iterations, map___ type, map___ 90: 0.079ms
0.5 cpu, 128 ram, 100 iterations, object type, object 100: 0.076ms
0.5 cpu, 128 ram, 100 iterations, array_ type, array_ 100: 0.074ms
0.5 cpu, 128 ram, 100 iterations, map___ type, map___ 100: 0.08ms
1.0 cpu, 128 ram, 100 iterations, object type, object 100: 0.094ms
1.0 cpu, 128 ram, 100 iterations, array_ type, array_ 100: 0.071ms
1.0 cpu, 128 ram, 100 iterations, map___ type, map___ 100: 0.082ms
2.0 cpu, 128 ram, 100 iterations, object type, object 100: 0.079ms
2.0 cpu, 128 ram, 100 iterations, array_ type, array_ 100: 0.077ms
2.0 cpu, 128 ram, 100 iterations, map___ type, map___ 100: 0.079ms
3.0 cpu, 128 ram, 100 iterations, object type, object 100: 0.078ms
3.0 cpu, 128 ram, 100 iterations, array_ type, array_ 100: 0.079ms
3.0 cpu, 128 ram, 100 iterations, map___ type, map___ 100: 0.085ms
4.0 cpu, 128 ram, 100 iterations, object type, object 100: 0.075ms
4.0 cpu, 128 ram, 100 iterations, array_ type, array_ 100: 0.076ms
4.0 cpu, 128 ram, 100 iterations, map___ type, map___ 100: 0.089ms
0.5 cpu, 256 ram, 100 iterations, object type, object 100: 0.07ms
0.5 cpu, 256 ram, 100 iterations, array_ type, array_ 100: 0.075ms
0.5 cpu, 256 ram, 100 iterations, map___ type, map___ 100: 0.078ms
1.0 cpu, 256 ram, 100 iterations, object type, object 100: 0.082ms
1.0 cpu, 256 ram, 100 iterations, array_ type, array_ 100: 0.075ms
1.0 cpu, 256 ram, 100 iterations, map___ type, map___ 100: 0.079ms
2.0 cpu, 256 ram, 100 iterations, object type, object 100: 0.082ms
2.0 cpu, 256 ram, 100 iterations, array_ type, array_ 100: 0.078ms
2.0 cpu, 256 ram, 100 iterations, map___ type, map___ 100: 0.076ms
3.0 cpu, 256 ram, 100 iterations, object type, object 100: 0.075ms
3.0 cpu, 256 ram, 100 iterations, array_ type, array_ 100: 0.088ms
3.0 cpu, 256 ram, 100 iterations, map___ type, map___ 100: 0.099ms
4.0 cpu, 256 ram, 100 iterations, object type, object 100: 0.085ms
4.0 cpu, 256 ram, 100 iterations, array_ type, array_ 100: 0.083ms
4.0 cpu, 256 ram, 100 iterations, map___ type, map___ 100: 0.076ms
0.5 cpu, 512 ram, 100 iterations, object type, object 100: 0.098ms
0.5 cpu, 512 ram, 100 iterations, array_ type, array_ 100: 0.079ms
0.5 cpu, 512 ram, 100 iterations, map___ type, map___ 100: 0.084ms
1.0 cpu, 512 ram, 100 iterations, object type, object 100: 0.086ms
1.0 cpu, 512 ram, 100 iterations, array_ type, array_ 100: 0.07ms
1.0 cpu, 512 ram, 100 iterations, map___ type, map___ 100: 0.078ms
2.0 cpu, 512 ram, 100 iterations, object type, object 100: 0.081ms
2.0 cpu, 512 ram, 100 iterations, array_ type, array_ 100: 0.086ms
2.0 cpu, 512 ram, 100 iterations, map___ type, map___ 100: 0.077ms
3.0 cpu, 512 ram, 100 iterations, object type, object 100: 0.079ms
3.0 cpu, 512 ram, 100 iterations, array_ type, array_ 100: 0.073ms
3.0 cpu, 512 ram, 100 iterations, map___ type, map___ 100: 0.072ms
4.0 cpu, 512 ram, 100 iterations, object type, object 100: 0.085ms
4.0 cpu, 512 ram, 100 iterations, array_ type, array_ 100: 0.078ms
4.0 cpu, 512 ram, 100 iterations, map___ type, map___ 100: 0.079ms
0.5 cpu, 1024 ram, 100 iterations, object type, object 100: 0.074ms
0.5 cpu, 1024 ram, 100 iterations, array_ type, array_ 100: 0.071ms
0.5 cpu, 1024 ram, 100 iterations, map___ type, map___ 100: 0.072ms
1.0 cpu, 1024 ram, 100 iterations, object type, object 100: 0.081ms
1.0 cpu, 1024 ram, 100 iterations, array_ type, array_ 100: 0.082ms
1.0 cpu, 1024 ram, 100 iterations, map___ type, map___ 100: 0.09ms
2.0 cpu, 1024 ram, 100 iterations, object type, object 100: 0.078ms
2.0 cpu, 1024 ram, 100 iterations, array_ type, array_ 100: 0.092ms
2.0 cpu, 1024 ram, 100 iterations, map___ type, map___ 100: 0.078ms
3.0 cpu, 1024 ram, 100 iterations, object type, object 100: 0.084ms
3.0 cpu, 1024 ram, 100 iterations, array_ type, array_ 100: 0.082ms
3.0 cpu, 1024 ram, 100 iterations, map___ type, map___ 100: 0.072ms
4.0 cpu, 1024 ram, 100 iterations, object type, object 100: 0.079ms
4.0 cpu, 1024 ram, 100 iterations, array_ type, array_ 100: 0.072ms
4.0 cpu, 1024 ram, 100 iterations, map___ type, map___ 100: 0.072ms
0.5 cpu, 2048 ram, 100 iterations, object type, object 100: 0.082ms
0.5 cpu, 2048 ram, 100 iterations, array_ type, array_ 100: 0.077ms
0.5 cpu, 2048 ram, 100 iterations, map___ type, map___ 100: 0.077ms
1.0 cpu, 2048 ram, 100 iterations, object type, object 100: 0.082ms
1.0 cpu, 2048 ram, 100 iterations, array_ type, array_ 100: 0.076ms
1.0 cpu, 2048 ram, 100 iterations, map___ type, map___ 100: 0.074ms
2.0 cpu, 2048 ram, 100 iterations, object type, object 100: 0.084ms
2.0 cpu, 2048 ram, 100 iterations, array_ type, array_ 100: 0.074ms
2.0 cpu, 2048 ram, 100 iterations, map___ type, map___ 100: 0.079ms
3.0 cpu, 2048 ram, 100 iterations, object type, object 100: 0.081ms
3.0 cpu, 2048 ram, 100 iterations, array_ type, array_ 100: 0.077ms
3.0 cpu, 2048 ram, 100 iterations, map___ type, map___ 100: 0.074ms
4.0 cpu, 2048 ram, 100 iterations, object type, object 100: 0.077ms
4.0 cpu, 2048 ram, 100 iterations, array_ type, array_ 100: 0.081ms
4.0 cpu, 2048 ram, 100 iterations, map___ type, map___ 100: 0.095ms
0.5 cpu, 4096 ram, 100 iterations, object type, object 100: 0.08ms
0.5 cpu, 4096 ram, 100 iterations, array_ type, array_ 100: 0.077ms
0.5 cpu, 4096 ram, 100 iterations, map___ type, map___ 100: 0.07ms
1.0 cpu, 4096 ram, 100 iterations, object type, object 100: 0.081ms
1.0 cpu, 4096 ram, 100 iterations, array_ type, array_ 100: 0.081ms
1.0 cpu, 4096 ram, 100 iterations, map___ type, map___ 100: 0.072ms
2.0 cpu, 4096 ram, 100 iterations, object type, object 100: 0.083ms
2.0 cpu, 4096 ram, 100 iterations, array_ type, array_ 100: 0.081ms
2.0 cpu, 4096 ram, 100 iterations, map___ type, map___ 100: 0.09ms
3.0 cpu, 4096 ram, 100 iterations, object type, object 100: 0.092ms
3.0 cpu, 4096 ram, 100 iterations, array_ type, array_ 100: 0.075ms
3.0 cpu, 4096 ram, 100 iterations, map___ type, map___ 100: 0.077ms
4.0 cpu, 4096 ram, 100 iterations, object type, object 100: 0.08ms
4.0 cpu, 4096 ram, 100 iterations, array_ type, array_ 100: 0.082ms
4.0 cpu, 4096 ram, 100 iterations, map___ type, map___ 100: 0.073ms
0.5 cpu, 8192 ram, 100 iterations, object type, object 100: 0.081ms
0.5 cpu, 8192 ram, 100 iterations, array_ type, array_ 100: 0.082ms
0.5 cpu, 8192 ram, 100 iterations, map___ type, map___ 100: 0.07ms
1.0 cpu, 8192 ram, 100 iterations, object type, object 100: 0.088ms
1.0 cpu, 8192 ram, 100 iterations, array_ type, array_ 100: 0.079ms
1.0 cpu, 8192 ram, 100 iterations, map___ type, map___ 100: 0.076ms
2.0 cpu, 8192 ram, 100 iterations, object type, object 100: 0.081ms
2.0 cpu, 8192 ram, 100 iterations, array_ type, array_ 100: 0.074ms
2.0 cpu, 8192 ram, 100 iterations, map___ type, map___ 100: 0.072ms
3.0 cpu, 8192 ram, 100 iterations, object type, object 100: 0.078ms
3.0 cpu, 8192 ram, 100 iterations, array_ type, array_ 100: 0.084ms
3.0 cpu, 8192 ram, 100 iterations, map___ type, map___ 100: 0.089ms
4.0 cpu, 8192 ram, 100 iterations, object type, object 100: 0.088ms
4.0 cpu, 8192 ram, 100 iterations, array_ type, array_ 100: 0.098ms
4.0 cpu, 8192 ram, 100 iterations, map___ type, map___ 100: 0.079ms
0.5 cpu, 16384 ram, 100 iterations, object type, object 100: 0.071ms
0.5 cpu, 16384 ram, 100 iterations, array_ type, array_ 100: 0.072ms
0.5 cpu, 16384 ram, 100 iterations, map___ type, map___ 100: 0.087ms
1.0 cpu, 16384 ram, 100 iterations, object type, object 100: 0.077ms
1.0 cpu, 16384 ram, 100 iterations, array_ type, array_ 100: 0.082ms
1.0 cpu, 16384 ram, 100 iterations, map___ type, map___ 100: 0.081ms
2.0 cpu, 16384 ram, 100 iterations, object type, object 100: 0.09ms
2.0 cpu, 16384 ram, 100 iterations, array_ type, array_ 100: 0.082ms
2.0 cpu, 16384 ram, 100 iterations, map___ type, map___ 100: 0.107ms
3.0 cpu, 16384 ram, 100 iterations, object type, object 100: 0.091ms
3.0 cpu, 16384 ram, 100 iterations, array_ type, array_ 100: 0.075ms
3.0 cpu, 16384 ram, 100 iterations, map___ type, map___ 100: 0.071ms
4.0 cpu, 16384 ram, 100 iterations, object type, object 100: 0.073ms
4.0 cpu, 16384 ram, 100 iterations, array_ type, array_ 100: 0.079ms
4.0 cpu, 16384 ram, 100 iterations, map___ type, map___ 100: 0.075ms
0.5 cpu, 128 ram, 200 iterations, object type, object 200: 0.083ms
0.5 cpu, 128 ram, 200 iterations, array_ type, array_ 200: 0.087ms
0.5 cpu, 128 ram, 200 iterations, map___ type, map___ 200: 0.083ms
1.0 cpu, 128 ram, 200 iterations, object type, object 200: 0.075ms
1.0 cpu, 128 ram, 200 iterations, array_ type, array_ 200: 0.084ms
1.0 cpu, 128 ram, 200 iterations, map___ type, map___ 200: 0.086ms
2.0 cpu, 128 ram, 200 iterations, object type, object 200: 0.086ms
2.0 cpu, 128 ram, 200 iterations, array_ type, array_ 200: 0.091ms
2.0 cpu, 128 ram, 200 iterations, map___ type, map___ 200: 0.096ms
3.0 cpu, 128 ram, 200 iterations, object type, object 200: 0.08ms
3.0 cpu, 128 ram, 200 iterations, array_ type, array_ 200: 0.084ms
3.0 cpu, 128 ram, 200 iterations, map___ type, map___ 200: 0.095ms
4.0 cpu, 128 ram, 200 iterations, object type, object 200: 0.084ms
4.0 cpu, 128 ram, 200 iterations, array_ type, array_ 200: 0.073ms
4.0 cpu, 128 ram, 200 iterations, map___ type, map___ 200: 0.079ms
0.5 cpu, 256 ram, 200 iterations, object type, object 200: 0.084ms
0.5 cpu, 256 ram, 200 iterations, array_ type, array_ 200: 0.088ms
0.5 cpu, 256 ram, 200 iterations, map___ type, map___ 200: 0.086ms
1.0 cpu, 256 ram, 200 iterations, object type, object 200: 0.078ms
1.0 cpu, 256 ram, 200 iterations, array_ type, array_ 200: 0.088ms
1.0 cpu, 256 ram, 200 iterations, map___ type, map___ 200: 0.106ms
2.0 cpu, 256 ram, 200 iterations, object type, object 200: 0.094ms
2.0 cpu, 256 ram, 200 iterations, array_ type, array_ 200: 0.076ms
2.0 cpu, 256 ram, 200 iterations, map___ type, map___ 200: 0.083ms
3.0 cpu, 256 ram, 200 iterations, object type, object 200: 0.078ms
3.0 cpu, 256 ram, 200 iterations, array_ type, array_ 200: 0.075ms
3.0 cpu, 256 ram, 200 iterations, map___ type, map___ 200: 0.102ms
4.0 cpu, 256 ram, 200 iterations, object type, object 200: 0.088ms
4.0 cpu, 256 ram, 200 iterations, array_ type, array_ 200: 0.081ms
4.0 cpu, 256 ram, 200 iterations, map___ type, map___ 200: 0.085ms
0.5 cpu, 512 ram, 200 iterations, object type, object 200: 0.092ms
0.5 cpu, 512 ram, 200 iterations, array_ type, array_ 200: 0.083ms
0.5 cpu, 512 ram, 200 iterations, map___ type, map___ 200: 0.081ms
1.0 cpu, 512 ram, 200 iterations, object type, object 200: 0.11ms
1.0 cpu, 512 ram, 200 iterations, array_ type, array_ 200: 0.076ms
1.0 cpu, 512 ram, 200 iterations, map___ type, map___ 200: 0.084ms
2.0 cpu, 512 ram, 200 iterations, object type, object 200: 0.079ms
2.0 cpu, 512 ram, 200 iterations, array_ type, array_ 200: 0.075ms
2.0 cpu, 512 ram, 200 iterations, map___ type, map___ 200: 0.086ms
3.0 cpu, 512 ram, 200 iterations, object type, object 200: 0.081ms
3.0 cpu, 512 ram, 200 iterations, array_ type, array_ 200: 0.095ms
3.0 cpu, 512 ram, 200 iterations, map___ type, map___ 200: 0.089ms
4.0 cpu, 512 ram, 200 iterations, object type, object 200: 0.076ms
4.0 cpu, 512 ram, 200 iterations, array_ type, array_ 200: 0.076ms
4.0 cpu, 512 ram, 200 iterations, map___ type, map___ 200: 0.085ms
0.5 cpu, 1024 ram, 200 iterations, object type, object 200: 0.079ms
0.5 cpu, 1024 ram, 200 iterations, array_ type, array_ 200: 0.085ms
0.5 cpu, 1024 ram, 200 iterations, map___ type, map___ 200: 0.093ms
1.0 cpu, 1024 ram, 200 iterations, object type, object 200: 0.084ms
1.0 cpu, 1024 ram, 200 iterations, array_ type, array_ 200: 0.086ms
1.0 cpu, 1024 ram, 200 iterations, map___ type, map___ 200: 0.089ms
2.0 cpu, 1024 ram, 200 iterations, object type, object 200: 0.091ms
2.0 cpu, 1024 ram, 200 iterations, array_ type, array_ 200: 0.079ms
2.0 cpu, 1024 ram, 200 iterations, map___ type, map___ 200: 0.093ms
3.0 cpu, 1024 ram, 200 iterations, object type, object 200: 0.095ms
3.0 cpu, 1024 ram, 200 iterations, array_ type, array_ 200: 0.094ms
3.0 cpu, 1024 ram, 200 iterations, map___ type, map___ 200: 0.094ms
4.0 cpu, 1024 ram, 200 iterations, object type, object 200: 0.08ms
4.0 cpu, 1024 ram, 200 iterations, array_ type, array_ 200: 0.098ms
4.0 cpu, 1024 ram, 200 iterations, map___ type, map___ 200: 0.091ms
0.5 cpu, 2048 ram, 200 iterations, object type, object 200: 0.084ms
0.5 cpu, 2048 ram, 200 iterations, array_ type, array_ 200: 0.089ms
0.5 cpu, 2048 ram, 200 iterations, map___ type, map___ 200: 0.11ms
1.0 cpu, 2048 ram, 200 iterations, object type, object 200: 0.093ms
1.0 cpu, 2048 ram, 200 iterations, array_ type, array_ 200: 0.082ms
1.0 cpu, 2048 ram, 200 iterations, map___ type, map___ 200: 0.107ms
2.0 cpu, 2048 ram, 200 iterations, object type, object 200: 0.079ms
2.0 cpu, 2048 ram, 200 iterations, array_ type, array_ 200: 0.096ms
2.0 cpu, 2048 ram, 200 iterations, map___ type, map___ 200: 0.084ms
3.0 cpu, 2048 ram, 200 iterations, object type, object 200: 0.08ms
3.0 cpu, 2048 ram, 200 iterations, array_ type, array_ 200: 0.088ms
3.0 cpu, 2048 ram, 200 iterations, map___ type, map___ 200: 0.082ms
4.0 cpu, 2048 ram, 200 iterations, object type, object 200: 0.078ms
4.0 cpu, 2048 ram, 200 iterations, array_ type, array_ 200: 0.081ms
4.0 cpu, 2048 ram, 200 iterations, map___ type, map___ 200: 0.12ms
0.5 cpu, 4096 ram, 200 iterations, object type, object 200: 0.088ms
0.5 cpu, 4096 ram, 200 iterations, array_ type, array_ 200: 0.08ms
0.5 cpu, 4096 ram, 200 iterations, map___ type, map___ 200: 0.088ms
1.0 cpu, 4096 ram, 200 iterations, object type, object 200: 0.082ms
1.0 cpu, 4096 ram, 200 iterations, array_ type, array_ 200: 0.092ms
1.0 cpu, 4096 ram, 200 iterations, map___ type, map___ 200: 0.078ms
2.0 cpu, 4096 ram, 200 iterations, object type, object 200: 0.078ms
2.0 cpu, 4096 ram, 200 iterations, array_ type, array_ 200: 0.085ms
2.0 cpu, 4096 ram, 200 iterations, map___ type, map___ 200: 0.087ms
3.0 cpu, 4096 ram, 200 iterations, object type, object 200: 0.087ms
3.0 cpu, 4096 ram, 200 iterations, array_ type, array_ 200: 0.093ms
3.0 cpu, 4096 ram, 200 iterations, map___ type, map___ 200: 0.093ms
4.0 cpu, 4096 ram, 200 iterations, object type, object 200: 0.09ms
4.0 cpu, 4096 ram, 200 iterations, array_ type, array_ 200: 0.09ms
4.0 cpu, 4096 ram, 200 iterations, map___ type, map___ 200: 0.089ms
0.5 cpu, 8192 ram, 200 iterations, object type, object 200: 0.081ms
0.5 cpu, 8192 ram, 200 iterations, array_ type, array_ 200: 0.095ms
0.5 cpu, 8192 ram, 200 iterations, map___ type, map___ 200: 0.087ms
1.0 cpu, 8192 ram, 200 iterations, object type, object 200: 0.09ms
1.0 cpu, 8192 ram, 200 iterations, array_ type, array_ 200: 0.088ms
1.0 cpu, 8192 ram, 200 iterations, map___ type, map___ 200: 0.085ms
2.0 cpu, 8192 ram, 200 iterations, object type, object 200: 0.086ms
2.0 cpu, 8192 ram, 200 iterations, array_ type, array_ 200: 0.084ms
2.0 cpu, 8192 ram, 200 iterations, map___ type, map___ 200: 0.103ms
3.0 cpu, 8192 ram, 200 iterations, object type, object 200: 0.08ms
3.0 cpu, 8192 ram, 200 iterations, array_ type, array_ 200: 0.091ms
3.0 cpu, 8192 ram, 200 iterations, map___ type, map___ 200: 0.089ms
4.0 cpu, 8192 ram, 200 iterations, object type, object 200: 0.085ms
4.0 cpu, 8192 ram, 200 iterations, array_ type, array_ 200: 0.082ms
4.0 cpu, 8192 ram, 200 iterations, map___ type, map___ 200: 0.113ms
0.5 cpu, 16384 ram, 200 iterations, object type, object 200: 0.084ms
0.5 cpu, 16384 ram, 200 iterations, array_ type, array_ 200: 0.088ms
0.5 cpu, 16384 ram, 200 iterations, map___ type, map___ 200: 0.089ms
1.0 cpu, 16384 ram, 200 iterations, object type, object 200: 0.082ms
1.0 cpu, 16384 ram, 200 iterations, array_ type, array_ 200: 0.081ms
1.0 cpu, 16384 ram, 200 iterations, map___ type, map___ 200: 0.082ms
2.0 cpu, 16384 ram, 200 iterations, object type, object 200: 0.088ms
2.0 cpu, 16384 ram, 200 iterations, array_ type, array_ 200: 0.085ms
2.0 cpu, 16384 ram, 200 iterations, map___ type, map___ 200: 0.091ms
3.0 cpu, 16384 ram, 200 iterations, object type, object 200: 0.087ms
3.0 cpu, 16384 ram, 200 iterations, array_ type, array_ 200: 0.083ms
3.0 cpu, 16384 ram, 200 iterations, map___ type, map___ 200: 0.091ms
4.0 cpu, 16384 ram, 200 iterations, object type, object 200: 0.081ms
4.0 cpu, 16384 ram, 200 iterations, array_ type, array_ 200: 0.085ms
4.0 cpu, 16384 ram, 200 iterations, map___ type, map___ 200: 0.086ms
0.5 cpu, 128 ram, 300 iterations, object type, object 300: 0.102ms
0.5 cpu, 128 ram, 300 iterations, array_ type, array_ 300: 0.103ms
0.5 cpu, 128 ram, 300 iterations, map___ type, map___ 300: 0.103ms
1.0 cpu, 128 ram, 300 iterations, object type, object 300: 0.099ms
1.0 cpu, 128 ram, 300 iterations, array_ type, array_ 300: 0.083ms
1.0 cpu, 128 ram, 300 iterations, map___ type, map___ 300: 0.099ms
2.0 cpu, 128 ram, 300 iterations, object type, object 300: 0.087ms
2.0 cpu, 128 ram, 300 iterations, array_ type, array_ 300: 0.088ms
2.0 cpu, 128 ram, 300 iterations, map___ type, map___ 300: 0.092ms
3.0 cpu, 128 ram, 300 iterations, object type, object 300: 0.091ms
3.0 cpu, 128 ram, 300 iterations, array_ type, array_ 300: 0.103ms
3.0 cpu, 128 ram, 300 iterations, map___ type, map___ 300: 0.104ms
4.0 cpu, 128 ram, 300 iterations, object type, object 300: 0.087ms
4.0 cpu, 128 ram, 300 iterations, array_ type, array_ 300: 0.081ms
4.0 cpu, 128 ram, 300 iterations, map___ type, map___ 300: 0.101ms
0.5 cpu, 256 ram, 300 iterations, object type, object 300: 0.083ms
0.5 cpu, 256 ram, 300 iterations, array_ type, array_ 300: 0.089ms
0.5 cpu, 256 ram, 300 iterations, map___ type, map___ 300: 0.098ms
1.0 cpu, 256 ram, 300 iterations, object type, object 300: 0.088ms
1.0 cpu, 256 ram, 300 iterations, array_ type, array_ 300: 0.084ms
1.0 cpu, 256 ram, 300 iterations, map___ type, map___ 300: 0.098ms
2.0 cpu, 256 ram, 300 iterations, object type, object 300: 0.104ms
2.0 cpu, 256 ram, 300 iterations, array_ type, array_ 300: 0.08ms
2.0 cpu, 256 ram, 300 iterations, map___ type, map___ 300: 0.114ms
3.0 cpu, 256 ram, 300 iterations, object type, object 300: 0.096ms
3.0 cpu, 256 ram, 300 iterations, array_ type, array_ 300: 0.102ms
3.0 cpu, 256 ram, 300 iterations, map___ type, map___ 300: 0.103ms
4.0 cpu, 256 ram, 300 iterations, object type, object 300: 0.083ms
4.0 cpu, 256 ram, 300 iterations, array_ type, array_ 300: 0.113ms
4.0 cpu, 256 ram, 300 iterations, map___ type, map___ 300: 0.103ms
0.5 cpu, 512 ram, 300 iterations, object type, object 300: 0.108ms
0.5 cpu, 512 ram, 300 iterations, array_ type, array_ 300: 0.087ms
0.5 cpu, 512 ram, 300 iterations, map___ type, map___ 300: 0.111ms
1.0 cpu, 512 ram, 300 iterations, object type, object 300: 0.096ms
1.0 cpu, 512 ram, 300 iterations, array_ type, array_ 300: 0.088ms
1.0 cpu, 512 ram, 300 iterations, map___ type, map___ 300: 0.099ms
2.0 cpu, 512 ram, 300 iterations, object type, object 300: 0.102ms
2.0 cpu, 512 ram, 300 iterations, array_ type, array_ 300: 0.09ms
2.0 cpu, 512 ram, 300 iterations, map___ type, map___ 300: 0.1ms
3.0 cpu, 512 ram, 300 iterations, object type, object 300: 0.092ms
3.0 cpu, 512 ram, 300 iterations, array_ type, array_ 300: 0.1ms
3.0 cpu, 512 ram, 300 iterations, map___ type, map___ 300: 0.105ms
4.0 cpu, 512 ram, 300 iterations, object type, object 300: 0.087ms
4.0 cpu, 512 ram, 300 iterations, array_ type, array_ 300: 0.093ms
4.0 cpu, 512 ram, 300 iterations, map___ type, map___ 300: 0.1ms
0.5 cpu, 1024 ram, 300 iterations, object type, object 300: 0.088ms
0.5 cpu, 1024 ram, 300 iterations, array_ type, array_ 300: 0.09ms
0.5 cpu, 1024 ram, 300 iterations, map___ type, map___ 300: 0.098ms
1.0 cpu, 1024 ram, 300 iterations, object type, object 300: 0.089ms
1.0 cpu, 1024 ram, 300 iterations, array_ type, array_ 300: 0.096ms
1.0 cpu, 1024 ram, 300 iterations, map___ type, map___ 300: 0.1ms
2.0 cpu, 1024 ram, 300 iterations, object type, object 300: 0.088ms
2.0 cpu, 1024 ram, 300 iterations, array_ type, array_ 300: 0.087ms
2.0 cpu, 1024 ram, 300 iterations, map___ type, map___ 300: 0.091ms
3.0 cpu, 1024 ram, 300 iterations, object type, object 300: 0.09ms
3.0 cpu, 1024 ram, 300 iterations, array_ type, array_ 300: 0.09ms
3.0 cpu, 1024 ram, 300 iterations, map___ type, map___ 300: 0.091ms
4.0 cpu, 1024 ram, 300 iterations, object type, object 300: 0.087ms
4.0 cpu, 1024 ram, 300 iterations, array_ type, array_ 300: 0.087ms
4.0 cpu, 1024 ram, 300 iterations, map___ type, map___ 300: 0.109ms
0.5 cpu, 2048 ram, 300 iterations, object type, object 300: 0.098ms
0.5 cpu, 2048 ram, 300 iterations, array_ type, array_ 300: 0.096ms
0.5 cpu, 2048 ram, 300 iterations, map___ type, map___ 300: 0.11ms
1.0 cpu, 2048 ram, 300 iterations, object type, object 300: 0.097ms
1.0 cpu, 2048 ram, 300 iterations, array_ type, array_ 300: 0.116ms
1.0 cpu, 2048 ram, 300 iterations, map___ type, map___ 300: 0.101ms
2.0 cpu, 2048 ram, 300 iterations, object type, object 300: 0.094ms
2.0 cpu, 2048 ram, 300 iterations, array_ type, array_ 300: 0.096ms
2.0 cpu, 2048 ram, 300 iterations, map___ type, map___ 300: 0.097ms
3.0 cpu, 2048 ram, 300 iterations, object type, object 300: 0.096ms
3.0 cpu, 2048 ram, 300 iterations, array_ type, array_ 300: 0.091ms
3.0 cpu, 2048 ram, 300 iterations, map___ type, map___ 300: 0.099ms
4.0 cpu, 2048 ram, 300 iterations, object type, object 300: 0.093ms
4.0 cpu, 2048 ram, 300 iterations, array_ type, array_ 300: 0.109ms
4.0 cpu, 2048 ram, 300 iterations, map___ type, map___ 300: 0.096ms
0.5 cpu, 4096 ram, 300 iterations, object type, object 300: 0.088ms
0.5 cpu, 4096 ram, 300 iterations, array_ type, array_ 300: 0.091ms
0.5 cpu, 4096 ram, 300 iterations, map___ type, map___ 300: 0.105ms
1.0 cpu, 4096 ram, 300 iterations, object type, object 300: 0.091ms
1.0 cpu, 4096 ram, 300 iterations, array_ type, array_ 300: 0.086ms
1.0 cpu, 4096 ram, 300 iterations, map___ type, map___ 300: 0.094ms
2.0 cpu, 4096 ram, 300 iterations, object type, object 300: 0.089ms
2.0 cpu, 4096 ram, 300 iterations, array_ type, array_ 300: 0.086ms
2.0 cpu, 4096 ram, 300 iterations, map___ type, map___ 300: 0.099ms
3.0 cpu, 4096 ram, 300 iterations, object type, object 300: 0.091ms
3.0 cpu, 4096 ram, 300 iterations, array_ type, array_ 300: 0.085ms
3.0 cpu, 4096 ram, 300 iterations, map___ type, map___ 300: 0.112ms
4.0 cpu, 4096 ram, 300 iterations, object type, object 300: 0.092ms
4.0 cpu, 4096 ram, 300 iterations, array_ type, array_ 300: 0.094ms
4.0 cpu, 4096 ram, 300 iterations, map___ type, map___ 300: 0.097ms
0.5 cpu, 8192 ram, 300 iterations, object type, object 300: 0.116ms
0.5 cpu, 8192 ram, 300 iterations, array_ type, array_ 300: 0.086ms
0.5 cpu, 8192 ram, 300 iterations, map___ type, map___ 300: 0.102ms
1.0 cpu, 8192 ram, 300 iterations, object type, object 300: 0.097ms
1.0 cpu, 8192 ram, 300 iterations, array_ type, array_ 300: 0.094ms
1.0 cpu, 8192 ram, 300 iterations, map___ type, map___ 300: 0.109ms
2.0 cpu, 8192 ram, 300 iterations, object type, object 300: 0.091ms
2.0 cpu, 8192 ram, 300 iterations, array_ type, array_ 300: 0.091ms
2.0 cpu, 8192 ram, 300 iterations, map___ type, map___ 300: 0.105ms
3.0 cpu, 8192 ram, 300 iterations, object type, object 300: 0.094ms
3.0 cpu, 8192 ram, 300 iterations, array_ type, array_ 300: 0.09ms
3.0 cpu, 8192 ram, 300 iterations, map___ type, map___ 300: 0.096ms
4.0 cpu, 8192 ram, 300 iterations, object type, object 300: 0.092ms
4.0 cpu, 8192 ram, 300 iterations, array_ type, array_ 300: 0.09ms
4.0 cpu, 8192 ram, 300 iterations, map___ type, map___ 300: 0.097ms
0.5 cpu, 16384 ram, 300 iterations, object type, object 300: 0.1ms
0.5 cpu, 16384 ram, 300 iterations, array_ type, array_ 300: 0.092ms
0.5 cpu, 16384 ram, 300 iterations, map___ type, map___ 300: 0.118ms
1.0 cpu, 16384 ram, 300 iterations, object type, object 300: 0.088ms
1.0 cpu, 16384 ram, 300 iterations, array_ type, array_ 300: 0.088ms
1.0 cpu, 16384 ram, 300 iterations, map___ type, map___ 300: 0.097ms
2.0 cpu, 16384 ram, 300 iterations, object type, object 300: 0.101ms
2.0 cpu, 16384 ram, 300 iterations, array_ type, array_ 300: 0.085ms
2.0 cpu, 16384 ram, 300 iterations, map___ type, map___ 300: 0.1ms
3.0 cpu, 16384 ram, 300 iterations, object type, object 300: 0.089ms
3.0 cpu, 16384 ram, 300 iterations, array_ type, array_ 300: 0.088ms
3.0 cpu, 16384 ram, 300 iterations, map___ type, map___ 300: 0.099ms
4.0 cpu, 16384 ram, 300 iterations, object type, object 300: 0.093ms
4.0 cpu, 16384 ram, 300 iterations, array_ type, array_ 300: 0.094ms
4.0 cpu, 16384 ram, 300 iterations, map___ type, map___ 300: 0.09ms
0.5 cpu, 128 ram, 400 iterations, object type, object 400: 0.115ms
0.5 cpu, 128 ram, 400 iterations, array_ type, array_ 400: 0.103ms
0.5 cpu, 128 ram, 400 iterations, map___ type, map___ 400: 0.125ms
1.0 cpu, 128 ram, 400 iterations, object type, object 400: 0.098ms
1.0 cpu, 128 ram, 400 iterations, array_ type, array_ 400: 0.087ms
1.0 cpu, 128 ram, 400 iterations, map___ type, map___ 400: 0.104ms
2.0 cpu, 128 ram, 400 iterations, object type, object 400: 0.093ms
2.0 cpu, 128 ram, 400 iterations, array_ type, array_ 400: 0.099ms
2.0 cpu, 128 ram, 400 iterations, map___ type, map___ 400: 0.113ms
3.0 cpu, 128 ram, 400 iterations, object type, object 400: 0.113ms
3.0 cpu, 128 ram, 400 iterations, array_ type, array_ 400: 0.095ms
3.0 cpu, 128 ram, 400 iterations, map___ type, map___ 400: 0.118ms
4.0 cpu, 128 ram, 400 iterations, object type, object 400: 0.096ms
4.0 cpu, 128 ram, 400 iterations, array_ type, array_ 400: 0.09ms
4.0 cpu, 128 ram, 400 iterations, map___ type, map___ 400: 0.109ms
0.5 cpu, 256 ram, 400 iterations, object type, object 400: 0.098ms
0.5 cpu, 256 ram, 400 iterations, array_ type, array_ 400: 0.101ms
0.5 cpu, 256 ram, 400 iterations, map___ type, map___ 400: 0.116ms
1.0 cpu, 256 ram, 400 iterations, object type, object 400: 0.094ms
1.0 cpu, 256 ram, 400 iterations, array_ type, array_ 400: 0.093ms
1.0 cpu, 256 ram, 400 iterations, map___ type, map___ 400: 0.112ms
2.0 cpu, 256 ram, 400 iterations, object type, object 400: 0.098ms
2.0 cpu, 256 ram, 400 iterations, array_ type, array_ 400: 0.094ms
2.0 cpu, 256 ram, 400 iterations, map___ type, map___ 400: 0.126ms
3.0 cpu, 256 ram, 400 iterations, object type, object 400: 0.097ms
3.0 cpu, 256 ram, 400 iterations, array_ type, array_ 400: 0.105ms
3.0 cpu, 256 ram, 400 iterations, map___ type, map___ 400: 0.101ms
4.0 cpu, 256 ram, 400 iterations, object type, object 400: 0.108ms
4.0 cpu, 256 ram, 400 iterations, array_ type, array_ 400: 0.094ms
4.0 cpu, 256 ram, 400 iterations, map___ type, map___ 400: 0.109ms
0.5 cpu, 512 ram, 400 iterations, object type, object 400: 0.095ms
0.5 cpu, 512 ram, 400 iterations, array_ type, array_ 400: 0.099ms
0.5 cpu, 512 ram, 400 iterations, map___ type, map___ 400: 0.105ms
1.0 cpu, 512 ram, 400 iterations, object type, object 400: 0.093ms
1.0 cpu, 512 ram, 400 iterations, array_ type, array_ 400: 0.095ms
1.0 cpu, 512 ram, 400 iterations, map___ type, map___ 400: 0.117ms
2.0 cpu, 512 ram, 400 iterations, object type, object 400: 0.101ms
2.0 cpu, 512 ram, 400 iterations, array_ type, array_ 400: 0.09ms
2.0 cpu, 512 ram, 400 iterations, map___ type, map___ 400: 0.114ms
3.0 cpu, 512 ram, 400 iterations, object type, object 400: 0.102ms
3.0 cpu, 512 ram, 400 iterations, array_ type, array_ 400: 0.099ms
3.0 cpu, 512 ram, 400 iterations, map___ type, map___ 400: 0.122ms
4.0 cpu, 512 ram, 400 iterations, object type, object 400: 0.098ms
4.0 cpu, 512 ram, 400 iterations, array_ type, array_ 400: 0.098ms
4.0 cpu, 512 ram, 400 iterations, map___ type, map___ 400: 0.119ms
0.5 cpu, 1024 ram, 400 iterations, object type, object 400: 0.097ms
0.5 cpu, 1024 ram, 400 iterations, array_ type, array_ 400: 0.101ms
0.5 cpu, 1024 ram, 400 iterations, map___ type, map___ 400: 0.133ms
1.0 cpu, 1024 ram, 400 iterations, object type, object 400: 0.102ms
1.0 cpu, 1024 ram, 400 iterations, array_ type, array_ 400: 0.092ms
1.0 cpu, 1024 ram, 400 iterations, map___ type, map___ 400: 0.099ms
2.0 cpu, 1024 ram, 400 iterations, object type, object 400: 0.103ms
2.0 cpu, 1024 ram, 400 iterations, array_ type, array_ 400: 0.088ms
2.0 cpu, 1024 ram, 400 iterations, map___ type, map___ 400: 0.104ms
3.0 cpu, 1024 ram, 400 iterations, object type, object 400: 0.089ms
3.0 cpu, 1024 ram, 400 iterations, array_ type, array_ 400: 0.117ms
3.0 cpu, 1024 ram, 400 iterations, map___ type, map___ 400: 0.124ms
4.0 cpu, 1024 ram, 400 iterations, object type, object 400: 0.102ms
4.0 cpu, 1024 ram, 400 iterations, array_ type, array_ 400: 0.1ms
4.0 cpu, 1024 ram, 400 iterations, map___ type, map___ 400: 0.111ms
0.5 cpu, 2048 ram, 400 iterations, object type, object 400: 0.095ms
0.5 cpu, 2048 ram, 400 iterations, array_ type, array_ 400: 0.101ms
0.5 cpu, 2048 ram, 400 iterations, map___ type, map___ 400: 0.098ms
1.0 cpu, 2048 ram, 400 iterations, object type, object 400: 0.099ms
1.0 cpu, 2048 ram, 400 iterations, array_ type, array_ 400: 0.11ms
1.0 cpu, 2048 ram, 400 iterations, map___ type, map___ 400: 0.169ms
2.0 cpu, 2048 ram, 400 iterations, object type, object 400: 0.097ms
2.0 cpu, 2048 ram, 400 iterations, array_ type, array_ 400: 0.096ms
2.0 cpu, 2048 ram, 400 iterations, map___ type, map___ 400: 0.101ms
3.0 cpu, 2048 ram, 400 iterations, object type, object 400: 0.089ms
3.0 cpu, 2048 ram, 400 iterations, array_ type, array_ 400: 0.09ms
3.0 cpu, 2048 ram, 400 iterations, map___ type, map___ 400: 0.106ms
4.0 cpu, 2048 ram, 400 iterations, object type, object 400: 0.097ms
4.0 cpu, 2048 ram, 400 iterations, array_ type, array_ 400: 0.098ms
4.0 cpu, 2048 ram, 400 iterations, map___ type, map___ 400: 0.105ms
0.5 cpu, 4096 ram, 400 iterations, object type, object 400: 0.1ms
0.5 cpu, 4096 ram, 400 iterations, array_ type, array_ 400: 0.098ms
0.5 cpu, 4096 ram, 400 iterations, map___ type, map___ 400: 0.099ms
1.0 cpu, 4096 ram, 400 iterations, object type, object 400: 0.102ms
1.0 cpu, 4096 ram, 400 iterations, array_ type, array_ 400: 0.098ms
1.0 cpu, 4096 ram, 400 iterations, map___ type, map___ 400: 0.119ms
2.0 cpu, 4096 ram, 400 iterations, object type, object 400: 0.096ms
2.0 cpu, 4096 ram, 400 iterations, array_ type, array_ 400: 0.089ms
2.0 cpu, 4096 ram, 400 iterations, map___ type, map___ 400: 0.102ms
3.0 cpu, 4096 ram, 400 iterations, object type, object 400: 0.1ms
3.0 cpu, 4096 ram, 400 iterations, array_ type, array_ 400: 0.101ms
3.0 cpu, 4096 ram, 400 iterations, map___ type, map___ 400: 0.099ms
4.0 cpu, 4096 ram, 400 iterations, object type, object 400: 0.094ms
4.0 cpu, 4096 ram, 400 iterations, array_ type, array_ 400: 0.092ms
4.0 cpu, 4096 ram, 400 iterations, map___ type, map___ 400: 0.109ms
0.5 cpu, 8192 ram, 400 iterations, object type, object 400: 0.097ms
0.5 cpu, 8192 ram, 400 iterations, array_ type, array_ 400: 0.09ms
0.5 cpu, 8192 ram, 400 iterations, map___ type, map___ 400: 0.111ms
1.0 cpu, 8192 ram, 400 iterations, object type, object 400: 0.094ms
1.0 cpu, 8192 ram, 400 iterations, array_ type, array_ 400: 0.097ms
1.0 cpu, 8192 ram, 400 iterations, map___ type, map___ 400: 0.106ms
2.0 cpu, 8192 ram, 400 iterations, object type, object 400: 0.098ms
2.0 cpu, 8192 ram, 400 iterations, array_ type, array_ 400: 0.095ms
2.0 cpu, 8192 ram, 400 iterations, map___ type, map___ 400: 0.112ms
3.0 cpu, 8192 ram, 400 iterations, object type, object 400: 0.104ms
3.0 cpu, 8192 ram, 400 iterations, array_ type, array_ 400: 0.093ms
3.0 cpu, 8192 ram, 400 iterations, map___ type, map___ 400: 0.111ms
4.0 cpu, 8192 ram, 400 iterations, object type, object 400: 0.218ms
4.0 cpu, 8192 ram, 400 iterations, array_ type, array_ 400: 0.09ms
4.0 cpu, 8192 ram, 400 iterations, map___ type, map___ 400: 0.117ms
0.5 cpu, 16384 ram, 400 iterations, object type, object 400: 0.088ms
0.5 cpu, 16384 ram, 400 iterations, array_ type, array_ 400: 0.085ms
0.5 cpu, 16384 ram, 400 iterations, map___ type, map___ 400: 0.101ms
1.0 cpu, 16384 ram, 400 iterations, object type, object 400: 0.105ms
1.0 cpu, 16384 ram, 400 iterations, array_ type, array_ 400: 0.093ms
1.0 cpu, 16384 ram, 400 iterations, map___ type, map___ 400: 0.111ms
2.0 cpu, 16384 ram, 400 iterations, object type, object 400: 0.094ms
2.0 cpu, 16384 ram, 400 iterations, array_ type, array_ 400: 0.111ms
2.0 cpu, 16384 ram, 400 iterations, map___ type, map___ 400: 0.115ms
3.0 cpu, 16384 ram, 400 iterations, object type, object 400: 0.091ms
3.0 cpu, 16384 ram, 400 iterations, array_ type, array_ 400: 0.095ms
3.0 cpu, 16384 ram, 400 iterations, map___ type, map___ 400: 0.109ms
4.0 cpu, 16384 ram, 400 iterations, object type, object 400: 0.088ms
4.0 cpu, 16384 ram, 400 iterations, array_ type, array_ 400: 0.149ms
4.0 cpu, 16384 ram, 400 iterations, map___ type, map___ 400: 0.125ms
0.5 cpu, 128 ram, 500 iterations, object type, object 500: 0.104ms
0.5 cpu, 128 ram, 500 iterations, array_ type, array_ 500: 0.094ms
0.5 cpu, 128 ram, 500 iterations, map___ type, map___ 500: 0.114ms
1.0 cpu, 128 ram, 500 iterations, object type, object 500: 0.1ms
1.0 cpu, 128 ram, 500 iterations, array_ type, array_ 500: 0.091ms
1.0 cpu, 128 ram, 500 iterations, map___ type, map___ 500: 0.121ms
2.0 cpu, 128 ram, 500 iterations, object type, object 500: 0.099ms
2.0 cpu, 128 ram, 500 iterations, array_ type, array_ 500: 0.106ms
2.0 cpu, 128 ram, 500 iterations, map___ type, map___ 500: 0.113ms
3.0 cpu, 128 ram, 500 iterations, object type, object 500: 0.108ms
3.0 cpu, 128 ram, 500 iterations, array_ type, array_ 500: 0.1ms
3.0 cpu, 128 ram, 500 iterations, map___ type, map___ 500: 0.132ms
4.0 cpu, 128 ram, 500 iterations, object type, object 500: 0.107ms
4.0 cpu, 128 ram, 500 iterations, array_ type, array_ 500: 0.109ms
4.0 cpu, 128 ram, 500 iterations, map___ type, map___ 500: 0.107ms
0.5 cpu, 256 ram, 500 iterations, object type, object 500: 0.103ms
0.5 cpu, 256 ram, 500 iterations, array_ type, array_ 500: 0.102ms
0.5 cpu, 256 ram, 500 iterations, map___ type, map___ 500: 0.105ms
1.0 cpu, 256 ram, 500 iterations, object type, object 500: 0.096ms
1.0 cpu, 256 ram, 500 iterations, array_ type, array_ 500: 0.111ms
1.0 cpu, 256 ram, 500 iterations, map___ type, map___ 500: 0.114ms
2.0 cpu, 256 ram, 500 iterations, object type, object 500: 0.096ms
2.0 cpu, 256 ram, 500 iterations, array_ type, array_ 500: 0.101ms
2.0 cpu, 256 ram, 500 iterations, map___ type, map___ 500: 0.126ms
3.0 cpu, 256 ram, 500 iterations, object type, object 500: 0.107ms
3.0 cpu, 256 ram, 500 iterations, array_ type, array_ 500: 0.106ms
3.0 cpu, 256 ram, 500 iterations, map___ type, map___ 500: 0.118ms
4.0 cpu, 256 ram, 500 iterations, object type, object 500: 0.113ms
4.0 cpu, 256 ram, 500 iterations, array_ type, array_ 500: 0.103ms
4.0 cpu, 256 ram, 500 iterations, map___ type, map___ 500: 0.114ms
0.5 cpu, 512 ram, 500 iterations, object type, object 500: 0.103ms
0.5 cpu, 512 ram, 500 iterations, array_ type, array_ 500: 0.102ms
0.5 cpu, 512 ram, 500 iterations, map___ type, map___ 500: 0.124ms
1.0 cpu, 512 ram, 500 iterations, object type, object 500: 0.097ms
1.0 cpu, 512 ram, 500 iterations, array_ type, array_ 500: 0.103ms
1.0 cpu, 512 ram, 500 iterations, map___ type, map___ 500: 0.11ms
2.0 cpu, 512 ram, 500 iterations, object type, object 500: 0.102ms
2.0 cpu, 512 ram, 500 iterations, array_ type, array_ 500: 0.092ms
2.0 cpu, 512 ram, 500 iterations, map___ type, map___ 500: 0.109ms
3.0 cpu, 512 ram, 500 iterations, object type, object 500: 0.111ms
3.0 cpu, 512 ram, 500 iterations, array_ type, array_ 500: 0.102ms
3.0 cpu, 512 ram, 500 iterations, map___ type, map___ 500: 0.105ms
4.0 cpu, 512 ram, 500 iterations, object type, object 500: 0.095ms
4.0 cpu, 512 ram, 500 iterations, array_ type, array_ 500: 0.1ms
4.0 cpu, 512 ram, 500 iterations, map___ type, map___ 500: 0.125ms
0.5 cpu, 1024 ram, 500 iterations, object type, object 500: 0.097ms
0.5 cpu, 1024 ram, 500 iterations, array_ type, array_ 500: 0.099ms
0.5 cpu, 1024 ram, 500 iterations, map___ type, map___ 500: 0.12ms
1.0 cpu, 1024 ram, 500 iterations, object type, object 500: 0.112ms
1.0 cpu, 1024 ram, 500 iterations, array_ type, array_ 500: 0.103ms
1.0 cpu, 1024 ram, 500 iterations, map___ type, map___ 500: 0.113ms
2.0 cpu, 1024 ram, 500 iterations, object type, object 500: 0.098ms
2.0 cpu, 1024 ram, 500 iterations, array_ type, array_ 500: 0.096ms
2.0 cpu, 1024 ram, 500 iterations, map___ type, map___ 500: 0.123ms
3.0 cpu, 1024 ram, 500 iterations, object type, object 500: 0.098ms
3.0 cpu, 1024 ram, 500 iterations, array_ type, array_ 500: 0.092ms
3.0 cpu, 1024 ram, 500 iterations, map___ type, map___ 500: 0.112ms
4.0 cpu, 1024 ram, 500 iterations, object type, object 500: 0.106ms
4.0 cpu, 1024 ram, 500 iterations, array_ type, array_ 500: 0.101ms
4.0 cpu, 1024 ram, 500 iterations, map___ type, map___ 500: 0.128ms
0.5 cpu, 2048 ram, 500 iterations, object type, object 500: 0.104ms
0.5 cpu, 2048 ram, 500 iterations, array_ type, array_ 500: 0.102ms
0.5 cpu, 2048 ram, 500 iterations, map___ type, map___ 500: 0.112ms
1.0 cpu, 2048 ram, 500 iterations, object type, object 500: 0.1ms
1.0 cpu, 2048 ram, 500 iterations, array_ type, array_ 500: 0.09ms
1.0 cpu, 2048 ram, 500 iterations, map___ type, map___ 500: 0.134ms
2.0 cpu, 2048 ram, 500 iterations, object type, object 500: 0.102ms
2.0 cpu, 2048 ram, 500 iterations, array_ type, array_ 500: 0.108ms
2.0 cpu, 2048 ram, 500 iterations, map___ type, map___ 500: 0.115ms
3.0 cpu, 2048 ram, 500 iterations, object type, object 500: 0.092ms
3.0 cpu, 2048 ram, 500 iterations, array_ type, array_ 500: 0.102ms
3.0 cpu, 2048 ram, 500 iterations, map___ type, map___ 500: 0.119ms
4.0 cpu, 2048 ram, 500 iterations, object type, object 500: 0.108ms
4.0 cpu, 2048 ram, 500 iterations, array_ type, array_ 500: 0.108ms
4.0 cpu, 2048 ram, 500 iterations, map___ type, map___ 500: 0.106ms
0.5 cpu, 4096 ram, 500 iterations, object type, object 500: 0.104ms
0.5 cpu, 4096 ram, 500 iterations, array_ type, array_ 500: 0.096ms
0.5 cpu, 4096 ram, 500 iterations, map___ type, map___ 500: 0.137ms
1.0 cpu, 4096 ram, 500 iterations, object type, object 500: 0.102ms
1.0 cpu, 4096 ram, 500 iterations, array_ type, array_ 500: 0.101ms
1.0 cpu, 4096 ram, 500 iterations, map___ type, map___ 500: 0.116ms
2.0 cpu, 4096 ram, 500 iterations, object type, object 500: 0.099ms
2.0 cpu, 4096 ram, 500 iterations, array_ type, array_ 500: 0.097ms
2.0 cpu, 4096 ram, 500 iterations, map___ type, map___ 500: 0.133ms
3.0 cpu, 4096 ram, 500 iterations, object type, object 500: 0.107ms
3.0 cpu, 4096 ram, 500 iterations, array_ type, array_ 500: 0.103ms
3.0 cpu, 4096 ram, 500 iterations, map___ type, map___ 500: 0.111ms
4.0 cpu, 4096 ram, 500 iterations, object type, object 500: 0.111ms
4.0 cpu, 4096 ram, 500 iterations, array_ type, array_ 500: 0.104ms
4.0 cpu, 4096 ram, 500 iterations, map___ type, map___ 500: 0.122ms
0.5 cpu, 8192 ram, 500 iterations, object type, object 500: 0.102ms
0.5 cpu, 8192 ram, 500 iterations, array_ type, array_ 500: 0.092ms
0.5 cpu, 8192 ram, 500 iterations, map___ type, map___ 500: 0.111ms
1.0 cpu, 8192 ram, 500 iterations, object type, object 500: 0.11ms
1.0 cpu, 8192 ram, 500 iterations, array_ type, array_ 500: 0.105ms
1.0 cpu, 8192 ram, 500 iterations, map___ type, map___ 500: 0.116ms
2.0 cpu, 8192 ram, 500 iterations, object type, object 500: 0.122ms
2.0 cpu, 8192 ram, 500 iterations, array_ type, array_ 500: 0.115ms
2.0 cpu, 8192 ram, 500 iterations, map___ type, map___ 500: 0.115ms
3.0 cpu, 8192 ram, 500 iterations, object type, object 500: 0.099ms
3.0 cpu, 8192 ram, 500 iterations, array_ type, array_ 500: 0.108ms
3.0 cpu, 8192 ram, 500 iterations, map___ type, map___ 500: 0.143ms
4.0 cpu, 8192 ram, 500 iterations, object type, object 500: 0.097ms
4.0 cpu, 8192 ram, 500 iterations, array_ type, array_ 500: 0.097ms
4.0 cpu, 8192 ram, 500 iterations, map___ type, map___ 500: 0.105ms
0.5 cpu, 16384 ram, 500 iterations, object type, object 500: 0.095ms
0.5 cpu, 16384 ram, 500 iterations, array_ type, array_ 500: 0.09ms
0.5 cpu, 16384 ram, 500 iterations, map___ type, map___ 500: 0.115ms
1.0 cpu, 16384 ram, 500 iterations, object type, object 500: 0.1ms
1.0 cpu, 16384 ram, 500 iterations, array_ type, array_ 500: 0.099ms
1.0 cpu, 16384 ram, 500 iterations, map___ type, map___ 500: 0.11ms
2.0 cpu, 16384 ram, 500 iterations, object type, object 500: 0.103ms
2.0 cpu, 16384 ram, 500 iterations, array_ type, array_ 500: 0.11ms
2.0 cpu, 16384 ram, 500 iterations, map___ type, map___ 500: 0.114ms
3.0 cpu, 16384 ram, 500 iterations, object type, object 500: 0.109ms
3.0 cpu, 16384 ram, 500 iterations, array_ type, array_ 500: 0.119ms
3.0 cpu, 16384 ram, 500 iterations, map___ type, map___ 500: 0.119ms
4.0 cpu, 16384 ram, 500 iterations, object type, object 500: 0.121ms
4.0 cpu, 16384 ram, 500 iterations, array_ type, array_ 500: 0.11ms
4.0 cpu, 16384 ram, 500 iterations, map___ type, map___ 500: 0.106ms
0.5 cpu, 128 ram, 600 iterations, object type, object 600: 0.106ms
0.5 cpu, 128 ram, 600 iterations, array_ type, array_ 600: 0.106ms
0.5 cpu, 128 ram, 600 iterations, map___ type, map___ 600: 0.121ms
1.0 cpu, 128 ram, 600 iterations, object type, object 600: 0.112ms
1.0 cpu, 128 ram, 600 iterations, array_ type, array_ 600: 0.103ms
1.0 cpu, 128 ram, 600 iterations, map___ type, map___ 600: 0.142ms
2.0 cpu, 128 ram, 600 iterations, object type, object 600: 0.11ms
2.0 cpu, 128 ram, 600 iterations, array_ type, array_ 600: 0.098ms
2.0 cpu, 128 ram, 600 iterations, map___ type, map___ 600: 0.132ms
3.0 cpu, 128 ram, 600 iterations, object type, object 600: 0.119ms
3.0 cpu, 128 ram, 600 iterations, array_ type, array_ 600: 0.12ms
3.0 cpu, 128 ram, 600 iterations, map___ type, map___ 600: 0.129ms
4.0 cpu, 128 ram, 600 iterations, object type, object 600: 0.1ms
4.0 cpu, 128 ram, 600 iterations, array_ type, array_ 600: 0.105ms
4.0 cpu, 128 ram, 600 iterations, map___ type, map___ 600: 0.133ms
0.5 cpu, 256 ram, 600 iterations, object type, object 600: 0.122ms
0.5 cpu, 256 ram, 600 iterations, array_ type, array_ 600: 0.107ms
0.5 cpu, 256 ram, 600 iterations, map___ type, map___ 600: 0.127ms
1.0 cpu, 256 ram, 600 iterations, object type, object 600: 0.123ms
1.0 cpu, 256 ram, 600 iterations, array_ type, array_ 600: 0.186ms
1.0 cpu, 256 ram, 600 iterations, map___ type, map___ 600: 0.135ms
2.0 cpu, 256 ram, 600 iterations, object type, object 600: 0.104ms
2.0 cpu, 256 ram, 600 iterations, array_ type, array_ 600: 0.129ms
2.0 cpu, 256 ram, 600 iterations, map___ type, map___ 600: 0.138ms
3.0 cpu, 256 ram, 600 iterations, object type, object 600: 0.118ms
3.0 cpu, 256 ram, 600 iterations, array_ type, array_ 600: 0.129ms
3.0 cpu, 256 ram, 600 iterations, map___ type, map___ 600: 0.132ms
4.0 cpu, 256 ram, 600 iterations, object type, object 600: 0.115ms
4.0 cpu, 256 ram, 600 iterations, array_ type, array_ 600: 0.104ms
4.0 cpu, 256 ram, 600 iterations, map___ type, map___ 600: 0.147ms
0.5 cpu, 512 ram, 600 iterations, object type, object 600: 0.119ms
0.5 cpu, 512 ram, 600 iterations, array_ type, array_ 600: 0.103ms
0.5 cpu, 512 ram, 600 iterations, map___ type, map___ 600: 0.128ms
1.0 cpu, 512 ram, 600 iterations, object type, object 600: 0.123ms
1.0 cpu, 512 ram, 600 iterations, array_ type, array_ 600: 0.113ms
1.0 cpu, 512 ram, 600 iterations, map___ type, map___ 600: 0.127ms
2.0 cpu, 512 ram, 600 iterations, object type, object 600: 0.109ms
2.0 cpu, 512 ram, 600 iterations, array_ type, array_ 600: 0.099ms
2.0 cpu, 512 ram, 600 iterations, map___ type, map___ 600: 0.146ms
3.0 cpu, 512 ram, 600 iterations, object type, object 600: 0.113ms
3.0 cpu, 512 ram, 600 iterations, array_ type, array_ 600: 0.14ms
3.0 cpu, 512 ram, 600 iterations, map___ type, map___ 600: 0.129ms
4.0 cpu, 512 ram, 600 iterations, object type, object 600: 0.113ms
4.0 cpu, 512 ram, 600 iterations, array_ type, array_ 600: 0.106ms
4.0 cpu, 512 ram, 600 iterations, map___ type, map___ 600: 0.132ms
0.5 cpu, 1024 ram, 600 iterations, object type, object 600: 0.111ms
0.5 cpu, 1024 ram, 600 iterations, array_ type, array_ 600: 0.112ms
0.5 cpu, 1024 ram, 600 iterations, map___ type, map___ 600: 0.122ms
1.0 cpu, 1024 ram, 600 iterations, object type, object 600: 0.113ms
1.0 cpu, 1024 ram, 600 iterations, array_ type, array_ 600: 0.112ms
1.0 cpu, 1024 ram, 600 iterations, map___ type, map___ 600: 0.126ms
2.0 cpu, 1024 ram, 600 iterations, object type, object 600: 0.108ms
2.0 cpu, 1024 ram, 600 iterations, array_ type, array_ 600: 0.113ms
2.0 cpu, 1024 ram, 600 iterations, map___ type, map___ 600: 0.127ms
3.0 cpu, 1024 ram, 600 iterations, object type, object 600: 0.11ms
3.0 cpu, 1024 ram, 600 iterations, array_ type, array_ 600: 0.102ms
3.0 cpu, 1024 ram, 600 iterations, map___ type, map___ 600: 0.129ms
4.0 cpu, 1024 ram, 600 iterations, object type, object 600: 0.101ms
4.0 cpu, 1024 ram, 600 iterations, array_ type, array_ 600: 0.108ms
4.0 cpu, 1024 ram, 600 iterations, map___ type, map___ 600: 0.137ms
0.5 cpu, 2048 ram, 600 iterations, object type, object 600: 0.098ms
0.5 cpu, 2048 ram, 600 iterations, array_ type, array_ 600: 0.118ms
0.5 cpu, 2048 ram, 600 iterations, map___ type, map___ 600: 0.148ms
1.0 cpu, 2048 ram, 600 iterations, object type, object 600: 0.126ms
1.0 cpu, 2048 ram, 600 iterations, array_ type, array_ 600: 0.103ms
1.0 cpu, 2048 ram, 600 iterations, map___ type, map___ 600: 0.152ms
2.0 cpu, 2048 ram, 600 iterations, object type, object 600: 0.11ms
2.0 cpu, 2048 ram, 600 iterations, array_ type, array_ 600: 0.098ms
2.0 cpu, 2048 ram, 600 iterations, map___ type, map___ 600: 0.123ms
3.0 cpu, 2048 ram, 600 iterations, object type, object 600: 0.113ms
3.0 cpu, 2048 ram, 600 iterations, array_ type, array_ 600: 0.104ms
3.0 cpu, 2048 ram, 600 iterations, map___ type, map___ 600: 0.131ms
4.0 cpu, 2048 ram, 600 iterations, object type, object 600: 0.11ms
4.0 cpu, 2048 ram, 600 iterations, array_ type, array_ 600: 0.108ms
4.0 cpu, 2048 ram, 600 iterations, map___ type, map___ 600: 0.131ms
0.5 cpu, 4096 ram, 600 iterations, object type, object 600: 0.112ms
0.5 cpu, 4096 ram, 600 iterations, array_ type, array_ 600: 0.127ms
0.5 cpu, 4096 ram, 600 iterations, map___ type, map___ 600: 0.138ms
1.0 cpu, 4096 ram, 600 iterations, object type, object 600: 0.1ms
1.0 cpu, 4096 ram, 600 iterations, array_ type, array_ 600: 0.105ms
1.0 cpu, 4096 ram, 600 iterations, map___ type, map___ 600: 0.143ms
2.0 cpu, 4096 ram, 600 iterations, object type, object 600: 0.106ms
2.0 cpu, 4096 ram, 600 iterations, array_ type, array_ 600: 0.106ms
2.0 cpu, 4096 ram, 600 iterations, map___ type, map___ 600: 0.136ms
3.0 cpu, 4096 ram, 600 iterations, object type, object 600: 0.111ms
3.0 cpu, 4096 ram, 600 iterations, array_ type, array_ 600: 0.105ms
3.0 cpu, 4096 ram, 600 iterations, map___ type, map___ 600: 0.13ms
4.0 cpu, 4096 ram, 600 iterations, object type, object 600: 0.114ms
4.0 cpu, 4096 ram, 600 iterations, array_ type, array_ 600: 0.103ms
4.0 cpu, 4096 ram, 600 iterations, map___ type, map___ 600: 0.125ms
0.5 cpu, 8192 ram, 600 iterations, object type, object 600: 0.109ms
0.5 cpu, 8192 ram, 600 iterations, array_ type, array_ 600: 0.107ms
0.5 cpu, 8192 ram, 600 iterations, map___ type, map___ 600: 0.13ms
1.0 cpu, 8192 ram, 600 iterations, object type, object 600: 0.115ms
1.0 cpu, 8192 ram, 600 iterations, array_ type, array_ 600: 0.118ms
1.0 cpu, 8192 ram, 600 iterations, map___ type, map___ 600: 0.132ms
2.0 cpu, 8192 ram, 600 iterations, object type, object 600: 0.112ms
2.0 cpu, 8192 ram, 600 iterations, array_ type, array_ 600: 0.112ms
2.0 cpu, 8192 ram, 600 iterations, map___ type, map___ 600: 0.13ms
3.0 cpu, 8192 ram, 600 iterations, object type, object 600: 0.104ms
3.0 cpu, 8192 ram, 600 iterations, array_ type, array_ 600: 0.109ms
3.0 cpu, 8192 ram, 600 iterations, map___ type, map___ 600: 0.119ms
4.0 cpu, 8192 ram, 600 iterations, object type, object 600: 0.112ms
4.0 cpu, 8192 ram, 600 iterations, array_ type, array_ 600: 0.098ms
4.0 cpu, 8192 ram, 600 iterations, map___ type, map___ 600: 0.132ms
0.5 cpu, 16384 ram, 600 iterations, object type, object 600: 0.125ms
0.5 cpu, 16384 ram, 600 iterations, array_ type, array_ 600: 0.11ms
0.5 cpu, 16384 ram, 600 iterations, map___ type, map___ 600: 0.14ms
1.0 cpu, 16384 ram, 600 iterations, object type, object 600: 0.109ms
1.0 cpu, 16384 ram, 600 iterations, array_ type, array_ 600: 0.104ms
1.0 cpu, 16384 ram, 600 iterations, map___ type, map___ 600: 0.126ms
2.0 cpu, 16384 ram, 600 iterations, object type, object 600: 0.114ms
2.0 cpu, 16384 ram, 600 iterations, array_ type, array_ 600: 0.107ms
2.0 cpu, 16384 ram, 600 iterations, map___ type, map___ 600: 0.142ms
3.0 cpu, 16384 ram, 600 iterations, object type, object 600: 0.115ms
3.0 cpu, 16384 ram, 600 iterations, array_ type, array_ 600: 0.12ms
3.0 cpu, 16384 ram, 600 iterations, map___ type, map___ 600: 0.134ms
4.0 cpu, 16384 ram, 600 iterations, object type, object 600: 0.12ms
4.0 cpu, 16384 ram, 600 iterations, array_ type, array_ 600: 0.109ms
4.0 cpu, 16384 ram, 600 iterations, map___ type, map___ 600: 0.138ms
0.5 cpu, 128 ram, 700 iterations, object type, object 700: 0.125ms
0.5 cpu, 128 ram, 700 iterations, array_ type, array_ 700: 0.107ms
0.5 cpu, 128 ram, 700 iterations, map___ type, map___ 700: 0.147ms
1.0 cpu, 128 ram, 700 iterations, object type, object 700: 0.108ms
1.0 cpu, 128 ram, 700 iterations, array_ type, array_ 700: 0.109ms
1.0 cpu, 128 ram, 700 iterations, map___ type, map___ 700: 0.143ms
2.0 cpu, 128 ram, 700 iterations, object type, object 700: 0.109ms
2.0 cpu, 128 ram, 700 iterations, array_ type, array_ 700: 0.119ms
2.0 cpu, 128 ram, 700 iterations, map___ type, map___ 700: 0.137ms
3.0 cpu, 128 ram, 700 iterations, object type, object 700: 0.114ms
3.0 cpu, 128 ram, 700 iterations, array_ type, array_ 700: 0.11ms
3.0 cpu, 128 ram, 700 iterations, map___ type, map___ 700: 0.147ms
4.0 cpu, 128 ram, 700 iterations, object type, object 700: 0.115ms
4.0 cpu, 128 ram, 700 iterations, array_ type, array_ 700: 0.121ms
4.0 cpu, 128 ram, 700 iterations, map___ type, map___ 700: 0.133ms
0.5 cpu, 256 ram, 700 iterations, object type, object 700: 0.113ms
0.5 cpu, 256 ram, 700 iterations, array_ type, array_ 700: 0.11ms
0.5 cpu, 256 ram, 700 iterations, map___ type, map___ 700: 0.154ms
1.0 cpu, 256 ram, 700 iterations, object type, object 700: 0.118ms
1.0 cpu, 256 ram, 700 iterations, array_ type, array_ 700: 0.116ms
1.0 cpu, 256 ram, 700 iterations, map___ type, map___ 700: 0.164ms
2.0 cpu, 256 ram, 700 iterations, object type, object 700: 0.116ms
2.0 cpu, 256 ram, 700 iterations, array_ type, array_ 700: 0.108ms
2.0 cpu, 256 ram, 700 iterations, map___ type, map___ 700: 0.146ms
3.0 cpu, 256 ram, 700 iterations, object type, object 700: 0.131ms
3.0 cpu, 256 ram, 700 iterations, array_ type, array_ 700: 0.116ms
3.0 cpu, 256 ram, 700 iterations, map___ type, map___ 700: 0.14ms
4.0 cpu, 256 ram, 700 iterations, object type, object 700: 0.108ms
4.0 cpu, 256 ram, 700 iterations, array_ type, array_ 700: 0.113ms
4.0 cpu, 256 ram, 700 iterations, map___ type, map___ 700: 0.149ms
0.5 cpu, 512 ram, 700 iterations, object type, object 700: 0.109ms
0.5 cpu, 512 ram, 700 iterations, array_ type, array_ 700: 0.114ms
0.5 cpu, 512 ram, 700 iterations, map___ type, map___ 700: 0.149ms
1.0 cpu, 512 ram, 700 iterations, object type, object 700: 0.126ms
1.0 cpu, 512 ram, 700 iterations, array_ type, array_ 700: 0.121ms
1.0 cpu, 512 ram, 700 iterations, map___ type, map___ 700: 0.151ms
2.0 cpu, 512 ram, 700 iterations, object type, object 700: 0.159ms
2.0 cpu, 512 ram, 700 iterations, array_ type, array_ 700: 0.111ms
2.0 cpu, 512 ram, 700 iterations, map___ type, map___ 700: 0.133ms
3.0 cpu, 512 ram, 700 iterations, object type, object 700: 0.117ms
3.0 cpu, 512 ram, 700 iterations, array_ type, array_ 700: 0.112ms
3.0 cpu, 512 ram, 700 iterations, map___ type, map___ 700: 0.15ms
4.0 cpu, 512 ram, 700 iterations, object type, object 700: 0.108ms
4.0 cpu, 512 ram, 700 iterations, array_ type, array_ 700: 0.13ms
4.0 cpu, 512 ram, 700 iterations, map___ type, map___ 700: 0.137ms
0.5 cpu, 1024 ram, 700 iterations, object type, object 700: 0.121ms
0.5 cpu, 1024 ram, 700 iterations, array_ type, array_ 700: 0.107ms
0.5 cpu, 1024 ram, 700 iterations, map___ type, map___ 700: 0.141ms
1.0 cpu, 1024 ram, 700 iterations, object type, object 700: 0.12ms
1.0 cpu, 1024 ram, 700 iterations, array_ type, array_ 700: 0.102ms
1.0 cpu, 1024 ram, 700 iterations, map___ type, map___ 700: 0.134ms
2.0 cpu, 1024 ram, 700 iterations, object type, object 700: 0.101ms
2.0 cpu, 1024 ram, 700 iterations, array_ type, array_ 700: 0.11ms
2.0 cpu, 1024 ram, 700 iterations, map___ type, map___ 700: 0.138ms
3.0 cpu, 1024 ram, 700 iterations, object type, object 700: 0.129ms
3.0 cpu, 1024 ram, 700 iterations, array_ type, array_ 700: 0.113ms
3.0 cpu, 1024 ram, 700 iterations, map___ type, map___ 700: 0.137ms
4.0 cpu, 1024 ram, 700 iterations, object type, object 700: 0.11ms
4.0 cpu, 1024 ram, 700 iterations, array_ type, array_ 700: 0.123ms
4.0 cpu, 1024 ram, 700 iterations, map___ type, map___ 700: 0.147ms
0.5 cpu, 2048 ram, 700 iterations, object type, object 700: 0.111ms
0.5 cpu, 2048 ram, 700 iterations, array_ type, array_ 700: 0.112ms
0.5 cpu, 2048 ram, 700 iterations, map___ type, map___ 700: 0.14ms
1.0 cpu, 2048 ram, 700 iterations, object type, object 700: 0.118ms
1.0 cpu, 2048 ram, 700 iterations, array_ type, array_ 700: 0.109ms
1.0 cpu, 2048 ram, 700 iterations, map___ type, map___ 700: 0.141ms
2.0 cpu, 2048 ram, 700 iterations, object type, object 700: 0.11ms
2.0 cpu, 2048 ram, 700 iterations, array_ type, array_ 700: 0.108ms
2.0 cpu, 2048 ram, 700 iterations, map___ type, map___ 700: 0.139ms
3.0 cpu, 2048 ram, 700 iterations, object type, object 700: 0.115ms
3.0 cpu, 2048 ram, 700 iterations, array_ type, array_ 700: 0.124ms
3.0 cpu, 2048 ram, 700 iterations, map___ type, map___ 700: 0.185ms
4.0 cpu, 2048 ram, 700 iterations, object type, object 700: 0.112ms
4.0 cpu, 2048 ram, 700 iterations, array_ type, array_ 700: 0.112ms
4.0 cpu, 2048 ram, 700 iterations, map___ type, map___ 700: 0.143ms
0.5 cpu, 4096 ram, 700 iterations, object type, object 700: 0.109ms
0.5 cpu, 4096 ram, 700 iterations, array_ type, array_ 700: 0.101ms
0.5 cpu, 4096 ram, 700 iterations, map___ type, map___ 700: 0.158ms
1.0 cpu, 4096 ram, 700 iterations, object type, object 700: 0.117ms
1.0 cpu, 4096 ram, 700 iterations, array_ type, array_ 700: 0.116ms
1.0 cpu, 4096 ram, 700 iterations, map___ type, map___ 700: 0.143ms
2.0 cpu, 4096 ram, 700 iterations, object type, object 700: 0.121ms
2.0 cpu, 4096 ram, 700 iterations, array_ type, array_ 700: 0.115ms
2.0 cpu, 4096 ram, 700 iterations, map___ type, map___ 700: 0.142ms
3.0 cpu, 4096 ram, 700 iterations, object type, object 700: 0.112ms
3.0 cpu, 4096 ram, 700 iterations, array_ type, array_ 700: 0.108ms
3.0 cpu, 4096 ram, 700 iterations, map___ type, map___ 700: 0.13ms
4.0 cpu, 4096 ram, 700 iterations, object type, object 700: 0.113ms
4.0 cpu, 4096 ram, 700 iterations, array_ type, array_ 700: 0.108ms
4.0 cpu, 4096 ram, 700 iterations, map___ type, map___ 700: 0.13ms
0.5 cpu, 8192 ram, 700 iterations, object type, object 700: 0.122ms
0.5 cpu, 8192 ram, 700 iterations, array_ type, array_ 700: 0.101ms
0.5 cpu, 8192 ram, 700 iterations, map___ type, map___ 700: 0.149ms
1.0 cpu, 8192 ram, 700 iterations, object type, object 700: 0.109ms
1.0 cpu, 8192 ram, 700 iterations, array_ type, array_ 700: 0.109ms
1.0 cpu, 8192 ram, 700 iterations, map___ type, map___ 700: 0.147ms
2.0 cpu, 8192 ram, 700 iterations, object type, object 700: 0.114ms
2.0 cpu, 8192 ram, 700 iterations, array_ type, array_ 700: 0.106ms
2.0 cpu, 8192 ram, 700 iterations, map___ type, map___ 700: 0.209ms
3.0 cpu, 8192 ram, 700 iterations, object type, object 700: 0.136ms
3.0 cpu, 8192 ram, 700 iterations, array_ type, array_ 700: 0.125ms
3.0 cpu, 8192 ram, 700 iterations, map___ type, map___ 700: 0.143ms
4.0 cpu, 8192 ram, 700 iterations, object type, object 700: 0.112ms
4.0 cpu, 8192 ram, 700 iterations, array_ type, array_ 700: 0.129ms
4.0 cpu, 8192 ram, 700 iterations, map___ type, map___ 700: 0.147ms
0.5 cpu, 16384 ram, 700 iterations, object type, object 700: 0.108ms
0.5 cpu, 16384 ram, 700 iterations, array_ type, array_ 700: 0.123ms
0.5 cpu, 16384 ram, 700 iterations, map___ type, map___ 700: 0.147ms
1.0 cpu, 16384 ram, 700 iterations, object type, object 700: 0.118ms
1.0 cpu, 16384 ram, 700 iterations, array_ type, array_ 700: 0.131ms
1.0 cpu, 16384 ram, 700 iterations, map___ type, map___ 700: 0.132ms
2.0 cpu, 16384 ram, 700 iterations, object type, object 700: 0.124ms
2.0 cpu, 16384 ram, 700 iterations, array_ type, array_ 700: 0.109ms
2.0 cpu, 16384 ram, 700 iterations, map___ type, map___ 700: 0.225ms
3.0 cpu, 16384 ram, 700 iterations, object type, object 700: 0.114ms
3.0 cpu, 16384 ram, 700 iterations, array_ type, array_ 700: 0.111ms
3.0 cpu, 16384 ram, 700 iterations, map___ type, map___ 700: 0.144ms
4.0 cpu, 16384 ram, 700 iterations, object type, object 700: 0.113ms
4.0 cpu, 16384 ram, 700 iterations, array_ type, array_ 700: 0.114ms
4.0 cpu, 16384 ram, 700 iterations, map___ type, map___ 700: 0.135ms
0.5 cpu, 128 ram, 800 iterations, object type, object 800: 0.128ms
0.5 cpu, 128 ram, 800 iterations, array_ type, array_ 800: 0.117ms
0.5 cpu, 128 ram, 800 iterations, map___ type, map___ 800: 0.137ms
1.0 cpu, 128 ram, 800 iterations, object type, object 800: 0.131ms
1.0 cpu, 128 ram, 800 iterations, array_ type, array_ 800: 0.132ms
1.0 cpu, 128 ram, 800 iterations, map___ type, map___ 800: 0.167ms
2.0 cpu, 128 ram, 800 iterations, object type, object 800: 0.117ms
2.0 cpu, 128 ram, 800 iterations, array_ type, array_ 800: 0.11ms
2.0 cpu, 128 ram, 800 iterations, map___ type, map___ 800: 0.164ms
3.0 cpu, 128 ram, 800 iterations, object type, object 800: 0.112ms
3.0 cpu, 128 ram, 800 iterations, array_ type, array_ 800: 0.126ms
3.0 cpu, 128 ram, 800 iterations, map___ type, map___ 800: 0.154ms
4.0 cpu, 128 ram, 800 iterations, object type, object 800: 0.113ms
4.0 cpu, 128 ram, 800 iterations, array_ type, array_ 800: 0.123ms
4.0 cpu, 128 ram, 800 iterations, map___ type, map___ 800: 0.153ms
0.5 cpu, 256 ram, 800 iterations, object type, object 800: 0.142ms
0.5 cpu, 256 ram, 800 iterations, array_ type, array_ 800: 0.119ms
0.5 cpu, 256 ram, 800 iterations, map___ type, map___ 800: 0.162ms
1.0 cpu, 256 ram, 800 iterations, object type, object 800: 0.109ms
1.0 cpu, 256 ram, 800 iterations, array_ type, array_ 800: 0.11ms
1.0 cpu, 256 ram, 800 iterations, map___ type, map___ 800: 0.143ms
2.0 cpu, 256 ram, 800 iterations, object type, object 800: 0.111ms
2.0 cpu, 256 ram, 800 iterations, array_ type, array_ 800: 0.106ms
2.0 cpu, 256 ram, 800 iterations, map___ type, map___ 800: 0.143ms
3.0 cpu, 256 ram, 800 iterations, object type, object 800: 0.14ms
3.0 cpu, 256 ram, 800 iterations, array_ type, array_ 800: 0.127ms
3.0 cpu, 256 ram, 800 iterations, map___ type, map___ 800: 0.161ms
4.0 cpu, 256 ram, 800 iterations, object type, object 800: 0.124ms
4.0 cpu, 256 ram, 800 iterations, array_ type, array_ 800: 0.136ms
4.0 cpu, 256 ram, 800 iterations, map___ type, map___ 800: 0.142ms
0.5 cpu, 512 ram, 800 iterations, object type, object 800: 0.121ms
0.5 cpu, 512 ram, 800 iterations, array_ type, array_ 800: 0.113ms
0.5 cpu, 512 ram, 800 iterations, map___ type, map___ 800: 0.148ms
1.0 cpu, 512 ram, 800 iterations, object type, object 800: 0.119ms
1.0 cpu, 512 ram, 800 iterations, array_ type, array_ 800: 0.117ms
1.0 cpu, 512 ram, 800 iterations, map___ type, map___ 800: 0.156ms
2.0 cpu, 512 ram, 800 iterations, object type, object 800: 0.126ms
2.0 cpu, 512 ram, 800 iterations, array_ type, array_ 800: 0.125ms
2.0 cpu, 512 ram, 800 iterations, map___ type, map___ 800: 0.157ms
3.0 cpu, 512 ram, 800 iterations, object type, object 800: 0.118ms
3.0 cpu, 512 ram, 800 iterations, array_ type, array_ 800: 0.116ms
3.0 cpu, 512 ram, 800 iterations, map___ type, map___ 800: 0.147ms
4.0 cpu, 512 ram, 800 iterations, object type, object 800: 0.116ms
4.0 cpu, 512 ram, 800 iterations, array_ type, array_ 800: 0.122ms
4.0 cpu, 512 ram, 800 iterations, map___ type, map___ 800: 0.144ms
0.5 cpu, 1024 ram, 800 iterations, object type, object 800: 0.109ms
0.5 cpu, 1024 ram, 800 iterations, array_ type, array_ 800: 0.119ms
0.5 cpu, 1024 ram, 800 iterations, map___ type, map___ 800: 0.144ms
1.0 cpu, 1024 ram, 800 iterations, object type, object 800: 0.122ms
1.0 cpu, 1024 ram, 800 iterations, array_ type, array_ 800: 0.123ms
1.0 cpu, 1024 ram, 800 iterations, map___ type, map___ 800: 0.14ms
2.0 cpu, 1024 ram, 800 iterations, object type, object 800: 0.108ms
2.0 cpu, 1024 ram, 800 iterations, array_ type, array_ 800: 0.131ms
2.0 cpu, 1024 ram, 800 iterations, map___ type, map___ 800: 0.155ms
3.0 cpu, 1024 ram, 800 iterations, object type, object 800: 0.125ms
3.0 cpu, 1024 ram, 800 iterations, array_ type, array_ 800: 0.113ms
3.0 cpu, 1024 ram, 800 iterations, map___ type, map___ 800: 0.134ms
4.0 cpu, 1024 ram, 800 iterations, object type, object 800: 0.115ms
4.0 cpu, 1024 ram, 800 iterations, array_ type, array_ 800: 0.114ms
4.0 cpu, 1024 ram, 800 iterations, map___ type, map___ 800: 0.145ms
0.5 cpu, 2048 ram, 800 iterations, object type, object 800: 0.132ms
0.5 cpu, 2048 ram, 800 iterations, array_ type, array_ 800: 0.119ms
0.5 cpu, 2048 ram, 800 iterations, map___ type, map___ 800: 0.155ms
1.0 cpu, 2048 ram, 800 iterations, object type, object 800: 0.118ms
1.0 cpu, 2048 ram, 800 iterations, array_ type, array_ 800: 0.117ms
1.0 cpu, 2048 ram, 800 iterations, map___ type, map___ 800: 0.14ms
2.0 cpu, 2048 ram, 800 iterations, object type, object 800: 0.126ms
2.0 cpu, 2048 ram, 800 iterations, array_ type, array_ 800: 0.123ms
2.0 cpu, 2048 ram, 800 iterations, map___ type, map___ 800: 0.147ms
3.0 cpu, 2048 ram, 800 iterations, object type, object 800: 0.114ms
3.0 cpu, 2048 ram, 800 iterations, array_ type, array_ 800: 0.115ms
3.0 cpu, 2048 ram, 800 iterations, map___ type, map___ 800: 0.136ms
4.0 cpu, 2048 ram, 800 iterations, object type, object 800: 0.274ms
4.0 cpu, 2048 ram, 800 iterations, array_ type, array_ 800: 0.117ms
4.0 cpu, 2048 ram, 800 iterations, map___ type, map___ 800: 0.162ms
0.5 cpu, 4096 ram, 800 iterations, object type, object 800: 0.118ms
0.5 cpu, 4096 ram, 800 iterations, array_ type, array_ 800: 0.136ms
0.5 cpu, 4096 ram, 800 iterations, map___ type, map___ 800: 0.142ms
1.0 cpu, 4096 ram, 800 iterations, object type, object 800: 0.14ms
1.0 cpu, 4096 ram, 800 iterations, array_ type, array_ 800: 0.107ms
1.0 cpu, 4096 ram, 800 iterations, map___ type, map___ 800: 0.147ms
2.0 cpu, 4096 ram, 800 iterations, object type, object 800: 0.117ms
2.0 cpu, 4096 ram, 800 iterations, array_ type, array_ 800: 0.119ms
2.0 cpu, 4096 ram, 800 iterations, map___ type, map___ 800: 0.158ms
3.0 cpu, 4096 ram, 800 iterations, object type, object 800: 0.12ms
3.0 cpu, 4096 ram, 800 iterations, array_ type, array_ 800: 0.13ms
3.0 cpu, 4096 ram, 800 iterations, map___ type, map___ 800: 0.142ms
4.0 cpu, 4096 ram, 800 iterations, object type, object 800: 0.14ms
4.0 cpu, 4096 ram, 800 iterations, array_ type, array_ 800: 0.12ms
4.0 cpu, 4096 ram, 800 iterations, map___ type, map___ 800: 0.134ms
0.5 cpu, 8192 ram, 800 iterations, object type, object 800: 0.114ms
0.5 cpu, 8192 ram, 800 iterations, array_ type, array_ 800: 0.124ms
0.5 cpu, 8192 ram, 800 iterations, map___ type, map___ 800: 0.152ms
1.0 cpu, 8192 ram, 800 iterations, object type, object 800: 0.132ms
1.0 cpu, 8192 ram, 800 iterations, array_ type, array_ 800: 0.131ms
1.0 cpu, 8192 ram, 800 iterations, map___ type, map___ 800: 0.145ms
2.0 cpu, 8192 ram, 800 iterations, object type, object 800: 0.115ms
2.0 cpu, 8192 ram, 800 iterations, array_ type, array_ 800: 0.125ms
2.0 cpu, 8192 ram, 800 iterations, map___ type, map___ 800: 0.149ms
3.0 cpu, 8192 ram, 800 iterations, object type, object 800: 0.111ms
3.0 cpu, 8192 ram, 800 iterations, array_ type, array_ 800: 0.12ms
3.0 cpu, 8192 ram, 800 iterations, map___ type, map___ 800: 0.171ms
4.0 cpu, 8192 ram, 800 iterations, object type, object 800: 0.139ms
4.0 cpu, 8192 ram, 800 iterations, array_ type, array_ 800: 0.133ms
4.0 cpu, 8192 ram, 800 iterations, map___ type, map___ 800: 0.225ms
0.5 cpu, 16384 ram, 800 iterations, object type, object 800: 0.117ms
0.5 cpu, 16384 ram, 800 iterations, array_ type, array_ 800: 0.125ms
0.5 cpu, 16384 ram, 800 iterations, map___ type, map___ 800: 0.135ms
1.0 cpu, 16384 ram, 800 iterations, object type, object 800: 0.125ms
1.0 cpu, 16384 ram, 800 iterations, array_ type, array_ 800: 0.115ms
1.0 cpu, 16384 ram, 800 iterations, map___ type, map___ 800: 0.144ms
2.0 cpu, 16384 ram, 800 iterations, object type, object 800: 0.128ms
2.0 cpu, 16384 ram, 800 iterations, array_ type, array_ 800: 0.115ms
2.0 cpu, 16384 ram, 800 iterations, map___ type, map___ 800: 0.159ms
3.0 cpu, 16384 ram, 800 iterations, object type, object 800: 0.118ms
3.0 cpu, 16384 ram, 800 iterations, array_ type, array_ 800: 0.123ms
3.0 cpu, 16384 ram, 800 iterations, map___ type, map___ 800: 0.142ms
4.0 cpu, 16384 ram, 800 iterations, object type, object 800: 0.115ms
4.0 cpu, 16384 ram, 800 iterations, array_ type, array_ 800: 0.12ms
4.0 cpu, 16384 ram, 800 iterations, map___ type, map___ 800: 0.14ms
0.5 cpu, 128 ram, 900 iterations, object type, object 900: 0.136ms
0.5 cpu, 128 ram, 900 iterations, array_ type, array_ 900: 0.127ms
0.5 cpu, 128 ram, 900 iterations, map___ type, map___ 900: 0.142ms
1.0 cpu, 128 ram, 900 iterations, object type, object 900: 0.122ms
1.0 cpu, 128 ram, 900 iterations, array_ type, array_ 900: 0.126ms
1.0 cpu, 128 ram, 900 iterations, map___ type, map___ 900: 0.149ms
2.0 cpu, 128 ram, 900 iterations, object type, object 900: 0.126ms
2.0 cpu, 128 ram, 900 iterations, array_ type, array_ 900: 0.139ms
2.0 cpu, 128 ram, 900 iterations, map___ type, map___ 900: 0.181ms
3.0 cpu, 128 ram, 900 iterations, object type, object 900: 0.138ms
3.0 cpu, 128 ram, 900 iterations, array_ type, array_ 900: 0.125ms
3.0 cpu, 128 ram, 900 iterations, map___ type, map___ 900: 0.142ms
4.0 cpu, 128 ram, 900 iterations, object type, object 900: 0.126ms
4.0 cpu, 128 ram, 900 iterations, array_ type, array_ 900: 0.137ms
4.0 cpu, 128 ram, 900 iterations, map___ type, map___ 900: 0.144ms
0.5 cpu, 256 ram, 900 iterations, object type, object 900: 0.144ms
0.5 cpu, 256 ram, 900 iterations, array_ type, array_ 900: 0.124ms
0.5 cpu, 256 ram, 900 iterations, map___ type, map___ 900: 0.151ms
1.0 cpu, 256 ram, 900 iterations, object type, object 900: 0.126ms
1.0 cpu, 256 ram, 900 iterations, array_ type, array_ 900: 0.133ms
1.0 cpu, 256 ram, 900 iterations, map___ type, map___ 900: 0.172ms
2.0 cpu, 256 ram, 900 iterations, object type, object 900: 0.124ms
2.0 cpu, 256 ram, 900 iterations, array_ type, array_ 900: 0.116ms
2.0 cpu, 256 ram, 900 iterations, map___ type, map___ 900: 0.152ms
3.0 cpu, 256 ram, 900 iterations, object type, object 900: 0.122ms
3.0 cpu, 256 ram, 900 iterations, array_ type, array_ 900: 0.142ms
3.0 cpu, 256 ram, 900 iterations, map___ type, map___ 900: 0.162ms
4.0 cpu, 256 ram, 900 iterations, object type, object 900: 0.141ms
4.0 cpu, 256 ram, 900 iterations, array_ type, array_ 900: 0.119ms
4.0 cpu, 256 ram, 900 iterations, map___ type, map___ 900: 0.148ms
0.5 cpu, 512 ram, 900 iterations, object type, object 900: 0.124ms
0.5 cpu, 512 ram, 900 iterations, array_ type, array_ 900: 0.131ms
0.5 cpu, 512 ram, 900 iterations, map___ type, map___ 900: 0.158ms
1.0 cpu, 512 ram, 900 iterations, object type, object 900: 0.131ms
1.0 cpu, 512 ram, 900 iterations, array_ type, array_ 900: 0.117ms
1.0 cpu, 512 ram, 900 iterations, map___ type, map___ 900: 0.156ms
2.0 cpu, 512 ram, 900 iterations, object type, object 900: 0.119ms
2.0 cpu, 512 ram, 900 iterations, array_ type, array_ 900: 0.128ms
2.0 cpu, 512 ram, 900 iterations, map___ type, map___ 900: 0.152ms
3.0 cpu, 512 ram, 900 iterations, object type, object 900: 0.12ms
3.0 cpu, 512 ram, 900 iterations, array_ type, array_ 900: 0.144ms
3.0 cpu, 512 ram, 900 iterations, map___ type, map___ 900: 0.167ms
4.0 cpu, 512 ram, 900 iterations, object type, object 900: 0.126ms
4.0 cpu, 512 ram, 900 iterations, array_ type, array_ 900: 0.129ms
4.0 cpu, 512 ram, 900 iterations, map___ type, map___ 900: 0.148ms
0.5 cpu, 1024 ram, 900 iterations, object type, object 900: 0.139ms
0.5 cpu, 1024 ram, 900 iterations, array_ type, array_ 900: 0.118ms
0.5 cpu, 1024 ram, 900 iterations, map___ type, map___ 900: 0.152ms
1.0 cpu, 1024 ram, 900 iterations, object type, object 900: 0.142ms
1.0 cpu, 1024 ram, 900 iterations, array_ type, array_ 900: 0.143ms
1.0 cpu, 1024 ram, 900 iterations, map___ type, map___ 900: 0.154ms
2.0 cpu, 1024 ram, 900 iterations, object type, object 900: 0.129ms
2.0 cpu, 1024 ram, 900 iterations, array_ type, array_ 900: 0.127ms
2.0 cpu, 1024 ram, 900 iterations, map___ type, map___ 900: 0.144ms
3.0 cpu, 1024 ram, 900 iterations, object type, object 900: 0.137ms
3.0 cpu, 1024 ram, 900 iterations, array_ type, array_ 900: 0.12ms
3.0 cpu, 1024 ram, 900 iterations, map___ type, map___ 900: 0.176ms
4.0 cpu, 1024 ram, 900 iterations, object type, object 900: 0.115ms
4.0 cpu, 1024 ram, 900 iterations, array_ type, array_ 900: 0.129ms
4.0 cpu, 1024 ram, 900 iterations, map___ type, map___ 900: 0.154ms
0.5 cpu, 2048 ram, 900 iterations, object type, object 900: 0.124ms
0.5 cpu, 2048 ram, 900 iterations, array_ type, array_ 900: 0.123ms
0.5 cpu, 2048 ram, 900 iterations, map___ type, map___ 900: 0.161ms
1.0 cpu, 2048 ram, 900 iterations, object type, object 900: 0.123ms
1.0 cpu, 2048 ram, 900 iterations, array_ type, array_ 900: 0.129ms
1.0 cpu, 2048 ram, 900 iterations, map___ type, map___ 900: 0.152ms
2.0 cpu, 2048 ram, 900 iterations, object type, object 900: 0.124ms
2.0 cpu, 2048 ram, 900 iterations, array_ type, array_ 900: 0.121ms
2.0 cpu, 2048 ram, 900 iterations, map___ type, map___ 900: 0.151ms
3.0 cpu, 2048 ram, 900 iterations, object type, object 900: 0.124ms
3.0 cpu, 2048 ram, 900 iterations, array_ type, array_ 900: 0.122ms
3.0 cpu, 2048 ram, 900 iterations, map___ type, map___ 900: 0.162ms
4.0 cpu, 2048 ram, 900 iterations, object type, object 900: 0.118ms
4.0 cpu, 2048 ram, 900 iterations, array_ type, array_ 900: 0.131ms
4.0 cpu, 2048 ram, 900 iterations, map___ type, map___ 900: 0.148ms
0.5 cpu, 4096 ram, 900 iterations, object type, object 900: 0.114ms
0.5 cpu, 4096 ram, 900 iterations, array_ type, array_ 900: 0.127ms
0.5 cpu, 4096 ram, 900 iterations, map___ type, map___ 900: 0.153ms
1.0 cpu, 4096 ram, 900 iterations, object type, object 900: 0.131ms
1.0 cpu, 4096 ram, 900 iterations, array_ type, array_ 900: 0.126ms
1.0 cpu, 4096 ram, 900 iterations, map___ type, map___ 900: 0.151ms
2.0 cpu, 4096 ram, 900 iterations, object type, object 900: 0.132ms
2.0 cpu, 4096 ram, 900 iterations, array_ type, array_ 900: 0.12ms
2.0 cpu, 4096 ram, 900 iterations, map___ type, map___ 900: 0.173ms
3.0 cpu, 4096 ram, 900 iterations, object type, object 900: 0.123ms
3.0 cpu, 4096 ram, 900 iterations, array_ type, array_ 900: 0.12ms
3.0 cpu, 4096 ram, 900 iterations, map___ type, map___ 900: 0.149ms
4.0 cpu, 4096 ram, 900 iterations, object type, object 900: 0.127ms
4.0 cpu, 4096 ram, 900 iterations, array_ type, array_ 900: 0.129ms
4.0 cpu, 4096 ram, 900 iterations, map___ type, map___ 900: 0.162ms
0.5 cpu, 8192 ram, 900 iterations, object type, object 900: 0.134ms
0.5 cpu, 8192 ram, 900 iterations, array_ type, array_ 900: 0.13ms
0.5 cpu, 8192 ram, 900 iterations, map___ type, map___ 900: 0.143ms
1.0 cpu, 8192 ram, 900 iterations, object type, object 900: 0.124ms
1.0 cpu, 8192 ram, 900 iterations, array_ type, array_ 900: 0.141ms
1.0 cpu, 8192 ram, 900 iterations, map___ type, map___ 900: 0.156ms
2.0 cpu, 8192 ram, 900 iterations, object type, object 900: 0.123ms
2.0 cpu, 8192 ram, 900 iterations, array_ type, array_ 900: 0.117ms
2.0 cpu, 8192 ram, 900 iterations, map___ type, map___ 900: 0.151ms
3.0 cpu, 8192 ram, 900 iterations, object type, object 900: 0.136ms
3.0 cpu, 8192 ram, 900 iterations, array_ type, array_ 900: 0.148ms
3.0 cpu, 8192 ram, 900 iterations, map___ type, map___ 900: 0.142ms
4.0 cpu, 8192 ram, 900 iterations, object type, object 900: 0.136ms
4.0 cpu, 8192 ram, 900 iterations, array_ type, array_ 900: 0.135ms
4.0 cpu, 8192 ram, 900 iterations, map___ type, map___ 900: 0.149ms
0.5 cpu, 16384 ram, 900 iterations, object type, object 900: 0.124ms
0.5 cpu, 16384 ram, 900 iterations, array_ type, array_ 900: 0.134ms
0.5 cpu, 16384 ram, 900 iterations, map___ type, map___ 900: 0.17ms
1.0 cpu, 16384 ram, 900 iterations, object type, object 900: 0.128ms
1.0 cpu, 16384 ram, 900 iterations, array_ type, array_ 900: 0.126ms
1.0 cpu, 16384 ram, 900 iterations, map___ type, map___ 900: 0.188ms
2.0 cpu, 16384 ram, 900 iterations, object type, object 900: 0.126ms
2.0 cpu, 16384 ram, 900 iterations, array_ type, array_ 900: 0.116ms
2.0 cpu, 16384 ram, 900 iterations, map___ type, map___ 900: 0.165ms
3.0 cpu, 16384 ram, 900 iterations, object type, object 900: 0.135ms
3.0 cpu, 16384 ram, 900 iterations, array_ type, array_ 900: 0.126ms
3.0 cpu, 16384 ram, 900 iterations, map___ type, map___ 900: 0.148ms
4.0 cpu, 16384 ram, 900 iterations, object type, object 900: 0.143ms
4.0 cpu, 16384 ram, 900 iterations, array_ type, array_ 900: 0.127ms
4.0 cpu, 16384 ram, 900 iterations, map___ type, map___ 900: 0.171ms
0.5 cpu, 128 ram, 1000 iterations, object type, object 1000: 0.129ms
0.5 cpu, 128 ram, 1000 iterations, array_ type, array_ 1000: 0.137ms
0.5 cpu, 128 ram, 1000 iterations, map___ type, map___ 1000: 0.167ms
1.0 cpu, 128 ram, 1000 iterations, object type, object 1000: 0.127ms
1.0 cpu, 128 ram, 1000 iterations, array_ type, array_ 1000: 0.131ms
1.0 cpu, 128 ram, 1000 iterations, map___ type, map___ 1000: 0.149ms
2.0 cpu, 128 ram, 1000 iterations, object type, object 1000: 0.127ms
2.0 cpu, 128 ram, 1000 iterations, array_ type, array_ 1000: 0.13ms
2.0 cpu, 128 ram, 1000 iterations, map___ type, map___ 1000: 0.183ms
3.0 cpu, 128 ram, 1000 iterations, object type, object 1000: 0.13ms
3.0 cpu, 128 ram, 1000 iterations, array_ type, array_ 1000: 0.13ms
3.0 cpu, 128 ram, 1000 iterations, map___ type, map___ 1000: 0.16ms
4.0 cpu, 128 ram, 1000 iterations, object type, object 1000: 0.124ms
4.0 cpu, 128 ram, 1000 iterations, array_ type, array_ 1000: 0.143ms
4.0 cpu, 128 ram, 1000 iterations, map___ type, map___ 1000: 0.19ms
0.5 cpu, 256 ram, 1000 iterations, object type, object 1000: 0.151ms
0.5 cpu, 256 ram, 1000 iterations, array_ type, array_ 1000: 0.137ms
0.5 cpu, 256 ram, 1000 iterations, map___ type, map___ 1000: 0.192ms
1.0 cpu, 256 ram, 1000 iterations, object type, object 1000: 0.128ms
1.0 cpu, 256 ram, 1000 iterations, array_ type, array_ 1000: 0.125ms
1.0 cpu, 256 ram, 1000 iterations, map___ type, map___ 1000: 0.16ms
2.0 cpu, 256 ram, 1000 iterations, object type, object 1000: 0.122ms
2.0 cpu, 256 ram, 1000 iterations, array_ type, array_ 1000: 0.128ms
2.0 cpu, 256 ram, 1000 iterations, map___ type, map___ 1000: 0.169ms
3.0 cpu, 256 ram, 1000 iterations, object type, object 1000: 0.144ms
3.0 cpu, 256 ram, 1000 iterations, array_ type, array_ 1000: 0.137ms
3.0 cpu, 256 ram, 1000 iterations, map___ type, map___ 1000: 0.16ms
4.0 cpu, 256 ram, 1000 iterations, object type, object 1000: 0.145ms
4.0 cpu, 256 ram, 1000 iterations, array_ type, array_ 1000: 0.129ms
4.0 cpu, 256 ram, 1000 iterations, map___ type, map___ 1000: 0.176ms
0.5 cpu, 512 ram, 1000 iterations, object type, object 1000: 0.136ms
0.5 cpu, 512 ram, 1000 iterations, array_ type, array_ 1000: 0.14ms
0.5 cpu, 512 ram, 1000 iterations, map___ type, map___ 1000: 0.167ms
1.0 cpu, 512 ram, 1000 iterations, object type, object 1000: 0.13ms
1.0 cpu, 512 ram, 1000 iterations, array_ type, array_ 1000: 0.129ms
1.0 cpu, 512 ram, 1000 iterations, map___ type, map___ 1000: 0.167ms
2.0 cpu, 512 ram, 1000 iterations, object type, object 1000: 0.127ms
2.0 cpu, 512 ram, 1000 iterations, array_ type, array_ 1000: 0.135ms
2.0 cpu, 512 ram, 1000 iterations, map___ type, map___ 1000: 0.148ms
3.0 cpu, 512 ram, 1000 iterations, object type, object 1000: 0.131ms
3.0 cpu, 512 ram, 1000 iterations, array_ type, array_ 1000: 0.122ms
3.0 cpu, 512 ram, 1000 iterations, map___ type, map___ 1000: 0.171ms
4.0 cpu, 512 ram, 1000 iterations, object type, object 1000: 0.13ms
4.0 cpu, 512 ram, 1000 iterations, array_ type, array_ 1000: 0.134ms
4.0 cpu, 512 ram, 1000 iterations, map___ type, map___ 1000: 0.17ms
0.5 cpu, 1024 ram, 1000 iterations, object type, object 1000: 0.132ms
0.5 cpu, 1024 ram, 1000 iterations, array_ type, array_ 1000: 0.128ms
0.5 cpu, 1024 ram, 1000 iterations, map___ type, map___ 1000: 0.162ms
1.0 cpu, 1024 ram, 1000 iterations, object type, object 1000: 0.123ms
1.0 cpu, 1024 ram, 1000 iterations, array_ type, array_ 1000: 0.127ms
1.0 cpu, 1024 ram, 1000 iterations, map___ type, map___ 1000: 0.176ms
2.0 cpu, 1024 ram, 1000 iterations, object type, object 1000: 0.121ms
2.0 cpu, 1024 ram, 1000 iterations, array_ type, array_ 1000: 0.132ms
2.0 cpu, 1024 ram, 1000 iterations, map___ type, map___ 1000: 0.16ms
3.0 cpu, 1024 ram, 1000 iterations, object type, object 1000: 0.122ms
3.0 cpu, 1024 ram, 1000 iterations, array_ type, array_ 1000: 0.131ms
3.0 cpu, 1024 ram, 1000 iterations, map___ type, map___ 1000: 0.161ms
4.0 cpu, 1024 ram, 1000 iterations, object type, object 1000: 0.138ms
4.0 cpu, 1024 ram, 1000 iterations, array_ type, array_ 1000: 0.12ms
4.0 cpu, 1024 ram, 1000 iterations, map___ type, map___ 1000: 0.164ms
0.5 cpu, 2048 ram, 1000 iterations, object type, object 1000: 0.126ms
0.5 cpu, 2048 ram, 1000 iterations, array_ type, array_ 1000: 0.138ms
0.5 cpu, 2048 ram, 1000 iterations, map___ type, map___ 1000: 0.166ms
1.0 cpu, 2048 ram, 1000 iterations, object type, object 1000: 0.127ms
1.0 cpu, 2048 ram, 1000 iterations, array_ type, array_ 1000: 0.125ms
1.0 cpu, 2048 ram, 1000 iterations, map___ type, map___ 1000: 0.148ms
2.0 cpu, 2048 ram, 1000 iterations, object type, object 1000: 0.136ms
2.0 cpu, 2048 ram, 1000 iterations, array_ type, array_ 1000: 0.128ms
2.0 cpu, 2048 ram, 1000 iterations, map___ type, map___ 1000: 0.176ms
3.0 cpu, 2048 ram, 1000 iterations, object type, object 1000: 0.169ms
3.0 cpu, 2048 ram, 1000 iterations, array_ type, array_ 1000: 0.141ms
3.0 cpu, 2048 ram, 1000 iterations, map___ type, map___ 1000: 0.188ms
4.0 cpu, 2048 ram, 1000 iterations, object type, object 1000: 0.132ms
4.0 cpu, 2048 ram, 1000 iterations, array_ type, array_ 1000: 0.154ms
4.0 cpu, 2048 ram, 1000 iterations, map___ type, map___ 1000: 0.166ms
0.5 cpu, 4096 ram, 1000 iterations, object type, object 1000: 0.142ms
0.5 cpu, 4096 ram, 1000 iterations, array_ type, array_ 1000: 0.122ms
0.5 cpu, 4096 ram, 1000 iterations, map___ type, map___ 1000: 0.161ms
1.0 cpu, 4096 ram, 1000 iterations, object type, object 1000: 0.13ms
1.0 cpu, 4096 ram, 1000 iterations, array_ type, array_ 1000: 0.134ms
1.0 cpu, 4096 ram, 1000 iterations, map___ type, map___ 1000: 0.179ms
2.0 cpu, 4096 ram, 1000 iterations, object type, object 1000: 0.133ms
2.0 cpu, 4096 ram, 1000 iterations, array_ type, array_ 1000: 0.119ms
2.0 cpu, 4096 ram, 1000 iterations, map___ type, map___ 1000: 0.172ms
3.0 cpu, 4096 ram, 1000 iterations, object type, object 1000: 0.142ms
3.0 cpu, 4096 ram, 1000 iterations, array_ type, array_ 1000: 0.129ms
3.0 cpu, 4096 ram, 1000 iterations, map___ type, map___ 1000: 0.161ms
4.0 cpu, 4096 ram, 1000 iterations, object type, object 1000: 0.131ms
4.0 cpu, 4096 ram, 1000 iterations, array_ type, array_ 1000: 0.128ms
4.0 cpu, 4096 ram, 1000 iterations, map___ type, map___ 1000: 0.16ms
0.5 cpu, 8192 ram, 1000 iterations, object type, object 1000: 0.136ms
0.5 cpu, 8192 ram, 1000 iterations, array_ type, array_ 1000: 0.128ms
0.5 cpu, 8192 ram, 1000 iterations, map___ type, map___ 1000: 0.175ms
1.0 cpu, 8192 ram, 1000 iterations, object type, object 1000: 0.151ms
1.0 cpu, 8192 ram, 1000 iterations, array_ type, array_ 1000: 0.132ms
1.0 cpu, 8192 ram, 1000 iterations, map___ type, map___ 1000: 0.152ms
2.0 cpu, 8192 ram, 1000 iterations, object type, object 1000: 0.14ms
2.0 cpu, 8192 ram, 1000 iterations, array_ type, array_ 1000: 0.122ms
2.0 cpu, 8192 ram, 1000 iterations, map___ type, map___ 1000: 0.169ms
3.0 cpu, 8192 ram, 1000 iterations, object type, object 1000: 0.155ms
3.0 cpu, 8192 ram, 1000 iterations, array_ type, array_ 1000: 0.137ms
3.0 cpu, 8192 ram, 1000 iterations, map___ type, map___ 1000: 0.357ms
4.0 cpu, 8192 ram, 1000 iterations, object type, object 1000: 0.125ms
4.0 cpu, 8192 ram, 1000 iterations, array_ type, array_ 1000: 0.124ms
4.0 cpu, 8192 ram, 1000 iterations, map___ type, map___ 1000: 0.167ms
0.5 cpu, 16384 ram, 1000 iterations, object type, object 1000: 0.129ms
0.5 cpu, 16384 ram, 1000 iterations, array_ type, array_ 1000: 0.138ms
0.5 cpu, 16384 ram, 1000 iterations, map___ type, map___ 1000: 0.157ms
1.0 cpu, 16384 ram, 1000 iterations, object type, object 1000: 0.133ms
1.0 cpu, 16384 ram, 1000 iterations, array_ type, array_ 1000: 0.132ms
1.0 cpu, 16384 ram, 1000 iterations, map___ type, map___ 1000: 0.145ms
2.0 cpu, 16384 ram, 1000 iterations, object type, object 1000: 0.135ms
2.0 cpu, 16384 ram, 1000 iterations, array_ type, array_ 1000: 0.158ms
2.0 cpu, 16384 ram, 1000 iterations, map___ type, map___ 1000: 0.165ms
3.0 cpu, 16384 ram, 1000 iterations, object type, object 1000: 0.126ms
3.0 cpu, 16384 ram, 1000 iterations, array_ type, array_ 1000: 0.128ms
3.0 cpu, 16384 ram, 1000 iterations, map___ type, map___ 1000: 0.157ms
4.0 cpu, 16384 ram, 1000 iterations, object type, object 1000: 0.13ms
4.0 cpu, 16384 ram, 1000 iterations, array_ type, array_ 1000: 0.128ms
4.0 cpu, 16384 ram, 1000 iterations, map___ type, map___ 1000: 0.165ms
0.5 cpu, 128 ram, 2000 iterations, object type, object 2000: 0.192ms
0.5 cpu, 128 ram, 2000 iterations, array_ type, array_ 2000: 0.194ms
0.5 cpu, 128 ram, 2000 iterations, map___ type, map___ 2000: 0.281ms
1.0 cpu, 128 ram, 2000 iterations, object type, object 2000: 0.208ms
1.0 cpu, 128 ram, 2000 iterations, array_ type, array_ 2000: 0.211ms
1.0 cpu, 128 ram, 2000 iterations, map___ type, map___ 2000: 0.266ms
2.0 cpu, 128 ram, 2000 iterations, object type, object 2000: 0.219ms
2.0 cpu, 128 ram, 2000 iterations, array_ type, array_ 2000: 0.208ms
2.0 cpu, 128 ram, 2000 iterations, map___ type, map___ 2000: 0.276ms
3.0 cpu, 128 ram, 2000 iterations, object type, object 2000: 0.204ms
3.0 cpu, 128 ram, 2000 iterations, array_ type, array_ 2000: 0.217ms
3.0 cpu, 128 ram, 2000 iterations, map___ type, map___ 2000: 0.263ms
4.0 cpu, 128 ram, 2000 iterations, object type, object 2000: 0.203ms
4.0 cpu, 128 ram, 2000 iterations, array_ type, array_ 2000: 0.197ms
4.0 cpu, 128 ram, 2000 iterations, map___ type, map___ 2000: 0.273ms
0.5 cpu, 256 ram, 2000 iterations, object type, object 2000: 0.205ms
0.5 cpu, 256 ram, 2000 iterations, array_ type, array_ 2000: 0.213ms
0.5 cpu, 256 ram, 2000 iterations, map___ type, map___ 2000: 0.263ms
1.0 cpu, 256 ram, 2000 iterations, object type, object 2000: 0.193ms
1.0 cpu, 256 ram, 2000 iterations, array_ type, array_ 2000: 0.205ms
1.0 cpu, 256 ram, 2000 iterations, map___ type, map___ 2000: 0.272ms
2.0 cpu, 256 ram, 2000 iterations, object type, object 2000: 0.218ms
2.0 cpu, 256 ram, 2000 iterations, array_ type, array_ 2000: 0.182ms
2.0 cpu, 256 ram, 2000 iterations, map___ type, map___ 2000: 0.255ms
3.0 cpu, 256 ram, 2000 iterations, object type, object 2000: 0.188ms
3.0 cpu, 256 ram, 2000 iterations, array_ type, array_ 2000: 0.192ms
3.0 cpu, 256 ram, 2000 iterations, map___ type, map___ 2000: 0.255ms
4.0 cpu, 256 ram, 2000 iterations, object type, object 2000: 0.216ms
4.0 cpu, 256 ram, 2000 iterations, array_ type, array_ 2000: 0.187ms
4.0 cpu, 256 ram, 2000 iterations, map___ type, map___ 2000: 0.264ms
0.5 cpu, 512 ram, 2000 iterations, object type, object 2000: 0.233ms
0.5 cpu, 512 ram, 2000 iterations, array_ type, array_ 2000: 0.215ms
0.5 cpu, 512 ram, 2000 iterations, map___ type, map___ 2000: 0.278ms
1.0 cpu, 512 ram, 2000 iterations, object type, object 2000: 0.221ms
1.0 cpu, 512 ram, 2000 iterations, array_ type, array_ 2000: 0.202ms
1.0 cpu, 512 ram, 2000 iterations, map___ type, map___ 2000: 0.259ms
2.0 cpu, 512 ram, 2000 iterations, object type, object 2000: 0.209ms
2.0 cpu, 512 ram, 2000 iterations, array_ type, array_ 2000: 0.214ms
2.0 cpu, 512 ram, 2000 iterations, map___ type, map___ 2000: 0.238ms
3.0 cpu, 512 ram, 2000 iterations, object type, object 2000: 0.199ms
3.0 cpu, 512 ram, 2000 iterations, array_ type, array_ 2000: 0.217ms
3.0 cpu, 512 ram, 2000 iterations, map___ type, map___ 2000: 0.257ms
4.0 cpu, 512 ram, 2000 iterations, object type, object 2000: 0.206ms
4.0 cpu, 512 ram, 2000 iterations, array_ type, array_ 2000: 0.205ms
4.0 cpu, 512 ram, 2000 iterations, map___ type, map___ 2000: 0.251ms
0.5 cpu, 1024 ram, 2000 iterations, object type, object 2000: 0.189ms
0.5 cpu, 1024 ram, 2000 iterations, array_ type, array_ 2000: 0.207ms
0.5 cpu, 1024 ram, 2000 iterations, map___ type, map___ 2000: 0.262ms
1.0 cpu, 1024 ram, 2000 iterations, object type, object 2000: 0.18ms
1.0 cpu, 1024 ram, 2000 iterations, array_ type, array_ 2000: 0.212ms
1.0 cpu, 1024 ram, 2000 iterations, map___ type, map___ 2000: 0.243ms
2.0 cpu, 1024 ram, 2000 iterations, object type, object 2000: 0.194ms
2.0 cpu, 1024 ram, 2000 iterations, array_ type, array_ 2000: 0.19ms
2.0 cpu, 1024 ram, 2000 iterations, map___ type, map___ 2000: 0.278ms
3.0 cpu, 1024 ram, 2000 iterations, object type, object 2000: 0.21ms
3.0 cpu, 1024 ram, 2000 iterations, array_ type, array_ 2000: 0.2ms
3.0 cpu, 1024 ram, 2000 iterations, map___ type, map___ 2000: 0.253ms
4.0 cpu, 1024 ram, 2000 iterations, object type, object 2000: 0.197ms
4.0 cpu, 1024 ram, 2000 iterations, array_ type, array_ 2000: 0.211ms
4.0 cpu, 1024 ram, 2000 iterations, map___ type, map___ 2000: 0.277ms
0.5 cpu, 2048 ram, 2000 iterations, object type, object 2000: 0.213ms
0.5 cpu, 2048 ram, 2000 iterations, array_ type, array_ 2000: 0.225ms
0.5 cpu, 2048 ram, 2000 iterations, map___ type, map___ 2000: 0.273ms
1.0 cpu, 2048 ram, 2000 iterations, object type, object 2000: 0.208ms
1.0 cpu, 2048 ram, 2000 iterations, array_ type, array_ 2000: 0.207ms
1.0 cpu, 2048 ram, 2000 iterations, map___ type, map___ 2000: 0.284ms
2.0 cpu, 2048 ram, 2000 iterations, object type, object 2000: 0.212ms
2.0 cpu, 2048 ram, 2000 iterations, array_ type, array_ 2000: 0.186ms
2.0 cpu, 2048 ram, 2000 iterations, map___ type, map___ 2000: 0.276ms
3.0 cpu, 2048 ram, 2000 iterations, object type, object 2000: 0.209ms
3.0 cpu, 2048 ram, 2000 iterations, array_ type, array_ 2000: 0.202ms
3.0 cpu, 2048 ram, 2000 iterations, map___ type, map___ 2000: 0.262ms
4.0 cpu, 2048 ram, 2000 iterations, object type, object 2000: 0.23ms
4.0 cpu, 2048 ram, 2000 iterations, array_ type, array_ 2000: 0.205ms
4.0 cpu, 2048 ram, 2000 iterations, map___ type, map___ 2000: 0.274ms
0.5 cpu, 4096 ram, 2000 iterations, object type, object 2000: 0.202ms
0.5 cpu, 4096 ram, 2000 iterations, array_ type, array_ 2000: 0.198ms
0.5 cpu, 4096 ram, 2000 iterations, map___ type, map___ 2000: 0.278ms
1.0 cpu, 4096 ram, 2000 iterations, object type, object 2000: 0.192ms
1.0 cpu, 4096 ram, 2000 iterations, array_ type, array_ 2000: 0.229ms
1.0 cpu, 4096 ram, 2000 iterations, map___ type, map___ 2000: 0.253ms
2.0 cpu, 4096 ram, 2000 iterations, object type, object 2000: 0.217ms
2.0 cpu, 4096 ram, 2000 iterations, array_ type, array_ 2000: 0.264ms
2.0 cpu, 4096 ram, 2000 iterations, map___ type, map___ 2000: 0.247ms
3.0 cpu, 4096 ram, 2000 iterations, object type, object 2000: 0.212ms
3.0 cpu, 4096 ram, 2000 iterations, array_ type, array_ 2000: 0.195ms
3.0 cpu, 4096 ram, 2000 iterations, map___ type, map___ 2000: 0.253ms
4.0 cpu, 4096 ram, 2000 iterations, object type, object 2000: 0.198ms
4.0 cpu, 4096 ram, 2000 iterations, array_ type, array_ 2000: 0.208ms
4.0 cpu, 4096 ram, 2000 iterations, map___ type, map___ 2000: 0.27ms
0.5 cpu, 8192 ram, 2000 iterations, object type, object 2000: 0.201ms
0.5 cpu, 8192 ram, 2000 iterations, array_ type, array_ 2000: 0.196ms
0.5 cpu, 8192 ram, 2000 iterations, map___ type, map___ 2000: 0.252ms
1.0 cpu, 8192 ram, 2000 iterations, object type, object 2000: 0.199ms
1.0 cpu, 8192 ram, 2000 iterations, array_ type, array_ 2000: 0.207ms
1.0 cpu, 8192 ram, 2000 iterations, map___ type, map___ 2000: 0.268ms
2.0 cpu, 8192 ram, 2000 iterations, object type, object 2000: 0.199ms
2.0 cpu, 8192 ram, 2000 iterations, array_ type, array_ 2000: 0.194ms
2.0 cpu, 8192 ram, 2000 iterations, map___ type, map___ 2000: 0.259ms
3.0 cpu, 8192 ram, 2000 iterations, object type, object 2000: 0.215ms
3.0 cpu, 8192 ram, 2000 iterations, array_ type, array_ 2000: 0.184ms
3.0 cpu, 8192 ram, 2000 iterations, map___ type, map___ 2000: 0.252ms
4.0 cpu, 8192 ram, 2000 iterations, object type, object 2000: 0.212ms
4.0 cpu, 8192 ram, 2000 iterations, array_ type, array_ 2000: 0.19ms
4.0 cpu, 8192 ram, 2000 iterations, map___ type, map___ 2000: 0.261ms
0.5 cpu, 16384 ram, 2000 iterations, object type, object 2000: 0.205ms
0.5 cpu, 16384 ram, 2000 iterations, array_ type, array_ 2000: 0.206ms
0.5 cpu, 16384 ram, 2000 iterations, map___ type, map___ 2000: 0.241ms
1.0 cpu, 16384 ram, 2000 iterations, object type, object 2000: 0.191ms
1.0 cpu, 16384 ram, 2000 iterations, array_ type, array_ 2000: 0.189ms
1.0 cpu, 16384 ram, 2000 iterations, map___ type, map___ 2000: 0.269ms
2.0 cpu, 16384 ram, 2000 iterations, object type, object 2000: 0.186ms
2.0 cpu, 16384 ram, 2000 iterations, array_ type, array_ 2000: 0.189ms
2.0 cpu, 16384 ram, 2000 iterations, map___ type, map___ 2000: 0.275ms
3.0 cpu, 16384 ram, 2000 iterations, object type, object 2000: 0.213ms
3.0 cpu, 16384 ram, 2000 iterations, array_ type, array_ 2000: 0.235ms
3.0 cpu, 16384 ram, 2000 iterations, map___ type, map___ 2000: 0.253ms
4.0 cpu, 16384 ram, 2000 iterations, object type, object 2000: 0.21ms
4.0 cpu, 16384 ram, 2000 iterations, array_ type, array_ 2000: 0.207ms
4.0 cpu, 16384 ram, 2000 iterations, map___ type, map___ 2000: 0.273ms
0.5 cpu, 128 ram, 3000 iterations, object type, object 3000: 0.282ms
0.5 cpu, 128 ram, 3000 iterations, array_ type, array_ 3000: 0.285ms
0.5 cpu, 128 ram, 3000 iterations, map___ type, map___ 3000: 0.432ms
1.0 cpu, 128 ram, 3000 iterations, object type, object 3000: 0.266ms
1.0 cpu, 128 ram, 3000 iterations, array_ type, array_ 3000: 0.266ms
1.0 cpu, 128 ram, 3000 iterations, map___ type, map___ 3000: 0.406ms
2.0 cpu, 128 ram, 3000 iterations, object type, object 3000: 0.247ms
2.0 cpu, 128 ram, 3000 iterations, array_ type, array_ 3000: 0.253ms
2.0 cpu, 128 ram, 3000 iterations, map___ type, map___ 3000: 0.446ms
3.0 cpu, 128 ram, 3000 iterations, object type, object 3000: 0.265ms
3.0 cpu, 128 ram, 3000 iterations, array_ type, array_ 3000: 0.269ms
3.0 cpu, 128 ram, 3000 iterations, map___ type, map___ 3000: 0.449ms
4.0 cpu, 128 ram, 3000 iterations, object type, object 3000: 0.245ms
4.0 cpu, 128 ram, 3000 iterations, array_ type, array_ 3000: 0.258ms
4.0 cpu, 128 ram, 3000 iterations, map___ type, map___ 3000: 0.405ms
0.5 cpu, 256 ram, 3000 iterations, object type, object 3000: 0.266ms
0.5 cpu, 256 ram, 3000 iterations, array_ type, array_ 3000: 0.248ms
0.5 cpu, 256 ram, 3000 iterations, map___ type, map___ 3000: 0.398ms
1.0 cpu, 256 ram, 3000 iterations, object type, object 3000: 0.263ms
1.0 cpu, 256 ram, 3000 iterations, array_ type, array_ 3000: 0.273ms
1.0 cpu, 256 ram, 3000 iterations, map___ type, map___ 3000: 0.464ms
2.0 cpu, 256 ram, 3000 iterations, object type, object 3000: 0.262ms
2.0 cpu, 256 ram, 3000 iterations, array_ type, array_ 3000: 0.286ms
2.0 cpu, 256 ram, 3000 iterations, map___ type, map___ 3000: 0.461ms
3.0 cpu, 256 ram, 3000 iterations, object type, object 3000: 0.294ms
3.0 cpu, 256 ram, 3000 iterations, array_ type, array_ 3000: 0.247ms
3.0 cpu, 256 ram, 3000 iterations, map___ type, map___ 3000: 0.43ms
4.0 cpu, 256 ram, 3000 iterations, object type, object 3000: 0.27ms
4.0 cpu, 256 ram, 3000 iterations, array_ type, array_ 3000: 0.282ms
4.0 cpu, 256 ram, 3000 iterations, map___ type, map___ 3000: 0.6ms
0.5 cpu, 512 ram, 3000 iterations, object type, object 3000: 0.256ms
0.5 cpu, 512 ram, 3000 iterations, array_ type, array_ 3000: 0.268ms
0.5 cpu, 512 ram, 3000 iterations, map___ type, map___ 3000: 0.478ms
1.0 cpu, 512 ram, 3000 iterations, object type, object 3000: 0.275ms
1.0 cpu, 512 ram, 3000 iterations, array_ type, array_ 3000: 0.282ms
1.0 cpu, 512 ram, 3000 iterations, map___ type, map___ 3000: 0.558ms
2.0 cpu, 512 ram, 3000 iterations, object type, object 3000: 0.284ms
2.0 cpu, 512 ram, 3000 iterations, array_ type, array_ 3000: 0.261ms
2.0 cpu, 512 ram, 3000 iterations, map___ type, map___ 3000: 0.429ms
3.0 cpu, 512 ram, 3000 iterations, object type, object 3000: 0.269ms
3.0 cpu, 512 ram, 3000 iterations, array_ type, array_ 3000: 0.276ms
3.0 cpu, 512 ram, 3000 iterations, map___ type, map___ 3000: 0.441ms
4.0 cpu, 512 ram, 3000 iterations, object type, object 3000: 0.247ms
4.0 cpu, 512 ram, 3000 iterations, array_ type, array_ 3000: 0.293ms
4.0 cpu, 512 ram, 3000 iterations, map___ type, map___ 3000: 0.486ms
0.5 cpu, 1024 ram, 3000 iterations, object type, object 3000: 0.255ms
0.5 cpu, 1024 ram, 3000 iterations, array_ type, array_ 3000: 0.254ms
0.5 cpu, 1024 ram, 3000 iterations, map___ type, map___ 3000: 0.412ms
1.0 cpu, 1024 ram, 3000 iterations, object type, object 3000: 0.264ms
1.0 cpu, 1024 ram, 3000 iterations, array_ type, array_ 3000: 0.259ms
1.0 cpu, 1024 ram, 3000 iterations, map___ type, map___ 3000: 0.444ms
2.0 cpu, 1024 ram, 3000 iterations, object type, object 3000: 0.269ms
2.0 cpu, 1024 ram, 3000 iterations, array_ type, array_ 3000: 0.246ms
2.0 cpu, 1024 ram, 3000 iterations, map___ type, map___ 3000: 0.431ms
3.0 cpu, 1024 ram, 3000 iterations, object type, object 3000: 0.26ms
3.0 cpu, 1024 ram, 3000 iterations, array_ type, array_ 3000: 0.27ms
3.0 cpu, 1024 ram, 3000 iterations, map___ type, map___ 3000: 0.4ms
4.0 cpu, 1024 ram, 3000 iterations, object type, object 3000: 0.264ms
4.0 cpu, 1024 ram, 3000 iterations, array_ type, array_ 3000: 0.259ms
4.0 cpu, 1024 ram, 3000 iterations, map___ type, map___ 3000: 0.48ms
0.5 cpu, 2048 ram, 3000 iterations, object type, object 3000: 0.26ms
0.5 cpu, 2048 ram, 3000 iterations, array_ type, array_ 3000: 0.265ms
0.5 cpu, 2048 ram, 3000 iterations, map___ type, map___ 3000: 0.441ms
1.0 cpu, 2048 ram, 3000 iterations, object type, object 3000: 0.258ms
1.0 cpu, 2048 ram, 3000 iterations, array_ type, array_ 3000: 0.283ms
1.0 cpu, 2048 ram, 3000 iterations, map___ type, map___ 3000: 0.459ms
2.0 cpu, 2048 ram, 3000 iterations, object type, object 3000: 0.263ms
2.0 cpu, 2048 ram, 3000 iterations, array_ type, array_ 3000: 0.247ms
2.0 cpu, 2048 ram, 3000 iterations, map___ type, map___ 3000: 0.438ms
3.0 cpu, 2048 ram, 3000 iterations, object type, object 3000: 0.238ms
3.0 cpu, 2048 ram, 3000 iterations, array_ type, array_ 3000: 0.263ms
3.0 cpu, 2048 ram, 3000 iterations, map___ type, map___ 3000: 0.441ms
4.0 cpu, 2048 ram, 3000 iterations, object type, object 3000: 0.235ms
4.0 cpu, 2048 ram, 3000 iterations, array_ type, array_ 3000: 0.267ms
4.0 cpu, 2048 ram, 3000 iterations, map___ type, map___ 3000: 0.462ms
0.5 cpu, 4096 ram, 3000 iterations, object type, object 3000: 0.279ms
0.5 cpu, 4096 ram, 3000 iterations, array_ type, array_ 3000: 0.374ms
0.5 cpu, 4096 ram, 3000 iterations, map___ type, map___ 3000: 0.485ms
1.0 cpu, 4096 ram, 3000 iterations, object type, object 3000: 0.254ms
1.0 cpu, 4096 ram, 3000 iterations, array_ type, array_ 3000: 0.245ms
1.0 cpu, 4096 ram, 3000 iterations, map___ type, map___ 3000: 0.419ms
2.0 cpu, 4096 ram, 3000 iterations, object type, object 3000: 0.256ms
2.0 cpu, 4096 ram, 3000 iterations, array_ type, array_ 3000: 0.25ms
2.0 cpu, 4096 ram, 3000 iterations, map___ type, map___ 3000: 0.462ms
3.0 cpu, 4096 ram, 3000 iterations, object type, object 3000: 0.275ms
3.0 cpu, 4096 ram, 3000 iterations, array_ type, array_ 3000: 0.267ms
3.0 cpu, 4096 ram, 3000 iterations, map___ type, map___ 3000: 0.47ms
4.0 cpu, 4096 ram, 3000 iterations, object type, object 3000: 0.31ms
4.0 cpu, 4096 ram, 3000 iterations, array_ type, array_ 3000: 0.279ms
4.0 cpu, 4096 ram, 3000 iterations, map___ type, map___ 3000: 0.432ms
0.5 cpu, 8192 ram, 3000 iterations, object type, object 3000: 0.324ms
0.5 cpu, 8192 ram, 3000 iterations, array_ type, array_ 3000: 0.256ms
0.5 cpu, 8192 ram, 3000 iterations, map___ type, map___ 3000: 0.491ms
1.0 cpu, 8192 ram, 3000 iterations, object type, object 3000: 0.243ms
1.0 cpu, 8192 ram, 3000 iterations, array_ type, array_ 3000: 0.274ms
1.0 cpu, 8192 ram, 3000 iterations, map___ type, map___ 3000: 0.501ms
2.0 cpu, 8192 ram, 3000 iterations, object type, object 3000: 0.246ms
2.0 cpu, 8192 ram, 3000 iterations, array_ type, array_ 3000: 0.266ms
2.0 cpu, 8192 ram, 3000 iterations, map___ type, map___ 3000: 0.435ms
3.0 cpu, 8192 ram, 3000 iterations, object type, object 3000: 0.238ms
3.0 cpu, 8192 ram, 3000 iterations, array_ type, array_ 3000: 0.26ms
3.0 cpu, 8192 ram, 3000 iterations, map___ type, map___ 3000: 0.442ms
4.0 cpu, 8192 ram, 3000 iterations, object type, object 3000: 0.259ms
4.0 cpu, 8192 ram, 3000 iterations, array_ type, array_ 3000: 0.252ms
4.0 cpu, 8192 ram, 3000 iterations, map___ type, map___ 3000: 0.467ms
0.5 cpu, 16384 ram, 3000 iterations, object type, object 3000: 0.254ms
0.5 cpu, 16384 ram, 3000 iterations, array_ type, array_ 3000: 0.261ms
0.5 cpu, 16384 ram, 3000 iterations, map___ type, map___ 3000: 0.441ms
1.0 cpu, 16384 ram, 3000 iterations, object type, object 3000: 0.276ms
1.0 cpu, 16384 ram, 3000 iterations, array_ type, array_ 3000: 0.251ms
1.0 cpu, 16384 ram, 3000 iterations, map___ type, map___ 3000: 0.433ms
2.0 cpu, 16384 ram, 3000 iterations, object type, object 3000: 0.27ms
2.0 cpu, 16384 ram, 3000 iterations, array_ type, array_ 3000: 0.265ms
2.0 cpu, 16384 ram, 3000 iterations, map___ type, map___ 3000: 0.469ms
3.0 cpu, 16384 ram, 3000 iterations, object type, object 3000: 0.253ms
3.0 cpu, 16384 ram, 3000 iterations, array_ type, array_ 3000: 0.279ms
3.0 cpu, 16384 ram, 3000 iterations, map___ type, map___ 3000: 0.388ms
4.0 cpu, 16384 ram, 3000 iterations, object type, object 3000: 0.261ms
4.0 cpu, 16384 ram, 3000 iterations, array_ type, array_ 3000: 0.248ms
4.0 cpu, 16384 ram, 3000 iterations, map___ type, map___ 3000: 0.487ms
0.5 cpu, 128 ram, 4000 iterations, object type, object 4000: 0.303ms
0.5 cpu, 128 ram, 4000 iterations, array_ type, array_ 4000: 0.329ms
0.5 cpu, 128 ram, 4000 iterations, map___ type, map___ 4000: 0.491ms
1.0 cpu, 128 ram, 4000 iterations, object type, object 4000: 0.281ms
1.0 cpu, 128 ram, 4000 iterations, array_ type, array_ 4000: 0.318ms
1.0 cpu, 128 ram, 4000 iterations, map___ type, map___ 4000: 0.547ms
2.0 cpu, 128 ram, 4000 iterations, object type, object 4000: 0.318ms
2.0 cpu, 128 ram, 4000 iterations, array_ type, array_ 4000: 0.332ms
2.0 cpu, 128 ram, 4000 iterations, map___ type, map___ 4000: 0.485ms
3.0 cpu, 128 ram, 4000 iterations, object type, object 4000: 0.294ms
3.0 cpu, 128 ram, 4000 iterations, array_ type, array_ 4000: 0.367ms
3.0 cpu, 128 ram, 4000 iterations, map___ type, map___ 4000: 0.562ms
4.0 cpu, 128 ram, 4000 iterations, object type, object 4000: 0.314ms
4.0 cpu, 128 ram, 4000 iterations, array_ type, array_ 4000: 0.308ms
4.0 cpu, 128 ram, 4000 iterations, map___ type, map___ 4000: 0.547ms
0.5 cpu, 256 ram, 4000 iterations, object type, object 4000: 0.281ms
0.5 cpu, 256 ram, 4000 iterations, array_ type, array_ 4000: 0.292ms
0.5 cpu, 256 ram, 4000 iterations, map___ type, map___ 4000: 0.516ms
1.0 cpu, 256 ram, 4000 iterations, object type, object 4000: 0.292ms
1.0 cpu, 256 ram, 4000 iterations, array_ type, array_ 4000: 0.344ms
1.0 cpu, 256 ram, 4000 iterations, map___ type, map___ 4000: 0.579ms
2.0 cpu, 256 ram, 4000 iterations, object type, object 4000: 0.329ms
2.0 cpu, 256 ram, 4000 iterations, array_ type, array_ 4000: 0.308ms
2.0 cpu, 256 ram, 4000 iterations, map___ type, map___ 4000: 0.566ms
3.0 cpu, 256 ram, 4000 iterations, object type, object 4000: 0.317ms
3.0 cpu, 256 ram, 4000 iterations, array_ type, array_ 4000: 0.317ms
3.0 cpu, 256 ram, 4000 iterations, map___ type, map___ 4000: 0.556ms
4.0 cpu, 256 ram, 4000 iterations, object type, object 4000: 0.344ms
4.0 cpu, 256 ram, 4000 iterations, array_ type, array_ 4000: 0.307ms
4.0 cpu, 256 ram, 4000 iterations, map___ type, map___ 4000: 0.553ms
0.5 cpu, 512 ram, 4000 iterations, object type, object 4000: 0.314ms
0.5 cpu, 512 ram, 4000 iterations, array_ type, array_ 4000: 0.318ms
0.5 cpu, 512 ram, 4000 iterations, map___ type, map___ 4000: 0.585ms
1.0 cpu, 512 ram, 4000 iterations, object type, object 4000: 0.308ms
1.0 cpu, 512 ram, 4000 iterations, array_ type, array_ 4000: 0.318ms
1.0 cpu, 512 ram, 4000 iterations, map___ type, map___ 4000: 0.55ms
2.0 cpu, 512 ram, 4000 iterations, object type, object 4000: 0.342ms
2.0 cpu, 512 ram, 4000 iterations, array_ type, array_ 4000: 0.305ms
2.0 cpu, 512 ram, 4000 iterations, map___ type, map___ 4000: 0.548ms
3.0 cpu, 512 ram, 4000 iterations, object type, object 4000: 0.287ms
3.0 cpu, 512 ram, 4000 iterations, array_ type, array_ 4000: 0.315ms
3.0 cpu, 512 ram, 4000 iterations, map___ type, map___ 4000: 0.547ms
4.0 cpu, 512 ram, 4000 iterations, object type, object 4000: 0.305ms
4.0 cpu, 512 ram, 4000 iterations, array_ type, array_ 4000: 0.322ms
4.0 cpu, 512 ram, 4000 iterations, map___ type, map___ 4000: 0.54ms
0.5 cpu, 1024 ram, 4000 iterations, object type, object 4000: 0.31ms
0.5 cpu, 1024 ram, 4000 iterations, array_ type, array_ 4000: 0.296ms
0.5 cpu, 1024 ram, 4000 iterations, map___ type, map___ 4000: 0.515ms
1.0 cpu, 1024 ram, 4000 iterations, object type, object 4000: 0.313ms
1.0 cpu, 1024 ram, 4000 iterations, array_ type, array_ 4000: 0.306ms
1.0 cpu, 1024 ram, 4000 iterations, map___ type, map___ 4000: 0.541ms
2.0 cpu, 1024 ram, 4000 iterations, object type, object 4000: 0.315ms
2.0 cpu, 1024 ram, 4000 iterations, array_ type, array_ 4000: 0.358ms
2.0 cpu, 1024 ram, 4000 iterations, map___ type, map___ 4000: 0.573ms
3.0 cpu, 1024 ram, 4000 iterations, object type, object 4000: 0.327ms
3.0 cpu, 1024 ram, 4000 iterations, array_ type, array_ 4000: 0.287ms
3.0 cpu, 1024 ram, 4000 iterations, map___ type, map___ 4000: 0.574ms
4.0 cpu, 1024 ram, 4000 iterations, object type, object 4000: 0.312ms
4.0 cpu, 1024 ram, 4000 iterations, array_ type, array_ 4000: 0.324ms
4.0 cpu, 1024 ram, 4000 iterations, map___ type, map___ 4000: 0.571ms
0.5 cpu, 2048 ram, 4000 iterations, object type, object 4000: 0.295ms
0.5 cpu, 2048 ram, 4000 iterations, array_ type, array_ 4000: 0.489ms
0.5 cpu, 2048 ram, 4000 iterations, map___ type, map___ 4000: 0.531ms
1.0 cpu, 2048 ram, 4000 iterations, object type, object 4000: 0.287ms
1.0 cpu, 2048 ram, 4000 iterations, array_ type, array_ 4000: 0.33ms
1.0 cpu, 2048 ram, 4000 iterations, map___ type, map___ 4000: 0.535ms
2.0 cpu, 2048 ram, 4000 iterations, object type, object 4000: 0.351ms
2.0 cpu, 2048 ram, 4000 iterations, array_ type, array_ 4000: 0.295ms
2.0 cpu, 2048 ram, 4000 iterations, map___ type, map___ 4000: 0.538ms
3.0 cpu, 2048 ram, 4000 iterations, object type, object 4000: 0.3ms
3.0 cpu, 2048 ram, 4000 iterations, array_ type, array_ 4000: 0.316ms
3.0 cpu, 2048 ram, 4000 iterations, map___ type, map___ 4000: 0.578ms
4.0 cpu, 2048 ram, 4000 iterations, object type, object 4000: 0.314ms
4.0 cpu, 2048 ram, 4000 iterations, array_ type, array_ 4000: 0.321ms
4.0 cpu, 2048 ram, 4000 iterations, map___ type, map___ 4000: 0.541ms
0.5 cpu, 4096 ram, 4000 iterations, object type, object 4000: 0.317ms
0.5 cpu, 4096 ram, 4000 iterations, array_ type, array_ 4000: 0.314ms
0.5 cpu, 4096 ram, 4000 iterations, map___ type, map___ 4000: 0.559ms
1.0 cpu, 4096 ram, 4000 iterations, object type, object 4000: 0.325ms
1.0 cpu, 4096 ram, 4000 iterations, array_ type, array_ 4000: 0.302ms
1.0 cpu, 4096 ram, 4000 iterations, map___ type, map___ 4000: 0.509ms
2.0 cpu, 4096 ram, 4000 iterations, object type, object 4000: 0.721ms
2.0 cpu, 4096 ram, 4000 iterations, array_ type, array_ 4000: 0.303ms
2.0 cpu, 4096 ram, 4000 iterations, map___ type, map___ 4000: 0.534ms
3.0 cpu, 4096 ram, 4000 iterations, object type, object 4000: 0.317ms
3.0 cpu, 4096 ram, 4000 iterations, array_ type, array_ 4000: 0.298ms
3.0 cpu, 4096 ram, 4000 iterations, map___ type, map___ 4000: 0.568ms
4.0 cpu, 4096 ram, 4000 iterations, object type, object 4000: 0.329ms
4.0 cpu, 4096 ram, 4000 iterations, array_ type, array_ 4000: 0.319ms
4.0 cpu, 4096 ram, 4000 iterations, map___ type, map___ 4000: 0.547ms
0.5 cpu, 8192 ram, 4000 iterations, object type, object 4000: 0.325ms
0.5 cpu, 8192 ram, 4000 iterations, array_ type, array_ 4000: 0.316ms
0.5 cpu, 8192 ram, 4000 iterations, map___ type, map___ 4000: 0.729ms
1.0 cpu, 8192 ram, 4000 iterations, object type, object 4000: 0.312ms
1.0 cpu, 8192 ram, 4000 iterations, array_ type, array_ 4000: 0.297ms
1.0 cpu, 8192 ram, 4000 iterations, map___ type, map___ 4000: 0.557ms
2.0 cpu, 8192 ram, 4000 iterations, object type, object 4000: 0.318ms
2.0 cpu, 8192 ram, 4000 iterations, array_ type, array_ 4000: 0.307ms
2.0 cpu, 8192 ram, 4000 iterations, map___ type, map___ 4000: 0.525ms
3.0 cpu, 8192 ram, 4000 iterations, object type, object 4000: 0.309ms
3.0 cpu, 8192 ram, 4000 iterations, array_ type, array_ 4000: 0.309ms
3.0 cpu, 8192 ram, 4000 iterations, map___ type, map___ 4000: 0.576ms
4.0 cpu, 8192 ram, 4000 iterations, object type, object 4000: 0.32ms
4.0 cpu, 8192 ram, 4000 iterations, array_ type, array_ 4000: 0.346ms
4.0 cpu, 8192 ram, 4000 iterations, map___ type, map___ 4000: 0.604ms
0.5 cpu, 16384 ram, 4000 iterations, object type, object 4000: 0.311ms
0.5 cpu, 16384 ram, 4000 iterations, array_ type, array_ 4000: 0.308ms
0.5 cpu, 16384 ram, 4000 iterations, map___ type, map___ 4000: 0.552ms
1.0 cpu, 16384 ram, 4000 iterations, object type, object 4000: 0.324ms
1.0 cpu, 16384 ram, 4000 iterations, array_ type, array_ 4000: 0.286ms
1.0 cpu, 16384 ram, 4000 iterations, map___ type, map___ 4000: 0.55ms
2.0 cpu, 16384 ram, 4000 iterations, object type, object 4000: 0.319ms
2.0 cpu, 16384 ram, 4000 iterations, array_ type, array_ 4000: 0.323ms
2.0 cpu, 16384 ram, 4000 iterations, map___ type, map___ 4000: 0.587ms
3.0 cpu, 16384 ram, 4000 iterations, object type, object 4000: 0.314ms
3.0 cpu, 16384 ram, 4000 iterations, array_ type, array_ 4000: 0.33ms
3.0 cpu, 16384 ram, 4000 iterations, map___ type, map___ 4000: 0.535ms
4.0 cpu, 16384 ram, 4000 iterations, object type, object 4000: 0.295ms
4.0 cpu, 16384 ram, 4000 iterations, array_ type, array_ 4000: 0.314ms
4.0 cpu, 16384 ram, 4000 iterations, map___ type, map___ 4000: 0.56ms
0.5 cpu, 128 ram, 5000 iterations, object type, object 5000: 0.418ms
0.5 cpu, 128 ram, 5000 iterations, array_ type, array_ 5000: 0.408ms
0.5 cpu, 128 ram, 5000 iterations, map___ type, map___ 5000: 0.73ms
1.0 cpu, 128 ram, 5000 iterations, object type, object 5000: 0.424ms
1.0 cpu, 128 ram, 5000 iterations, array_ type, array_ 5000: 0.432ms
1.0 cpu, 128 ram, 5000 iterations, map___ type, map___ 5000: 0.763ms
2.0 cpu, 128 ram, 5000 iterations, object type, object 5000: 0.45ms
2.0 cpu, 128 ram, 5000 iterations, array_ type, array_ 5000: 0.43ms
2.0 cpu, 128 ram, 5000 iterations, map___ type, map___ 5000: 0.752ms
3.0 cpu, 128 ram, 5000 iterations, object type, object 5000: 0.47ms
3.0 cpu, 128 ram, 5000 iterations, array_ type, array_ 5000: 0.476ms
3.0 cpu, 128 ram, 5000 iterations, map___ type, map___ 5000: 0.725ms
4.0 cpu, 128 ram, 5000 iterations, object type, object 5000: 0.462ms
4.0 cpu, 128 ram, 5000 iterations, array_ type, array_ 5000: 0.44ms
4.0 cpu, 128 ram, 5000 iterations, map___ type, map___ 5000: 0.749ms
0.5 cpu, 256 ram, 5000 iterations, object type, object 5000: 0.426ms
0.5 cpu, 256 ram, 5000 iterations, array_ type, array_ 5000: 0.452ms
0.5 cpu, 256 ram, 5000 iterations, map___ type, map___ 5000: 0.73ms
1.0 cpu, 256 ram, 5000 iterations, object type, object 5000: 0.482ms
1.0 cpu, 256 ram, 5000 iterations, array_ type, array_ 5000: 0.476ms
1.0 cpu, 256 ram, 5000 iterations, map___ type, map___ 5000: 0.72ms
2.0 cpu, 256 ram, 5000 iterations, object type, object 5000: 0.482ms
2.0 cpu, 256 ram, 5000 iterations, array_ type, array_ 5000: 0.434ms
2.0 cpu, 256 ram, 5000 iterations, map___ type, map___ 5000: 0.765ms
3.0 cpu, 256 ram, 5000 iterations, object type, object 5000: 0.461ms
3.0 cpu, 256 ram, 5000 iterations, array_ type, array_ 5000: 0.414ms
3.0 cpu, 256 ram, 5000 iterations, map___ type, map___ 5000: 0.751ms
4.0 cpu, 256 ram, 5000 iterations, object type, object 5000: 0.462ms
4.0 cpu, 256 ram, 5000 iterations, array_ type, array_ 5000: 0.446ms
4.0 cpu, 256 ram, 5000 iterations, map___ type, map___ 5000: 0.739ms
0.5 cpu, 512 ram, 5000 iterations, object type, object 5000: 0.447ms
0.5 cpu, 512 ram, 5000 iterations, array_ type, array_ 5000: 0.438ms
0.5 cpu, 512 ram, 5000 iterations, map___ type, map___ 5000: 0.768ms
1.0 cpu, 512 ram, 5000 iterations, object type, object 5000: 0.448ms
1.0 cpu, 512 ram, 5000 iterations, array_ type, array_ 5000: 0.447ms
1.0 cpu, 512 ram, 5000 iterations, map___ type, map___ 5000: 0.678ms
2.0 cpu, 512 ram, 5000 iterations, object type, object 5000: 0.45ms
2.0 cpu, 512 ram, 5000 iterations, array_ type, array_ 5000: 0.489ms
2.0 cpu, 512 ram, 5000 iterations, map___ type, map___ 5000: 0.714ms
3.0 cpu, 512 ram, 5000 iterations, object type, object 5000: 0.445ms
3.0 cpu, 512 ram, 5000 iterations, array_ type, array_ 5000: 0.389ms
3.0 cpu, 512 ram, 5000 iterations, map___ type, map___ 5000: 0.751ms
4.0 cpu, 512 ram, 5000 iterations, object type, object 5000: 0.435ms
4.0 cpu, 512 ram, 5000 iterations, array_ type, array_ 5000: 0.452ms
4.0 cpu, 512 ram, 5000 iterations, map___ type, map___ 5000: 0.757ms
0.5 cpu, 1024 ram, 5000 iterations, object type, object 5000: 0.462ms
0.5 cpu, 1024 ram, 5000 iterations, array_ type, array_ 5000: 0.473ms
0.5 cpu, 1024 ram, 5000 iterations, map___ type, map___ 5000: 0.764ms
1.0 cpu, 1024 ram, 5000 iterations, object type, object 5000: 0.435ms
1.0 cpu, 1024 ram, 5000 iterations, array_ type, array_ 5000: 0.412ms
1.0 cpu, 1024 ram, 5000 iterations, map___ type, map___ 5000: 0.8ms
2.0 cpu, 1024 ram, 5000 iterations, object type, object 5000: 0.462ms
2.0 cpu, 1024 ram, 5000 iterations, array_ type, array_ 5000: 0.429ms
2.0 cpu, 1024 ram, 5000 iterations, map___ type, map___ 5000: 0.769ms
3.0 cpu, 1024 ram, 5000 iterations, object type, object 5000: 0.445ms
3.0 cpu, 1024 ram, 5000 iterations, array_ type, array_ 5000: 0.432ms
3.0 cpu, 1024 ram, 5000 iterations, map___ type, map___ 5000: 0.693ms
4.0 cpu, 1024 ram, 5000 iterations, object type, object 5000: 0.442ms
4.0 cpu, 1024 ram, 5000 iterations, array_ type, array_ 5000: 0.432ms
4.0 cpu, 1024 ram, 5000 iterations, map___ type, map___ 5000: 0.838ms
0.5 cpu, 2048 ram, 5000 iterations, object type, object 5000: 0.463ms
0.5 cpu, 2048 ram, 5000 iterations, array_ type, array_ 5000: 0.458ms
0.5 cpu, 2048 ram, 5000 iterations, map___ type, map___ 5000: 0.753ms
1.0 cpu, 2048 ram, 5000 iterations, object type, object 5000: 0.406ms
1.0 cpu, 2048 ram, 5000 iterations, array_ type, array_ 5000: 0.449ms
1.0 cpu, 2048 ram, 5000 iterations, map___ type, map___ 5000: 0.752ms
2.0 cpu, 2048 ram, 5000 iterations, object type, object 5000: 0.459ms
2.0 cpu, 2048 ram, 5000 iterations, array_ type, array_ 5000: 0.483ms
2.0 cpu, 2048 ram, 5000 iterations, map___ type, map___ 5000: 0.69ms
3.0 cpu, 2048 ram, 5000 iterations, object type, object 5000: 0.4ms
3.0 cpu, 2048 ram, 5000 iterations, array_ type, array_ 5000: 0.457ms
3.0 cpu, 2048 ram, 5000 iterations, map___ type, map___ 5000: 0.758ms
4.0 cpu, 2048 ram, 5000 iterations, object type, object 5000: 0.42ms
4.0 cpu, 2048 ram, 5000 iterations, array_ type, array_ 5000: 0.48ms
4.0 cpu, 2048 ram, 5000 iterations, map___ type, map___ 5000: 0.755ms
0.5 cpu, 4096 ram, 5000 iterations, object type, object 5000: 0.441ms
0.5 cpu, 4096 ram, 5000 iterations, array_ type, array_ 5000: 0.46ms
0.5 cpu, 4096 ram, 5000 iterations, map___ type, map___ 5000: 0.778ms
1.0 cpu, 4096 ram, 5000 iterations, object type, object 5000: 0.485ms
1.0 cpu, 4096 ram, 5000 iterations, array_ type, array_ 5000: 0.413ms
1.0 cpu, 4096 ram, 5000 iterations, map___ type, map___ 5000: 0.73ms
2.0 cpu, 4096 ram, 5000 iterations, object type, object 5000: 0.429ms
2.0 cpu, 4096 ram, 5000 iterations, array_ type, array_ 5000: 0.409ms
2.0 cpu, 4096 ram, 5000 iterations, map___ type, map___ 5000: 0.745ms
3.0 cpu, 4096 ram, 5000 iterations, object type, object 5000: 0.462ms
3.0 cpu, 4096 ram, 5000 iterations, array_ type, array_ 5000: 0.401ms
3.0 cpu, 4096 ram, 5000 iterations, map___ type, map___ 5000: 0.741ms
4.0 cpu, 4096 ram, 5000 iterations, object type, object 5000: 0.392ms
4.0 cpu, 4096 ram, 5000 iterations, array_ type, array_ 5000: 0.456ms
4.0 cpu, 4096 ram, 5000 iterations, map___ type, map___ 5000: 0.77ms
0.5 cpu, 8192 ram, 5000 iterations, object type, object 5000: 0.619ms
0.5 cpu, 8192 ram, 5000 iterations, array_ type, array_ 5000: 0.597ms
0.5 cpu, 8192 ram, 5000 iterations, map___ type, map___ 5000: 0.748ms
1.0 cpu, 8192 ram, 5000 iterations, object type, object 5000: 0.506ms
1.0 cpu, 8192 ram, 5000 iterations, array_ type, array_ 5000: 0.421ms
1.0 cpu, 8192 ram, 5000 iterations, map___ type, map___ 5000: 0.769ms
2.0 cpu, 8192 ram, 5000 iterations, object type, object 5000: 0.473ms
2.0 cpu, 8192 ram, 5000 iterations, array_ type, array_ 5000: 0.604ms
2.0 cpu, 8192 ram, 5000 iterations, map___ type, map___ 5000: 0.733ms
3.0 cpu, 8192 ram, 5000 iterations, object type, object 5000: 0.453ms
3.0 cpu, 8192 ram, 5000 iterations, array_ type, array_ 5000: 0.424ms
3.0 cpu, 8192 ram, 5000 iterations, map___ type, map___ 5000: 0.683ms
4.0 cpu, 8192 ram, 5000 iterations, object type, object 5000: 0.459ms
4.0 cpu, 8192 ram, 5000 iterations, array_ type, array_ 5000: 0.442ms
4.0 cpu, 8192 ram, 5000 iterations, map___ type, map___ 5000: 0.731ms
0.5 cpu, 16384 ram, 5000 iterations, object type, object 5000: 0.467ms
0.5 cpu, 16384 ram, 5000 iterations, array_ type, array_ 5000: 0.464ms
0.5 cpu, 16384 ram, 5000 iterations, map___ type, map___ 5000: 0.913ms
1.0 cpu, 16384 ram, 5000 iterations, object type, object 5000: 0.435ms
1.0 cpu, 16384 ram, 5000 iterations, array_ type, array_ 5000: 0.482ms
1.0 cpu, 16384 ram, 5000 iterations, map___ type, map___ 5000: 0.755ms
2.0 cpu, 16384 ram, 5000 iterations, object type, object 5000: 0.47ms
2.0 cpu, 16384 ram, 5000 iterations, array_ type, array_ 5000: 0.453ms
2.0 cpu, 16384 ram, 5000 iterations, map___ type, map___ 5000: 0.745ms
3.0 cpu, 16384 ram, 5000 iterations, object type, object 5000: 0.426ms
3.0 cpu, 16384 ram, 5000 iterations, array_ type, array_ 5000: 0.422ms
3.0 cpu, 16384 ram, 5000 iterations, map___ type, map___ 5000: 0.753ms
4.0 cpu, 16384 ram, 5000 iterations, object type, object 5000: 0.465ms
4.0 cpu, 16384 ram, 5000 iterations, array_ type, array_ 5000: 0.447ms
4.0 cpu, 16384 ram, 5000 iterations, map___ type, map___ 5000: 0.767ms
0.5 cpu, 128 ram, 6000 iterations, object type, object 6000: 0.491ms
0.5 cpu, 128 ram, 6000 iterations, array_ type, array_ 6000: 0.515ms
0.5 cpu, 128 ram, 6000 iterations, map___ type, map___ 6000: 1.439ms
1.0 cpu, 128 ram, 6000 iterations, object type, object 6000: 0.497ms
1.0 cpu, 128 ram, 6000 iterations, array_ type, array_ 6000: 0.542ms
1.0 cpu, 128 ram, 6000 iterations, map___ type, map___ 6000: 1.292ms
2.0 cpu, 128 ram, 6000 iterations, object type, object 6000: 0.523ms
2.0 cpu, 128 ram, 6000 iterations, array_ type, array_ 6000: 0.526ms
2.0 cpu, 128 ram, 6000 iterations, map___ type, map___ 6000: 1.308ms
3.0 cpu, 128 ram, 6000 iterations, object type, object 6000: 0.523ms
3.0 cpu, 128 ram, 6000 iterations, array_ type, array_ 6000: 0.489ms
3.0 cpu, 128 ram, 6000 iterations, map___ type, map___ 6000: 1.159ms
4.0 cpu, 128 ram, 6000 iterations, object type, object 6000: 0.516ms
4.0 cpu, 128 ram, 6000 iterations, array_ type, array_ 6000: 0.502ms
4.0 cpu, 128 ram, 6000 iterations, map___ type, map___ 6000: 1.334ms
0.5 cpu, 256 ram, 6000 iterations, object type, object 6000: 0.539ms
0.5 cpu, 256 ram, 6000 iterations, array_ type, array_ 6000: 0.548ms
0.5 cpu, 256 ram, 6000 iterations, map___ type, map___ 6000: 1.184ms
1.0 cpu, 256 ram, 6000 iterations, object type, object 6000: 0.517ms
1.0 cpu, 256 ram, 6000 iterations, array_ type, array_ 6000: 0.548ms
1.0 cpu, 256 ram, 6000 iterations, map___ type, map___ 6000: 1.397ms
2.0 cpu, 256 ram, 6000 iterations, object type, object 6000: 0.536ms
2.0 cpu, 256 ram, 6000 iterations, array_ type, array_ 6000: 0.48ms
2.0 cpu, 256 ram, 6000 iterations, map___ type, map___ 6000: 1.596ms
3.0 cpu, 256 ram, 6000 iterations, object type, object 6000: 0.51ms
3.0 cpu, 256 ram, 6000 iterations, array_ type, array_ 6000: 0.529ms
3.0 cpu, 256 ram, 6000 iterations, map___ type, map___ 6000: 1.337ms
4.0 cpu, 256 ram, 6000 iterations, object type, object 6000: 0.558ms
4.0 cpu, 256 ram, 6000 iterations, array_ type, array_ 6000: 0.525ms
4.0 cpu, 256 ram, 6000 iterations, map___ type, map___ 6000: 1.348ms
0.5 cpu, 512 ram, 6000 iterations, object type, object 6000: 0.502ms
0.5 cpu, 512 ram, 6000 iterations, array_ type, array_ 6000: 0.477ms
0.5 cpu, 512 ram, 6000 iterations, map___ type, map___ 6000: 1.339ms
1.0 cpu, 512 ram, 6000 iterations, object type, object 6000: 0.527ms
1.0 cpu, 512 ram, 6000 iterations, array_ type, array_ 6000: 0.508ms
1.0 cpu, 512 ram, 6000 iterations, map___ type, map___ 6000: 1.647ms
2.0 cpu, 512 ram, 6000 iterations, object type, object 6000: 0.536ms
2.0 cpu, 512 ram, 6000 iterations, array_ type, array_ 6000: 0.544ms
2.0 cpu, 512 ram, 6000 iterations, map___ type, map___ 6000: 1.361ms
3.0 cpu, 512 ram, 6000 iterations, object type, object 6000: 0.518ms
3.0 cpu, 512 ram, 6000 iterations, array_ type, array_ 6000: 0.49ms
3.0 cpu, 512 ram, 6000 iterations, map___ type, map___ 6000: 1.806ms
4.0 cpu, 512 ram, 6000 iterations, object type, object 6000: 0.528ms
4.0 cpu, 512 ram, 6000 iterations, array_ type, array_ 6000: 0.529ms
4.0 cpu, 512 ram, 6000 iterations, map___ type, map___ 6000: 1.475ms
0.5 cpu, 1024 ram, 6000 iterations, object type, object 6000: 0.52ms
0.5 cpu, 1024 ram, 6000 iterations, array_ type, array_ 6000: 0.49ms
0.5 cpu, 1024 ram, 6000 iterations, map___ type, map___ 6000: 1.184ms
1.0 cpu, 1024 ram, 6000 iterations, object type, object 6000: 0.512ms
1.0 cpu, 1024 ram, 6000 iterations, array_ type, array_ 6000: 0.538ms
1.0 cpu, 1024 ram, 6000 iterations, map___ type, map___ 6000: 1.21ms
2.0 cpu, 1024 ram, 6000 iterations, object type, object 6000: 0.482ms
2.0 cpu, 1024 ram, 6000 iterations, array_ type, array_ 6000: 0.462ms
2.0 cpu, 1024 ram, 6000 iterations, map___ type, map___ 6000: 1.273ms
3.0 cpu, 1024 ram, 6000 iterations, object type, object 6000: 0.498ms
3.0 cpu, 1024 ram, 6000 iterations, array_ type, array_ 6000: 0.52ms
3.0 cpu, 1024 ram, 6000 iterations, map___ type, map___ 6000: 1.25ms
4.0 cpu, 1024 ram, 6000 iterations, object type, object 6000: 0.565ms
4.0 cpu, 1024 ram, 6000 iterations, array_ type, array_ 6000: 0.505ms
4.0 cpu, 1024 ram, 6000 iterations, map___ type, map___ 6000: 1.43ms
0.5 cpu, 2048 ram, 6000 iterations, object type, object 6000: 0.518ms
0.5 cpu, 2048 ram, 6000 iterations, array_ type, array_ 6000: 0.508ms
0.5 cpu, 2048 ram, 6000 iterations, map___ type, map___ 6000: 1.308ms
1.0 cpu, 2048 ram, 6000 iterations, object type, object 6000: 0.553ms
1.0 cpu, 2048 ram, 6000 iterations, array_ type, array_ 6000: 0.509ms
1.0 cpu, 2048 ram, 6000 iterations, map___ type, map___ 6000: 1.266ms
2.0 cpu, 2048 ram, 6000 iterations, object type, object 6000: 0.538ms
2.0 cpu, 2048 ram, 6000 iterations, array_ type, array_ 6000: 0.558ms
2.0 cpu, 2048 ram, 6000 iterations, map___ type, map___ 6000: 1.349ms
3.0 cpu, 2048 ram, 6000 iterations, object type, object 6000: 0.504ms
3.0 cpu, 2048 ram, 6000 iterations, array_ type, array_ 6000: 0.501ms
3.0 cpu, 2048 ram, 6000 iterations, map___ type, map___ 6000: 1.361ms
4.0 cpu, 2048 ram, 6000 iterations, object type, object 6000: 0.51ms
4.0 cpu, 2048 ram, 6000 iterations, array_ type, array_ 6000: 0.49ms
4.0 cpu, 2048 ram, 6000 iterations, map___ type, map___ 6000: 1.277ms
0.5 cpu, 4096 ram, 6000 iterations, object type, object 6000: 0.495ms
0.5 cpu, 4096 ram, 6000 iterations, array_ type, array_ 6000: 0.496ms
0.5 cpu, 4096 ram, 6000 iterations, map___ type, map___ 6000: 1.265ms
1.0 cpu, 4096 ram, 6000 iterations, object type, object 6000: 0.519ms
1.0 cpu, 4096 ram, 6000 iterations, array_ type, array_ 6000: 0.507ms
1.0 cpu, 4096 ram, 6000 iterations, map___ type, map___ 6000: 1.322ms
2.0 cpu, 4096 ram, 6000 iterations, object type, object 6000: 0.5ms
2.0 cpu, 4096 ram, 6000 iterations, array_ type, array_ 6000: 0.531ms
2.0 cpu, 4096 ram, 6000 iterations, map___ type, map___ 6000: 1.244ms
3.0 cpu, 4096 ram, 6000 iterations, object type, object 6000: 0.508ms
3.0 cpu, 4096 ram, 6000 iterations, array_ type, array_ 6000: 0.571ms
3.0 cpu, 4096 ram, 6000 iterations, map___ type, map___ 6000: 1.54ms
4.0 cpu, 4096 ram, 6000 iterations, object type, object 6000: 0.532ms
4.0 cpu, 4096 ram, 6000 iterations, array_ type, array_ 6000: 0.519ms
4.0 cpu, 4096 ram, 6000 iterations, map___ type, map___ 6000: 1.361ms
0.5 cpu, 8192 ram, 6000 iterations, object type, object 6000: 0.534ms
0.5 cpu, 8192 ram, 6000 iterations, array_ type, array_ 6000: 0.498ms
0.5 cpu, 8192 ram, 6000 iterations, map___ type, map___ 6000: 3.143ms
1.0 cpu, 8192 ram, 6000 iterations, object type, object 6000: 0.556ms
1.0 cpu, 8192 ram, 6000 iterations, array_ type, array_ 6000: 0.532ms
1.0 cpu, 8192 ram, 6000 iterations, map___ type, map___ 6000: 1.319ms
2.0 cpu, 8192 ram, 6000 iterations, object type, object 6000: 0.499ms
2.0 cpu, 8192 ram, 6000 iterations, array_ type, array_ 6000: 0.505ms
2.0 cpu, 8192 ram, 6000 iterations, map___ type, map___ 6000: 1.364ms
3.0 cpu, 8192 ram, 6000 iterations, object type, object 6000: 0.51ms
3.0 cpu, 8192 ram, 6000 iterations, array_ type, array_ 6000: 0.65ms
3.0 cpu, 8192 ram, 6000 iterations, map___ type, map___ 6000: 1.493ms
4.0 cpu, 8192 ram, 6000 iterations, object type, object 6000: 0.671ms
4.0 cpu, 8192 ram, 6000 iterations, array_ type, array_ 6000: 0.494ms
4.0 cpu, 8192 ram, 6000 iterations, map___ type, map___ 6000: 1.249ms
0.5 cpu, 16384 ram, 6000 iterations, object type, object 6000: 0.559ms
0.5 cpu, 16384 ram, 6000 iterations, array_ type, array_ 6000: 0.494ms
0.5 cpu, 16384 ram, 6000 iterations, map___ type, map___ 6000: 1.283ms
1.0 cpu, 16384 ram, 6000 iterations, object type, object 6000: 0.498ms
1.0 cpu, 16384 ram, 6000 iterations, array_ type, array_ 6000: 0.544ms
1.0 cpu, 16384 ram, 6000 iterations, map___ type, map___ 6000: 1.548ms
2.0 cpu, 16384 ram, 6000 iterations, object type, object 6000: 0.548ms
2.0 cpu, 16384 ram, 6000 iterations, array_ type, array_ 6000: 0.514ms
2.0 cpu, 16384 ram, 6000 iterations, map___ type, map___ 6000: 1.279ms
3.0 cpu, 16384 ram, 6000 iterations, object type, object 6000: 0.502ms
3.0 cpu, 16384 ram, 6000 iterations, array_ type, array_ 6000: 0.55ms
3.0 cpu, 16384 ram, 6000 iterations, map___ type, map___ 6000: 1.467ms
4.0 cpu, 16384 ram, 6000 iterations, object type, object 6000: 0.567ms
4.0 cpu, 16384 ram, 6000 iterations, array_ type, array_ 6000: 0.509ms
4.0 cpu, 16384 ram, 6000 iterations, map___ type, map___ 6000: 1.618ms
0.5 cpu, 128 ram, 7000 iterations, object type, object 7000: 1.359ms
0.5 cpu, 128 ram, 7000 iterations, array_ type, array_ 7000: 1.481ms
0.5 cpu, 128 ram, 7000 iterations, map___ type, map___ 7000: 1.488ms
1.0 cpu, 128 ram, 7000 iterations, object type, object 7000: 1.126ms
1.0 cpu, 128 ram, 7000 iterations, array_ type, array_ 7000: 1.152ms
1.0 cpu, 128 ram, 7000 iterations, map___ type, map___ 7000: 1.87ms
2.0 cpu, 128 ram, 7000 iterations, object type, object 7000: 1.109ms
2.0 cpu, 128 ram, 7000 iterations, array_ type, array_ 7000: 1.224ms
2.0 cpu, 128 ram, 7000 iterations, map___ type, map___ 7000: 1.52ms
3.0 cpu, 128 ram, 7000 iterations, object type, object 7000: 1.125ms
3.0 cpu, 128 ram, 7000 iterations, array_ type, array_ 7000: 1.085ms
3.0 cpu, 128 ram, 7000 iterations, map___ type, map___ 7000: 3.956ms
4.0 cpu, 128 ram, 7000 iterations, object type, object 7000: 1.064ms
4.0 cpu, 128 ram, 7000 iterations, array_ type, array_ 7000: 1.807ms
4.0 cpu, 128 ram, 7000 iterations, map___ type, map___ 7000: 1.417ms
0.5 cpu, 256 ram, 7000 iterations, object type, object 7000: 1.112ms
0.5 cpu, 256 ram, 7000 iterations, array_ type, array_ 7000: 1.119ms
0.5 cpu, 256 ram, 7000 iterations, map___ type, map___ 7000: 1.428ms
1.0 cpu, 256 ram, 7000 iterations, object type, object 7000: 1.367ms
1.0 cpu, 256 ram, 7000 iterations, array_ type, array_ 7000: 1.038ms
1.0 cpu, 256 ram, 7000 iterations, map___ type, map___ 7000: 1.486ms
2.0 cpu, 256 ram, 7000 iterations, object type, object 7000: 1.228ms
2.0 cpu, 256 ram, 7000 iterations, array_ type, array_ 7000: 2.502ms
2.0 cpu, 256 ram, 7000 iterations, map___ type, map___ 7000: 1.485ms
3.0 cpu, 256 ram, 7000 iterations, object type, object 7000: 1.069ms
3.0 cpu, 256 ram, 7000 iterations, array_ type, array_ 7000: 1.084ms
3.0 cpu, 256 ram, 7000 iterations, map___ type, map___ 7000: 1.421ms
4.0 cpu, 256 ram, 7000 iterations, object type, object 7000: 1.124ms
4.0 cpu, 256 ram, 7000 iterations, array_ type, array_ 7000: 1.154ms
4.0 cpu, 256 ram, 7000 iterations, map___ type, map___ 7000: 1.589ms
0.5 cpu, 512 ram, 7000 iterations, object type, object 7000: 1.213ms
0.5 cpu, 512 ram, 7000 iterations, array_ type, array_ 7000: 1.099ms
0.5 cpu, 512 ram, 7000 iterations, map___ type, map___ 7000: 1.394ms
1.0 cpu, 512 ram, 7000 iterations, object type, object 7000: 1.223ms
1.0 cpu, 512 ram, 7000 iterations, array_ type, array_ 7000: 1.066ms
1.0 cpu, 512 ram, 7000 iterations, map___ type, map___ 7000: 1.489ms
2.0 cpu, 512 ram, 7000 iterations, object type, object 7000: 1.222ms
2.0 cpu, 512 ram, 7000 iterations, array_ type, array_ 7000: 1.123ms
2.0 cpu, 512 ram, 7000 iterations, map___ type, map___ 7000: 1.38ms
3.0 cpu, 512 ram, 7000 iterations, object type, object 7000: 1.338ms
3.0 cpu, 512 ram, 7000 iterations, array_ type, array_ 7000: 1.316ms
3.0 cpu, 512 ram, 7000 iterations, map___ type, map___ 7000: 1.361ms
4.0 cpu, 512 ram, 7000 iterations, object type, object 7000: 1.06ms
4.0 cpu, 512 ram, 7000 iterations, array_ type, array_ 7000: 1.109ms
4.0 cpu, 512 ram, 7000 iterations, map___ type, map___ 7000: 1.539ms
0.5 cpu, 1024 ram, 7000 iterations, object type, object 7000: 1.127ms
0.5 cpu, 1024 ram, 7000 iterations, array_ type, array_ 7000: 1.161ms
0.5 cpu, 1024 ram, 7000 iterations, map___ type, map___ 7000: 1.868ms
1.0 cpu, 1024 ram, 7000 iterations, object type, object 7000: 1.22ms
1.0 cpu, 1024 ram, 7000 iterations, array_ type, array_ 7000: 1.022ms
1.0 cpu, 1024 ram, 7000 iterations, map___ type, map___ 7000: 1.344ms
2.0 cpu, 1024 ram, 7000 iterations, object type, object 7000: 1.116ms
2.0 cpu, 1024 ram, 7000 iterations, array_ type, array_ 7000: 1.043ms
2.0 cpu, 1024 ram, 7000 iterations, map___ type, map___ 7000: 1.455ms
3.0 cpu, 1024 ram, 7000 iterations, object type, object 7000: 1.059ms
3.0 cpu, 1024 ram, 7000 iterations, array_ type, array_ 7000: 1.047ms
3.0 cpu, 1024 ram, 7000 iterations, map___ type, map___ 7000: 1.325ms
4.0 cpu, 1024 ram, 7000 iterations, object type, object 7000: 1.184ms
4.0 cpu, 1024 ram, 7000 iterations, array_ type, array_ 7000: 1.055ms
4.0 cpu, 1024 ram, 7000 iterations, map___ type, map___ 7000: 1.388ms
0.5 cpu, 2048 ram, 7000 iterations, object type, object 7000: 1.102ms
0.5 cpu, 2048 ram, 7000 iterations, array_ type, array_ 7000: 1.171ms
0.5 cpu, 2048 ram, 7000 iterations, map___ type, map___ 7000: 1.434ms
1.0 cpu, 2048 ram, 7000 iterations, object type, object 7000: 1.057ms
1.0 cpu, 2048 ram, 7000 iterations, array_ type, array_ 7000: 1.099ms
1.0 cpu, 2048 ram, 7000 iterations, map___ type, map___ 7000: 1.426ms
2.0 cpu, 2048 ram, 7000 iterations, object type, object 7000: 1.092ms
2.0 cpu, 2048 ram, 7000 iterations, array_ type, array_ 7000: 1.174ms
2.0 cpu, 2048 ram, 7000 iterations, map___ type, map___ 7000: 1.438ms
3.0 cpu, 2048 ram, 7000 iterations, object type, object 7000: 1.235ms
3.0 cpu, 2048 ram, 7000 iterations, array_ type, array_ 7000: 1.112ms
3.0 cpu, 2048 ram, 7000 iterations, map___ type, map___ 7000: 1.505ms
4.0 cpu, 2048 ram, 7000 iterations, object type, object 7000: 1.347ms
4.0 cpu, 2048 ram, 7000 iterations, array_ type, array_ 7000: 1.096ms
4.0 cpu, 2048 ram, 7000 iterations, map___ type, map___ 7000: 1.973ms
0.5 cpu, 4096 ram, 7000 iterations, object type, object 7000: 1.289ms
0.5 cpu, 4096 ram, 7000 iterations, array_ type, array_ 7000: 1.1ms
0.5 cpu, 4096 ram, 7000 iterations, map___ type, map___ 7000: 1.42ms
1.0 cpu, 4096 ram, 7000 iterations, object type, object 7000: 1.291ms
1.0 cpu, 4096 ram, 7000 iterations, array_ type, array_ 7000: 1.169ms
1.0 cpu, 4096 ram, 7000 iterations, map___ type, map___ 7000: 1.573ms
2.0 cpu, 4096 ram, 7000 iterations, object type, object 7000: 1.172ms
2.0 cpu, 4096 ram, 7000 iterations, array_ type, array_ 7000: 1.201ms
2.0 cpu, 4096 ram, 7000 iterations, map___ type, map___ 7000: 1.452ms
3.0 cpu, 4096 ram, 7000 iterations, object type, object 7000: 1.106ms
3.0 cpu, 4096 ram, 7000 iterations, array_ type, array_ 7000: 2.91ms
3.0 cpu, 4096 ram, 7000 iterations, map___ type, map___ 7000: 1.474ms
4.0 cpu, 4096 ram, 7000 iterations, object type, object 7000: 1.069ms
4.0 cpu, 4096 ram, 7000 iterations, array_ type, array_ 7000: 1.232ms
4.0 cpu, 4096 ram, 7000 iterations, map___ type, map___ 7000: 1.539ms
0.5 cpu, 8192 ram, 7000 iterations, object type, object 7000: 1.089ms
0.5 cpu, 8192 ram, 7000 iterations, array_ type, array_ 7000: 1.112ms
0.5 cpu, 8192 ram, 7000 iterations, map___ type, map___ 7000: 1.501ms
1.0 cpu, 8192 ram, 7000 iterations, object type, object 7000: 1.172ms
1.0 cpu, 8192 ram, 7000 iterations, array_ type, array_ 7000: 1.1ms
1.0 cpu, 8192 ram, 7000 iterations, map___ type, map___ 7000: 1.548ms
2.0 cpu, 8192 ram, 7000 iterations, object type, object 7000: 1.169ms
2.0 cpu, 8192 ram, 7000 iterations, array_ type, array_ 7000: 1.114ms
2.0 cpu, 8192 ram, 7000 iterations, map___ type, map___ 7000: 1.437ms
3.0 cpu, 8192 ram, 7000 iterations, object type, object 7000: 1.176ms
3.0 cpu, 8192 ram, 7000 iterations, array_ type, array_ 7000: 1.089ms
3.0 cpu, 8192 ram, 7000 iterations, map___ type, map___ 7000: 1.677ms
4.0 cpu, 8192 ram, 7000 iterations, object type, object 7000: 1.04ms
4.0 cpu, 8192 ram, 7000 iterations, array_ type, array_ 7000: 1.182ms
4.0 cpu, 8192 ram, 7000 iterations, map___ type, map___ 7000: 1.454ms
0.5 cpu, 16384 ram, 7000 iterations, object type, object 7000: 1.105ms
0.5 cpu, 16384 ram, 7000 iterations, array_ type, array_ 7000: 1.274ms
0.5 cpu, 16384 ram, 7000 iterations, map___ type, map___ 7000: 1.46ms
1.0 cpu, 16384 ram, 7000 iterations, object type, object 7000: 1.108ms
1.0 cpu, 16384 ram, 7000 iterations, array_ type, array_ 7000: 1.299ms
1.0 cpu, 16384 ram, 7000 iterations, map___ type, map___ 7000: 1.638ms
2.0 cpu, 16384 ram, 7000 iterations, object type, object 7000: 1.168ms
2.0 cpu, 16384 ram, 7000 iterations, array_ type, array_ 7000: 1.028ms
2.0 cpu, 16384 ram, 7000 iterations, map___ type, map___ 7000: 1.461ms
3.0 cpu, 16384 ram, 7000 iterations, object type, object 7000: 1.187ms
3.0 cpu, 16384 ram, 7000 iterations, array_ type, array_ 7000: 1.122ms
3.0 cpu, 16384 ram, 7000 iterations, map___ type, map___ 7000: 1.526ms
4.0 cpu, 16384 ram, 7000 iterations, object type, object 7000: 1.25ms
4.0 cpu, 16384 ram, 7000 iterations, array_ type, array_ 7000: 1.075ms
4.0 cpu, 16384 ram, 7000 iterations, map___ type, map___ 7000: 1.441ms
0.5 cpu, 128 ram, 8000 iterations, object type, object 8000: 1.418ms
0.5 cpu, 128 ram, 8000 iterations, array_ type, array_ 8000: 1.31ms
0.5 cpu, 128 ram, 8000 iterations, map___ type, map___ 8000: 1.536ms
1.0 cpu, 128 ram, 8000 iterations, object type, object 8000: 1.236ms
1.0 cpu, 128 ram, 8000 iterations, array_ type, array_ 8000: 1.274ms
1.0 cpu, 128 ram, 8000 iterations, map___ type, map___ 8000: 1.645ms
2.0 cpu, 128 ram, 8000 iterations, object type, object 8000: 1.137ms
2.0 cpu, 128 ram, 8000 iterations, array_ type, array_ 8000: 1.383ms
2.0 cpu, 128 ram, 8000 iterations, map___ type, map___ 8000: 2.063ms
3.0 cpu, 128 ram, 8000 iterations, object type, object 8000: 1.542ms
3.0 cpu, 128 ram, 8000 iterations, array_ type, array_ 8000: 1.292ms
3.0 cpu, 128 ram, 8000 iterations, map___ type, map___ 8000: 1.546ms
4.0 cpu, 128 ram, 8000 iterations, object type, object 8000: 1.173ms
4.0 cpu, 128 ram, 8000 iterations, array_ type, array_ 8000: 1.381ms
4.0 cpu, 128 ram, 8000 iterations, map___ type, map___ 8000: 1.509ms
0.5 cpu, 256 ram, 8000 iterations, object type, object 8000: 1.194ms
0.5 cpu, 256 ram, 8000 iterations, array_ type, array_ 8000: 1.309ms
0.5 cpu, 256 ram, 8000 iterations, map___ type, map___ 8000: 1.45ms
1.0 cpu, 256 ram, 8000 iterations, object type, object 8000: 1.269ms
1.0 cpu, 256 ram, 8000 iterations, array_ type, array_ 8000: 1.23ms
1.0 cpu, 256 ram, 8000 iterations, map___ type, map___ 8000: 1.477ms
2.0 cpu, 256 ram, 8000 iterations, object type, object 8000: 1.247ms
2.0 cpu, 256 ram, 8000 iterations, array_ type, array_ 8000: 1.197ms
2.0 cpu, 256 ram, 8000 iterations, map___ type, map___ 8000: 1.594ms
3.0 cpu, 256 ram, 8000 iterations, object type, object 8000: 1.191ms
3.0 cpu, 256 ram, 8000 iterations, array_ type, array_ 8000: 1.178ms
3.0 cpu, 256 ram, 8000 iterations, map___ type, map___ 8000: 1.635ms
4.0 cpu, 256 ram, 8000 iterations, object type, object 8000: 1.317ms
4.0 cpu, 256 ram, 8000 iterations, array_ type, array_ 8000: 1.216ms
4.0 cpu, 256 ram, 8000 iterations, map___ type, map___ 8000: 1.594ms
0.5 cpu, 512 ram, 8000 iterations, object type, object 8000: 1.248ms
0.5 cpu, 512 ram, 8000 iterations, array_ type, array_ 8000: 1.253ms
0.5 cpu, 512 ram, 8000 iterations, map___ type, map___ 8000: 1.74ms
1.0 cpu, 512 ram, 8000 iterations, object type, object 8000: 1.155ms
1.0 cpu, 512 ram, 8000 iterations, array_ type, array_ 8000: 1.16ms
1.0 cpu, 512 ram, 8000 iterations, map___ type, map___ 8000: 1.635ms
2.0 cpu, 512 ram, 8000 iterations, object type, object 8000: 1.521ms
2.0 cpu, 512 ram, 8000 iterations, array_ type, array_ 8000: 1.365ms
2.0 cpu, 512 ram, 8000 iterations, map___ type, map___ 8000: 2.065ms
3.0 cpu, 512 ram, 8000 iterations, object type, object 8000: 1.176ms
3.0 cpu, 512 ram, 8000 iterations, array_ type, array_ 8000: 1.293ms
3.0 cpu, 512 ram, 8000 iterations, map___ type, map___ 8000: 1.584ms
4.0 cpu, 512 ram, 8000 iterations, object type, object 8000: 1.322ms
4.0 cpu, 512 ram, 8000 iterations, array_ type, array_ 8000: 1.827ms
4.0 cpu, 512 ram, 8000 iterations, map___ type, map___ 8000: 1.693ms
0.5 cpu, 1024 ram, 8000 iterations, object type, object 8000: 1.256ms
0.5 cpu, 1024 ram, 8000 iterations, array_ type, array_ 8000: 1.186ms
0.5 cpu, 1024 ram, 8000 iterations, map___ type, map___ 8000: 1.51ms
1.0 cpu, 1024 ram, 8000 iterations, object type, object 8000: 1.45ms
1.0 cpu, 1024 ram, 8000 iterations, array_ type, array_ 8000: 1.229ms
1.0 cpu, 1024 ram, 8000 iterations, map___ type, map___ 8000: 1.605ms
2.0 cpu, 1024 ram, 8000 iterations, object type, object 8000: 1.168ms
2.0 cpu, 1024 ram, 8000 iterations, array_ type, array_ 8000: 1.4ms
2.0 cpu, 1024 ram, 8000 iterations, map___ type, map___ 8000: 1.56ms
3.0 cpu, 1024 ram, 8000 iterations, object type, object 8000: 1.155ms
3.0 cpu, 1024 ram, 8000 iterations, array_ type, array_ 8000: 1.375ms
3.0 cpu, 1024 ram, 8000 iterations, map___ type, map___ 8000: 1.678ms
4.0 cpu, 1024 ram, 8000 iterations, object type, object 8000: 1.182ms
4.0 cpu, 1024 ram, 8000 iterations, array_ type, array_ 8000: 1.34ms
4.0 cpu, 1024 ram, 8000 iterations, map___ type, map___ 8000: 1.752ms
0.5 cpu, 2048 ram, 8000 iterations, object type, object 8000: 1.615ms
0.5 cpu, 2048 ram, 8000 iterations, array_ type, array_ 8000: 1.236ms
0.5 cpu, 2048 ram, 8000 iterations, map___ type, map___ 8000: 1.568ms
1.0 cpu, 2048 ram, 8000 iterations, object type, object 8000: 1.364ms
1.0 cpu, 2048 ram, 8000 iterations, array_ type, array_ 8000: 1.25ms
1.0 cpu, 2048 ram, 8000 iterations, map___ type, map___ 8000: 1.632ms
2.0 cpu, 2048 ram, 8000 iterations, object type, object 8000: 1.435ms
2.0 cpu, 2048 ram, 8000 iterations, array_ type, array_ 8000: 1.234ms
2.0 cpu, 2048 ram, 8000 iterations, map___ type, map___ 8000: 1.656ms
3.0 cpu, 2048 ram, 8000 iterations, object type, object 8000: 1.169ms
3.0 cpu, 2048 ram, 8000 iterations, array_ type, array_ 8000: 1.176ms
3.0 cpu, 2048 ram, 8000 iterations, map___ type, map___ 8000: 1.47ms
4.0 cpu, 2048 ram, 8000 iterations, object type, object 8000: 1.415ms
4.0 cpu, 2048 ram, 8000 iterations, array_ type, array_ 8000: 1.206ms
4.0 cpu, 2048 ram, 8000 iterations, map___ type, map___ 8000: 1.755ms
0.5 cpu, 4096 ram, 8000 iterations, object type, object 8000: 1.473ms
0.5 cpu, 4096 ram, 8000 iterations, array_ type, array_ 8000: 1.409ms
0.5 cpu, 4096 ram, 8000 iterations, map___ type, map___ 8000: 1.674ms
1.0 cpu, 4096 ram, 8000 iterations, object type, object 8000: 1.209ms
1.0 cpu, 4096 ram, 8000 iterations, array_ type, array_ 8000: 1.334ms
1.0 cpu, 4096 ram, 8000 iterations, map___ type, map___ 8000: 1.674ms
2.0 cpu, 4096 ram, 8000 iterations, object type, object 8000: 1.277ms
2.0 cpu, 4096 ram, 8000 iterations, array_ type, array_ 8000: 1.593ms
2.0 cpu, 4096 ram, 8000 iterations, map___ type, map___ 8000: 1.699ms
3.0 cpu, 4096 ram, 8000 iterations, object type, object 8000: 1.127ms
3.0 cpu, 4096 ram, 8000 iterations, array_ type, array_ 8000: 1.602ms
3.0 cpu, 4096 ram, 8000 iterations, map___ type, map___ 8000: 1.831ms
4.0 cpu, 4096 ram, 8000 iterations, object type, object 8000: 1.261ms
4.0 cpu, 4096 ram, 8000 iterations, array_ type, array_ 8000: 1.357ms
4.0 cpu, 4096 ram, 8000 iterations, map___ type, map___ 8000: 1.562ms
0.5 cpu, 8192 ram, 8000 iterations, object type, object 8000: 1.236ms
0.5 cpu, 8192 ram, 8000 iterations, array_ type, array_ 8000: 1.192ms
0.5 cpu, 8192 ram, 8000 iterations, map___ type, map___ 8000: 1.541ms
1.0 cpu, 8192 ram, 8000 iterations, object type, object 8000: 1.192ms
1.0 cpu, 8192 ram, 8000 iterations, array_ type, array_ 8000: 1.141ms
1.0 cpu, 8192 ram, 8000 iterations, map___ type, map___ 8000: 2.76ms
2.0 cpu, 8192 ram, 8000 iterations, object type, object 8000: 1.434ms
2.0 cpu, 8192 ram, 8000 iterations, array_ type, array_ 8000: 1.209ms
2.0 cpu, 8192 ram, 8000 iterations, map___ type, map___ 8000: 2.98ms
3.0 cpu, 8192 ram, 8000 iterations, object type, object 8000: 1.172ms
3.0 cpu, 8192 ram, 8000 iterations, array_ type, array_ 8000: 1.166ms
3.0 cpu, 8192 ram, 8000 iterations, map___ type, map___ 8000: 1.705ms
4.0 cpu, 8192 ram, 8000 iterations, object type, object 8000: 1.635ms
4.0 cpu, 8192 ram, 8000 iterations, array_ type, array_ 8000: 1.191ms
4.0 cpu, 8192 ram, 8000 iterations, map___ type, map___ 8000: 1.832ms
0.5 cpu, 16384 ram, 8000 iterations, object type, object 8000: 1.31ms
0.5 cpu, 16384 ram, 8000 iterations, array_ type, array_ 8000: 1.212ms
0.5 cpu, 16384 ram, 8000 iterations, map___ type, map___ 8000: 1.551ms
1.0 cpu, 16384 ram, 8000 iterations, object type, object 8000: 1.216ms
1.0 cpu, 16384 ram, 8000 iterations, array_ type, array_ 8000: 1.365ms
1.0 cpu, 16384 ram, 8000 iterations, map___ type, map___ 8000: 1.621ms
2.0 cpu, 16384 ram, 8000 iterations, object type, object 8000: 1.262ms
2.0 cpu, 16384 ram, 8000 iterations, array_ type, array_ 8000: 1.205ms
2.0 cpu, 16384 ram, 8000 iterations, map___ type, map___ 8000: 1.667ms
3.0 cpu, 16384 ram, 8000 iterations, object type, object 8000: 1.283ms
3.0 cpu, 16384 ram, 8000 iterations, array_ type, array_ 8000: 1.133ms
3.0 cpu, 16384 ram, 8000 iterations, map___ type, map___ 8000: 1.667ms
4.0 cpu, 16384 ram, 8000 iterations, object type, object 8000: 1.216ms
4.0 cpu, 16384 ram, 8000 iterations, array_ type, array_ 8000: 1.315ms
4.0 cpu, 16384 ram, 8000 iterations, map___ type, map___ 8000: 1.457ms
0.5 cpu, 128 ram, 9000 iterations, object type, object 9000: 1.69ms
0.5 cpu, 128 ram, 9000 iterations, array_ type, array_ 9000: 1.399ms
0.5 cpu, 128 ram, 9000 iterations, map___ type, map___ 9000: 1.919ms
1.0 cpu, 128 ram, 9000 iterations, object type, object 9000: 1.359ms
1.0 cpu, 128 ram, 9000 iterations, array_ type, array_ 9000: 1.221ms
1.0 cpu, 128 ram, 9000 iterations, map___ type, map___ 9000: 1.94ms
2.0 cpu, 128 ram, 9000 iterations, object type, object 9000: 1.331ms
2.0 cpu, 128 ram, 9000 iterations, array_ type, array_ 9000: 1.448ms
2.0 cpu, 128 ram, 9000 iterations, map___ type, map___ 9000: 2.071ms
3.0 cpu, 128 ram, 9000 iterations, object type, object 9000: 1.613ms
3.0 cpu, 128 ram, 9000 iterations, array_ type, array_ 9000: 1.225ms
3.0 cpu, 128 ram, 9000 iterations, map___ type, map___ 9000: 1.818ms
4.0 cpu, 128 ram, 9000 iterations, object type, object 9000: 1.444ms
4.0 cpu, 128 ram, 9000 iterations, array_ type, array_ 9000: 1.264ms
4.0 cpu, 128 ram, 9000 iterations, map___ type, map___ 9000: 2.055ms
0.5 cpu, 256 ram, 9000 iterations, object type, object 9000: 1.381ms
0.5 cpu, 256 ram, 9000 iterations, array_ type, array_ 9000: 1.5ms
0.5 cpu, 256 ram, 9000 iterations, map___ type, map___ 9000: 1.985ms
1.0 cpu, 256 ram, 9000 iterations, object type, object 9000: 1.291ms
1.0 cpu, 256 ram, 9000 iterations, array_ type, array_ 9000: 1.251ms
1.0 cpu, 256 ram, 9000 iterations, map___ type, map___ 9000: 2.032ms
2.0 cpu, 256 ram, 9000 iterations, object type, object 9000: 1.401ms
2.0 cpu, 256 ram, 9000 iterations, array_ type, array_ 9000: 1.275ms
2.0 cpu, 256 ram, 9000 iterations, map___ type, map___ 9000: 2.179ms
3.0 cpu, 256 ram, 9000 iterations, object type, object 9000: 1.347ms
3.0 cpu, 256 ram, 9000 iterations, array_ type, array_ 9000: 1.376ms
3.0 cpu, 256 ram, 9000 iterations, map___ type, map___ 9000: 2.008ms
4.0 cpu, 256 ram, 9000 iterations, object type, object 9000: 1.26ms
4.0 cpu, 256 ram, 9000 iterations, array_ type, array_ 9000: 1.392ms
4.0 cpu, 256 ram, 9000 iterations, map___ type, map___ 9000: 2.104ms
0.5 cpu, 512 ram, 9000 iterations, object type, object 9000: 1.354ms
0.5 cpu, 512 ram, 9000 iterations, array_ type, array_ 9000: 1.276ms
0.5 cpu, 512 ram, 9000 iterations, map___ type, map___ 9000: 1.894ms
1.0 cpu, 512 ram, 9000 iterations, object type, object 9000: 1.348ms
1.0 cpu, 512 ram, 9000 iterations, array_ type, array_ 9000: 1.227ms
1.0 cpu, 512 ram, 9000 iterations, map___ type, map___ 9000: 1.858ms
2.0 cpu, 512 ram, 9000 iterations, object type, object 9000: 1.348ms
2.0 cpu, 512 ram, 9000 iterations, array_ type, array_ 9000: 1.922ms
2.0 cpu, 512 ram, 9000 iterations, map___ type, map___ 9000: 1.934ms
3.0 cpu, 512 ram, 9000 iterations, object type, object 9000: 1.35ms
3.0 cpu, 512 ram, 9000 iterations, array_ type, array_ 9000: 1.225ms
3.0 cpu, 512 ram, 9000 iterations, map___ type, map___ 9000: 1.974ms
4.0 cpu, 512 ram, 9000 iterations, object type, object 9000: 1.358ms
4.0 cpu, 512 ram, 9000 iterations, array_ type, array_ 9000: 1.317ms
4.0 cpu, 512 ram, 9000 iterations, map___ type, map___ 9000: 2.146ms
0.5 cpu, 1024 ram, 9000 iterations, object type, object 9000: 1.457ms
0.5 cpu, 1024 ram, 9000 iterations, array_ type, array_ 9000: 1.363ms
0.5 cpu, 1024 ram, 9000 iterations, map___ type, map___ 9000: 1.904ms
1.0 cpu, 1024 ram, 9000 iterations, object type, object 9000: 1.223ms
1.0 cpu, 1024 ram, 9000 iterations, array_ type, array_ 9000: 1.376ms
1.0 cpu, 1024 ram, 9000 iterations, map___ type, map___ 9000: 2.089ms
2.0 cpu, 1024 ram, 9000 iterations, object type, object 9000: 1.514ms
2.0 cpu, 1024 ram, 9000 iterations, array_ type, array_ 9000: 1.367ms
2.0 cpu, 1024 ram, 9000 iterations, map___ type, map___ 9000: 1.875ms
3.0 cpu, 1024 ram, 9000 iterations, object type, object 9000: 1.325ms
3.0 cpu, 1024 ram, 9000 iterations, array_ type, array_ 9000: 1.504ms
3.0 cpu, 1024 ram, 9000 iterations, map___ type, map___ 9000: 2.041ms
4.0 cpu, 1024 ram, 9000 iterations, object type, object 9000: 1.388ms
4.0 cpu, 1024 ram, 9000 iterations, array_ type, array_ 9000: 1.464ms
4.0 cpu, 1024 ram, 9000 iterations, map___ type, map___ 9000: 1.984ms
0.5 cpu, 2048 ram, 9000 iterations, object type, object 9000: 1.272ms
0.5 cpu, 2048 ram, 9000 iterations, array_ type, array_ 9000: 1.297ms
0.5 cpu, 2048 ram, 9000 iterations, map___ type, map___ 9000: 1.935ms
1.0 cpu, 2048 ram, 9000 iterations, object type, object 9000: 1.791ms
1.0 cpu, 2048 ram, 9000 iterations, array_ type, array_ 9000: 1.334ms
1.0 cpu, 2048 ram, 9000 iterations, map___ type, map___ 9000: 1.724ms
2.0 cpu, 2048 ram, 9000 iterations, object type, object 9000: 1.931ms
2.0 cpu, 2048 ram, 9000 iterations, array_ type, array_ 9000: 1.316ms
2.0 cpu, 2048 ram, 9000 iterations, map___ type, map___ 9000: 2.146ms
3.0 cpu, 2048 ram, 9000 iterations, object type, object 9000: 1.312ms
3.0 cpu, 2048 ram, 9000 iterations, array_ type, array_ 9000: 1.608ms
3.0 cpu, 2048 ram, 9000 iterations, map___ type, map___ 9000: 2.104ms
4.0 cpu, 2048 ram, 9000 iterations, object type, object 9000: 1.405ms
4.0 cpu, 2048 ram, 9000 iterations, array_ type, array_ 9000: 2.268ms
4.0 cpu, 2048 ram, 9000 iterations, map___ type, map___ 9000: 1.924ms
0.5 cpu, 4096 ram, 9000 iterations, object type, object 9000: 1.253ms
0.5 cpu, 4096 ram, 9000 iterations, array_ type, array_ 9000: 1.394ms
0.5 cpu, 4096 ram, 9000 iterations, map___ type, map___ 9000: 2.313ms
1.0 cpu, 4096 ram, 9000 iterations, object type, object 9000: 1.276ms
1.0 cpu, 4096 ram, 9000 iterations, array_ type, array_ 9000: 1.242ms
1.0 cpu, 4096 ram, 9000 iterations, map___ type, map___ 9000: 2.179ms
2.0 cpu, 4096 ram, 9000 iterations, object type, object 9000: 1.224ms
2.0 cpu, 4096 ram, 9000 iterations, array_ type, array_ 9000: 1.35ms
2.0 cpu, 4096 ram, 9000 iterations, map___ type, map___ 9000: 1.755ms
3.0 cpu, 4096 ram, 9000 iterations, object type, object 9000: 1.314ms
3.0 cpu, 4096 ram, 9000 iterations, array_ type, array_ 9000: 1.379ms
3.0 cpu, 4096 ram, 9000 iterations, map___ type, map___ 9000: 1.926ms
4.0 cpu, 4096 ram, 9000 iterations, object type, object 9000: 1.327ms
4.0 cpu, 4096 ram, 9000 iterations, array_ type, array_ 9000: 1.255ms
4.0 cpu, 4096 ram, 9000 iterations, map___ type, map___ 9000: 1.872ms
0.5 cpu, 8192 ram, 9000 iterations, object type, object 9000: 1.418ms
0.5 cpu, 8192 ram, 9000 iterations, array_ type, array_ 9000: 1.328ms
0.5 cpu, 8192 ram, 9000 iterations, map___ type, map___ 9000: 1.984ms
1.0 cpu, 8192 ram, 9000 iterations, object type, object 9000: 1.608ms
1.0 cpu, 8192 ram, 9000 iterations, array_ type, array_ 9000: 1.224ms
1.0 cpu, 8192 ram, 9000 iterations, map___ type, map___ 9000: 2.393ms
2.0 cpu, 8192 ram, 9000 iterations, object type, object 9000: 1.33ms
2.0 cpu, 8192 ram, 9000 iterations, array_ type, array_ 9000: 1.42ms
2.0 cpu, 8192 ram, 9000 iterations, map___ type, map___ 9000: 2.091ms
3.0 cpu, 8192 ram, 9000 iterations, object type, object 9000: 1.36ms
3.0 cpu, 8192 ram, 9000 iterations, array_ type, array_ 9000: 1.358ms
3.0 cpu, 8192 ram, 9000 iterations, map___ type, map___ 9000: 1.95ms
4.0 cpu, 8192 ram, 9000 iterations, object type, object 9000: 1.304ms
4.0 cpu, 8192 ram, 9000 iterations, array_ type, array_ 9000: 1.318ms
4.0 cpu, 8192 ram, 9000 iterations, map___ type, map___ 9000: 2.607ms
0.5 cpu, 16384 ram, 9000 iterations, object type, object 9000: 1.409ms
0.5 cpu, 16384 ram, 9000 iterations, array_ type, array_ 9000: 1.206ms
0.5 cpu, 16384 ram, 9000 iterations, map___ type, map___ 9000: 1.925ms
1.0 cpu, 16384 ram, 9000 iterations, object type, object 9000: 1.492ms
1.0 cpu, 16384 ram, 9000 iterations, array_ type, array_ 9000: 1.343ms
1.0 cpu, 16384 ram, 9000 iterations, map___ type, map___ 9000: 2.082ms
2.0 cpu, 16384 ram, 9000 iterations, object type, object 9000: 1.497ms
2.0 cpu, 16384 ram, 9000 iterations, array_ type, array_ 9000: 1.375ms
2.0 cpu, 16384 ram, 9000 iterations, map___ type, map___ 9000: 2.167ms
3.0 cpu, 16384 ram, 9000 iterations, object type, object 9000: 1.459ms
3.0 cpu, 16384 ram, 9000 iterations, array_ type, array_ 9000: 1.391ms
3.0 cpu, 16384 ram, 9000 iterations, map___ type, map___ 9000: 2.043ms
4.0 cpu, 16384 ram, 9000 iterations, object type, object 9000: 1.378ms
4.0 cpu, 16384 ram, 9000 iterations, array_ type, array_ 9000: 1.369ms
4.0 cpu, 16384 ram, 9000 iterations, map___ type, map___ 9000: 2.026ms
0.5 cpu, 128 ram, 10000 iterations, object type, object 10000: 1.341ms
0.5 cpu, 128 ram, 10000 iterations, array_ type, array_ 10000: 1.257ms
0.5 cpu, 128 ram, 10000 iterations, map___ type, map___ 10000: 1.922ms
1.0 cpu, 128 ram, 10000 iterations, object type, object 10000: 1.461ms
1.0 cpu, 128 ram, 10000 iterations, array_ type, array_ 10000: 1.54ms
1.0 cpu, 128 ram, 10000 iterations, map___ type, map___ 10000: 1.937ms
2.0 cpu, 128 ram, 10000 iterations, object type, object 10000: 1.552ms
2.0 cpu, 128 ram, 10000 iterations, array_ type, array_ 10000: 1.3ms
2.0 cpu, 128 ram, 10000 iterations, map___ type, map___ 10000: 2.122ms
3.0 cpu, 128 ram, 10000 iterations, object type, object 10000: 1.395ms
3.0 cpu, 128 ram, 10000 iterations, array_ type, array_ 10000: 1.529ms
3.0 cpu, 128 ram, 10000 iterations, map___ type, map___ 10000: 2.477ms
4.0 cpu, 128 ram, 10000 iterations, object type, object 10000: 1.394ms
4.0 cpu, 128 ram, 10000 iterations, array_ type, array_ 10000: 1.447ms
4.0 cpu, 128 ram, 10000 iterations, map___ type, map___ 10000: 2.045ms
0.5 cpu, 256 ram, 10000 iterations, object type, object 10000: 1.379ms
0.5 cpu, 256 ram, 10000 iterations, array_ type, array_ 10000: 1.374ms
0.5 cpu, 256 ram, 10000 iterations, map___ type, map___ 10000: 1.981ms
1.0 cpu, 256 ram, 10000 iterations, object type, object 10000: 1.801ms
1.0 cpu, 256 ram, 10000 iterations, array_ type, array_ 10000: 1.415ms
1.0 cpu, 256 ram, 10000 iterations, map___ type, map___ 10000: 2.44ms
2.0 cpu, 256 ram, 10000 iterations, object type, object 10000: 1.385ms
2.0 cpu, 256 ram, 10000 iterations, array_ type, array_ 10000: 1.341ms
2.0 cpu, 256 ram, 10000 iterations, map___ type, map___ 10000: 2.264ms
3.0 cpu, 256 ram, 10000 iterations, object type, object 10000: 1.413ms
3.0 cpu, 256 ram, 10000 iterations, array_ type, array_ 10000: 1.27ms
3.0 cpu, 256 ram, 10000 iterations, map___ type, map___ 10000: 2.435ms
4.0 cpu, 256 ram, 10000 iterations, object type, object 10000: 1.376ms
4.0 cpu, 256 ram, 10000 iterations, array_ type, array_ 10000: 1.37ms
4.0 cpu, 256 ram, 10000 iterations, map___ type, map___ 10000: 2.261ms
0.5 cpu, 512 ram, 10000 iterations, object type, object 10000: 1.435ms
0.5 cpu, 512 ram, 10000 iterations, array_ type, array_ 10000: 1.391ms
0.5 cpu, 512 ram, 10000 iterations, map___ type, map___ 10000: 2.393ms
1.0 cpu, 512 ram, 10000 iterations, object type, object 10000: 1.382ms
1.0 cpu, 512 ram, 10000 iterations, array_ type, array_ 10000: 1.344ms
1.0 cpu, 512 ram, 10000 iterations, map___ type, map___ 10000: 2.474ms
2.0 cpu, 512 ram, 10000 iterations, object type, object 10000: 1.456ms
2.0 cpu, 512 ram, 10000 iterations, array_ type, array_ 10000: 1.463ms
2.0 cpu, 512 ram, 10000 iterations, map___ type, map___ 10000: 2.269ms
3.0 cpu, 512 ram, 10000 iterations, object type, object 10000: 1.343ms
3.0 cpu, 512 ram, 10000 iterations, array_ type, array_ 10000: 1.31ms
3.0 cpu, 512 ram, 10000 iterations, map___ type, map___ 10000: 2.072ms
4.0 cpu, 512 ram, 10000 iterations, object type, object 10000: 1.485ms
4.0 cpu, 512 ram, 10000 iterations, array_ type, array_ 10000: 1.39ms
4.0 cpu, 512 ram, 10000 iterations, map___ type, map___ 10000: 2.088ms
0.5 cpu, 1024 ram, 10000 iterations, object type, object 10000: 1.377ms
0.5 cpu, 1024 ram, 10000 iterations, array_ type, array_ 10000: 1.394ms
0.5 cpu, 1024 ram, 10000 iterations, map___ type, map___ 10000: 2.049ms
1.0 cpu, 1024 ram, 10000 iterations, object type, object 10000: 1.419ms
1.0 cpu, 1024 ram, 10000 iterations, array_ type, array_ 10000: 1.356ms
1.0 cpu, 1024 ram, 10000 iterations, map___ type, map___ 10000: 2.043ms
2.0 cpu, 1024 ram, 10000 iterations, object type, object 10000: 1.318ms
2.0 cpu, 1024 ram, 10000 iterations, array_ type, array_ 10000: 1.428ms
2.0 cpu, 1024 ram, 10000 iterations, map___ type, map___ 10000: 2.579ms
3.0 cpu, 1024 ram, 10000 iterations, object type, object 10000: 1.346ms
3.0 cpu, 1024 ram, 10000 iterations, array_ type, array_ 10000: 1.559ms
3.0 cpu, 1024 ram, 10000 iterations, map___ type, map___ 10000: 2.205ms
4.0 cpu, 1024 ram, 10000 iterations, object type, object 10000: 1.401ms
4.0 cpu, 1024 ram, 10000 iterations, array_ type, array_ 10000: 1.343ms
4.0 cpu, 1024 ram, 10000 iterations, map___ type, map___ 10000: 2.247ms
0.5 cpu, 2048 ram, 10000 iterations, object type, object 10000: 2.385ms
0.5 cpu, 2048 ram, 10000 iterations, array_ type, array_ 10000: 1.4ms
0.5 cpu, 2048 ram, 10000 iterations, map___ type, map___ 10000: 2.154ms
1.0 cpu, 2048 ram, 10000 iterations, object type, object 10000: 1.455ms
1.0 cpu, 2048 ram, 10000 iterations, array_ type, array_ 10000: 1.322ms
1.0 cpu, 2048 ram, 10000 iterations, map___ type, map___ 10000: 2.118ms
2.0 cpu, 2048 ram, 10000 iterations, object type, object 10000: 1.317ms
2.0 cpu, 2048 ram, 10000 iterations, array_ type, array_ 10000: 1.446ms
2.0 cpu, 2048 ram, 10000 iterations, map___ type, map___ 10000: 2.09ms
3.0 cpu, 2048 ram, 10000 iterations, object type, object 10000: 1.33ms
3.0 cpu, 2048 ram, 10000 iterations, array_ type, array_ 10000: 1.374ms
3.0 cpu, 2048 ram, 10000 iterations, map___ type, map___ 10000: 2.137ms
4.0 cpu, 2048 ram, 10000 iterations, object type, object 10000: 1.459ms
4.0 cpu, 2048 ram, 10000 iterations, array_ type, array_ 10000: 1.411ms
4.0 cpu, 2048 ram, 10000 iterations, map___ type, map___ 10000: 2.187ms
0.5 cpu, 4096 ram, 10000 iterations, object type, object 10000: 1.364ms
0.5 cpu, 4096 ram, 10000 iterations, array_ type, array_ 10000: 1.536ms
0.5 cpu, 4096 ram, 10000 iterations, map___ type, map___ 10000: 1.911ms
1.0 cpu, 4096 ram, 10000 iterations, object type, object 10000: 1.51ms
1.0 cpu, 4096 ram, 10000 iterations, array_ type, array_ 10000: 1.384ms
1.0 cpu, 4096 ram, 10000 iterations, map___ type, map___ 10000: 2.304ms
2.0 cpu, 4096 ram, 10000 iterations, object type, object 10000: 1.402ms
2.0 cpu, 4096 ram, 10000 iterations, array_ type, array_ 10000: 1.403ms
2.0 cpu, 4096 ram, 10000 iterations, map___ type, map___ 10000: 2.194ms
3.0 cpu, 4096 ram, 10000 iterations, object type, object 10000: 1.645ms
3.0 cpu, 4096 ram, 10000 iterations, array_ type, array_ 10000: 1.561ms
3.0 cpu, 4096 ram, 10000 iterations, map___ type, map___ 10000: 2.77ms
4.0 cpu, 4096 ram, 10000 iterations, object type, object 10000: 1.392ms
4.0 cpu, 4096 ram, 10000 iterations, array_ type, array_ 10000: 1.374ms
4.0 cpu, 4096 ram, 10000 iterations, map___ type, map___ 10000: 1.92ms
0.5 cpu, 8192 ram, 10000 iterations, object type, object 10000: 2.791ms
0.5 cpu, 8192 ram, 10000 iterations, array_ type, array_ 10000: 1.459ms
0.5 cpu, 8192 ram, 10000 iterations, map___ type, map___ 10000: 2.468ms
1.0 cpu, 8192 ram, 10000 iterations, object type, object 10000: 1.353ms
1.0 cpu, 8192 ram, 10000 iterations, array_ type, array_ 10000: 1.405ms
1.0 cpu, 8192 ram, 10000 iterations, map___ type, map___ 10000: 1.994ms
2.0 cpu, 8192 ram, 10000 iterations, object type, object 10000: 1.31ms
2.0 cpu, 8192 ram, 10000 iterations, array_ type, array_ 10000: 1.346ms
2.0 cpu, 8192 ram, 10000 iterations, map___ type, map___ 10000: 2.23ms
3.0 cpu, 8192 ram, 10000 iterations, object type, object 10000: 1.47ms
3.0 cpu, 8192 ram, 10000 iterations, array_ type, array_ 10000: 1.54ms
3.0 cpu, 8192 ram, 10000 iterations, map___ type, map___ 10000: 2.002ms
4.0 cpu, 8192 ram, 10000 iterations, object type, object 10000: 1.536ms
4.0 cpu, 8192 ram, 10000 iterations, array_ type, array_ 10000: 1.379ms
4.0 cpu, 8192 ram, 10000 iterations, map___ type, map___ 10000: 2.079ms
0.5 cpu, 16384 ram, 10000 iterations, object type, object 10000: 1.347ms
0.5 cpu, 16384 ram, 10000 iterations, array_ type, array_ 10000: 1.422ms
0.5 cpu, 16384 ram, 10000 iterations, map___ type, map___ 10000: 1.904ms
1.0 cpu, 16384 ram, 10000 iterations, object type, object 10000: 1.403ms
1.0 cpu, 16384 ram, 10000 iterations, array_ type, array_ 10000: 1.305ms
1.0 cpu, 16384 ram, 10000 iterations, map___ type, map___ 10000: 1.944ms
2.0 cpu, 16384 ram, 10000 iterations, object type, object 10000: 1.278ms
2.0 cpu, 16384 ram, 10000 iterations, array_ type, array_ 10000: 1.347ms
2.0 cpu, 16384 ram, 10000 iterations, map___ type, map___ 10000: 2.014ms
3.0 cpu, 16384 ram, 10000 iterations, object type, object 10000: 1.398ms
3.0 cpu, 16384 ram, 10000 iterations, array_ type, array_ 10000: 1.283ms
3.0 cpu, 16384 ram, 10000 iterations, map___ type, map___ 10000: 2.395ms
4.0 cpu, 16384 ram, 10000 iterations, object type, object 10000: 1.294ms
4.0 cpu, 16384 ram, 10000 iterations, array_ type, array_ 10000: 1.36ms
4.0 cpu, 16384 ram, 10000 iterations, map___ type, map___ 10000: 2.127ms
0.5 cpu, 128 ram, 20000 iterations, object type, object 20000: 3.749ms
0.5 cpu, 128 ram, 20000 iterations, array_ type, array_ 20000: 2.873ms
0.5 cpu, 128 ram, 20000 iterations, map___ type, map___ 20000: 4.288ms
1.0 cpu, 128 ram, 20000 iterations, object type, object 20000: 3.067ms
1.0 cpu, 128 ram, 20000 iterations, array_ type, array_ 20000: 2.738ms
1.0 cpu, 128 ram, 20000 iterations, map___ type, map___ 20000: 4.035ms
2.0 cpu, 128 ram, 20000 iterations, object type, object 20000: 3.654ms
2.0 cpu, 128 ram, 20000 iterations, array_ type, array_ 20000: 2.935ms
2.0 cpu, 128 ram, 20000 iterations, map___ type, map___ 20000: 4.148ms
3.0 cpu, 128 ram, 20000 iterations, object type, object 20000: 2.989ms
3.0 cpu, 128 ram, 20000 iterations, array_ type, array_ 20000: 2.994ms
3.0 cpu, 128 ram, 20000 iterations, map___ type, map___ 20000: 4.326ms
4.0 cpu, 128 ram, 20000 iterations, object type, object 20000: 3.317ms
4.0 cpu, 128 ram, 20000 iterations, array_ type, array_ 20000: 3.108ms
4.0 cpu, 128 ram, 20000 iterations, map___ type, map___ 20000: 4.361ms
0.5 cpu, 256 ram, 20000 iterations, object type, object 20000: 3.13ms
0.5 cpu, 256 ram, 20000 iterations, array_ type, array_ 20000: 4.427ms
0.5 cpu, 256 ram, 20000 iterations, map___ type, map___ 20000: 4.355ms
1.0 cpu, 256 ram, 20000 iterations, object type, object 20000: 3.017ms
1.0 cpu, 256 ram, 20000 iterations, array_ type, array_ 20000: 2.641ms
1.0 cpu, 256 ram, 20000 iterations, map___ type, map___ 20000: 4.303ms
2.0 cpu, 256 ram, 20000 iterations, object type, object 20000: 3.236ms
2.0 cpu, 256 ram, 20000 iterations, array_ type, array_ 20000: 2.747ms
2.0 cpu, 256 ram, 20000 iterations, map___ type, map___ 20000: 4.198ms
3.0 cpu, 256 ram, 20000 iterations, object type, object 20000: 2.99ms
3.0 cpu, 256 ram, 20000 iterations, array_ type, array_ 20000: 2.982ms
3.0 cpu, 256 ram, 20000 iterations, map___ type, map___ 20000: 4.277ms
4.0 cpu, 256 ram, 20000 iterations, object type, object 20000: 3.107ms
4.0 cpu, 256 ram, 20000 iterations, array_ type, array_ 20000: 2.914ms
4.0 cpu, 256 ram, 20000 iterations, map___ type, map___ 20000: 4.162ms
0.5 cpu, 512 ram, 20000 iterations, object type, object 20000: 3.112ms
0.5 cpu, 512 ram, 20000 iterations, array_ type, array_ 20000: 3.149ms
0.5 cpu, 512 ram, 20000 iterations, map___ type, map___ 20000: 4.073ms
1.0 cpu, 512 ram, 20000 iterations, object type, object 20000: 3.033ms
1.0 cpu, 512 ram, 20000 iterations, array_ type, array_ 20000: 2.987ms
1.0 cpu, 512 ram, 20000 iterations, map___ type, map___ 20000: 4.148ms
2.0 cpu, 512 ram, 20000 iterations, object type, object 20000: 3.156ms
2.0 cpu, 512 ram, 20000 iterations, array_ type, array_ 20000: 3.06ms
2.0 cpu, 512 ram, 20000 iterations, map___ type, map___ 20000: 4.119ms
3.0 cpu, 512 ram, 20000 iterations, object type, object 20000: 3.297ms
3.0 cpu, 512 ram, 20000 iterations, array_ type, array_ 20000: 3.541ms
3.0 cpu, 512 ram, 20000 iterations, map___ type, map___ 20000: 4.204ms
4.0 cpu, 512 ram, 20000 iterations, object type, object 20000: 3.222ms
4.0 cpu, 512 ram, 20000 iterations, array_ type, array_ 20000: 2.704ms
4.0 cpu, 512 ram, 20000 iterations, map___ type, map___ 20000: 4.175ms
0.5 cpu, 1024 ram, 20000 iterations, object type, object 20000: 3.185ms
0.5 cpu, 1024 ram, 20000 iterations, array_ type, array_ 20000: 3.076ms
0.5 cpu, 1024 ram, 20000 iterations, map___ type, map___ 20000: 4.153ms
1.0 cpu, 1024 ram, 20000 iterations, object type, object 20000: 2.949ms
1.0 cpu, 1024 ram, 20000 iterations, array_ type, array_ 20000: 3.141ms
1.0 cpu, 1024 ram, 20000 iterations, map___ type, map___ 20000: 4.416ms
2.0 cpu, 1024 ram, 20000 iterations, object type, object 20000: 3.297ms
2.0 cpu, 1024 ram, 20000 iterations, array_ type, array_ 20000: 3.233ms
2.0 cpu, 1024 ram, 20000 iterations, map___ type, map___ 20000: 4.241ms
3.0 cpu, 1024 ram, 20000 iterations, object type, object 20000: 3.225ms
3.0 cpu, 1024 ram, 20000 iterations, array_ type, array_ 20000: 3.051ms
3.0 cpu, 1024 ram, 20000 iterations, map___ type, map___ 20000: 4.063ms
4.0 cpu, 1024 ram, 20000 iterations, object type, object 20000: 3.143ms
4.0 cpu, 1024 ram, 20000 iterations, array_ type, array_ 20000: 3.117ms
4.0 cpu, 1024 ram, 20000 iterations, map___ type, map___ 20000: 4.328ms
0.5 cpu, 2048 ram, 20000 iterations, object type, object 20000: 2.985ms
0.5 cpu, 2048 ram, 20000 iterations, array_ type, array_ 20000: 2.864ms
0.5 cpu, 2048 ram, 20000 iterations, map___ type, map___ 20000: 4.298ms
1.0 cpu, 2048 ram, 20000 iterations, object type, object 20000: 3.102ms
1.0 cpu, 2048 ram, 20000 iterations, array_ type, array_ 20000: 3.226ms
1.0 cpu, 2048 ram, 20000 iterations, map___ type, map___ 20000: 4.604ms
2.0 cpu, 2048 ram, 20000 iterations, object type, object 20000: 3.09ms
2.0 cpu, 2048 ram, 20000 iterations, array_ type, array_ 20000: 2.891ms
2.0 cpu, 2048 ram, 20000 iterations, map___ type, map___ 20000: 4.216ms
3.0 cpu, 2048 ram, 20000 iterations, object type, object 20000: 3.108ms
3.0 cpu, 2048 ram, 20000 iterations, array_ type, array_ 20000: 2.82ms
3.0 cpu, 2048 ram, 20000 iterations, map___ type, map___ 20000: 4.295ms
4.0 cpu, 2048 ram, 20000 iterations, object type, object 20000: 3.469ms
4.0 cpu, 2048 ram, 20000 iterations, array_ type, array_ 20000: 2.766ms
4.0 cpu, 2048 ram, 20000 iterations, map___ type, map___ 20000: 4.414ms
0.5 cpu, 4096 ram, 20000 iterations, object type, object 20000: 3.391ms
0.5 cpu, 4096 ram, 20000 iterations, array_ type, array_ 20000: 3.134ms
0.5 cpu, 4096 ram, 20000 iterations, map___ type, map___ 20000: 4.165ms
1.0 cpu, 4096 ram, 20000 iterations, object type, object 20000: 3.257ms
1.0 cpu, 4096 ram, 20000 iterations, array_ type, array_ 20000: 3.248ms
1.0 cpu, 4096 ram, 20000 iterations, map___ type, map___ 20000: 4.287ms
2.0 cpu, 4096 ram, 20000 iterations, object type, object 20000: 3.079ms
2.0 cpu, 4096 ram, 20000 iterations, array_ type, array_ 20000: 2.722ms
2.0 cpu, 4096 ram, 20000 iterations, map___ type, map___ 20000: 4.367ms
3.0 cpu, 4096 ram, 20000 iterations, object type, object 20000: 3.219ms
3.0 cpu, 4096 ram, 20000 iterations, array_ type, array_ 20000: 8.534ms
3.0 cpu, 4096 ram, 20000 iterations, map___ type, map___ 20000: 4.186ms
4.0 cpu, 4096 ram, 20000 iterations, object type, object 20000: 3.275ms
4.0 cpu, 4096 ram, 20000 iterations, array_ type, array_ 20000: 2.873ms
4.0 cpu, 4096 ram, 20000 iterations, map___ type, map___ 20000: 4.095ms
0.5 cpu, 8192 ram, 20000 iterations, object type, object 20000: 3.243ms
0.5 cpu, 8192 ram, 20000 iterations, array_ type, array_ 20000: 3.428ms
0.5 cpu, 8192 ram, 20000 iterations, map___ type, map___ 20000: 4.68ms
1.0 cpu, 8192 ram, 20000 iterations, object type, object 20000: 3.106ms
1.0 cpu, 8192 ram, 20000 iterations, array_ type, array_ 20000: 2.725ms
1.0 cpu, 8192 ram, 20000 iterations, map___ type, map___ 20000: 4.175ms
2.0 cpu, 8192 ram, 20000 iterations, object type, object 20000: 4.429ms
2.0 cpu, 8192 ram, 20000 iterations, array_ type, array_ 20000: 3.039ms
2.0 cpu, 8192 ram, 20000 iterations, map___ type, map___ 20000: 4.355ms
3.0 cpu, 8192 ram, 20000 iterations, object type, object 20000: 3.45ms
3.0 cpu, 8192 ram, 20000 iterations, array_ type, array_ 20000: 2.785ms
3.0 cpu, 8192 ram, 20000 iterations, map___ type, map___ 20000: 4.414ms
4.0 cpu, 8192 ram, 20000 iterations, object type, object 20000: 3.163ms
4.0 cpu, 8192 ram, 20000 iterations, array_ type, array_ 20000: 2.934ms
4.0 cpu, 8192 ram, 20000 iterations, map___ type, map___ 20000: 4.161ms
0.5 cpu, 16384 ram, 20000 iterations, object type, object 20000: 3.043ms
0.5 cpu, 16384 ram, 20000 iterations, array_ type, array_ 20000: 2.704ms
0.5 cpu, 16384 ram, 20000 iterations, map___ type, map___ 20000: 4.452ms
1.0 cpu, 16384 ram, 20000 iterations, object type, object 20000: 4.184ms
1.0 cpu, 16384 ram, 20000 iterations, array_ type, array_ 20000: 2.937ms
1.0 cpu, 16384 ram, 20000 iterations, map___ type, map___ 20000: 4.341ms
2.0 cpu, 16384 ram, 20000 iterations, object type, object 20000: 3.012ms
2.0 cpu, 16384 ram, 20000 iterations, array_ type, array_ 20000: 2.756ms
2.0 cpu, 16384 ram, 20000 iterations, map___ type, map___ 20000: 4.275ms
3.0 cpu, 16384 ram, 20000 iterations, object type, object 20000: 2.975ms
3.0 cpu, 16384 ram, 20000 iterations, array_ type, array_ 20000: 3.154ms
3.0 cpu, 16384 ram, 20000 iterations, map___ type, map___ 20000: 4.08ms
4.0 cpu, 16384 ram, 20000 iterations, object type, object 20000: 3.807ms
4.0 cpu, 16384 ram, 20000 iterations, array_ type, array_ 20000: 3.007ms
4.0 cpu, 16384 ram, 20000 iterations, map___ type, map___ 20000: 6.039ms
0.5 cpu, 128 ram, 30000 iterations, object type, object 30000: 3.778ms
0.5 cpu, 128 ram, 30000 iterations, array_ type, array_ 30000: 3.606ms
0.5 cpu, 128 ram, 30000 iterations, map___ type, map___ 30000: 5.09ms
1.0 cpu, 128 ram, 30000 iterations, object type, object 30000: 3.952ms
1.0 cpu, 128 ram, 30000 iterations, array_ type, array_ 30000: 3.883ms
1.0 cpu, 128 ram, 30000 iterations, map___ type, map___ 30000: 5.178ms
2.0 cpu, 128 ram, 30000 iterations, object type, object 30000: 3.757ms
2.0 cpu, 128 ram, 30000 iterations, array_ type, array_ 30000: 3.696ms
2.0 cpu, 128 ram, 30000 iterations, map___ type, map___ 30000: 5.43ms
3.0 cpu, 128 ram, 30000 iterations, object type, object 30000: 3.871ms
3.0 cpu, 128 ram, 30000 iterations, array_ type, array_ 30000: 3.595ms
3.0 cpu, 128 ram, 30000 iterations, map___ type, map___ 30000: 5.157ms
4.0 cpu, 128 ram, 30000 iterations, object type, object 30000: 3.54ms
4.0 cpu, 128 ram, 30000 iterations, array_ type, array_ 30000: 3.551ms
4.0 cpu, 128 ram, 30000 iterations, map___ type, map___ 30000: 5.098ms
0.5 cpu, 256 ram, 30000 iterations, object type, object 30000: 3.479ms
0.5 cpu, 256 ram, 30000 iterations, array_ type, array_ 30000: 3.472ms
0.5 cpu, 256 ram, 30000 iterations, map___ type, map___ 30000: 4.946ms
1.0 cpu, 256 ram, 30000 iterations, object type, object 30000: 3.745ms
1.0 cpu, 256 ram, 30000 iterations, array_ type, array_ 30000: 3.405ms
1.0 cpu, 256 ram, 30000 iterations, map___ type, map___ 30000: 5.004ms
2.0 cpu, 256 ram, 30000 iterations, object type, object 30000: 6.428ms
2.0 cpu, 256 ram, 30000 iterations, array_ type, array_ 30000: 3.453ms
2.0 cpu, 256 ram, 30000 iterations, map___ type, map___ 30000: 5.019ms
3.0 cpu, 256 ram, 30000 iterations, object type, object 30000: 3.922ms
3.0 cpu, 256 ram, 30000 iterations, array_ type, array_ 30000: 3.775ms
3.0 cpu, 256 ram, 30000 iterations, map___ type, map___ 30000: 4.896ms
4.0 cpu, 256 ram, 30000 iterations, object type, object 30000: 4.026ms
4.0 cpu, 256 ram, 30000 iterations, array_ type, array_ 30000: 3.429ms
4.0 cpu, 256 ram, 30000 iterations, map___ type, map___ 30000: 4.784ms
0.5 cpu, 512 ram, 30000 iterations, object type, object 30000: 3.757ms
0.5 cpu, 512 ram, 30000 iterations, array_ type, array_ 30000: 3.552ms
0.5 cpu, 512 ram, 30000 iterations, map___ type, map___ 30000: 4.914ms
1.0 cpu, 512 ram, 30000 iterations, object type, object 30000: 3.729ms
1.0 cpu, 512 ram, 30000 iterations, array_ type, array_ 30000: 3.703ms
1.0 cpu, 512 ram, 30000 iterations, map___ type, map___ 30000: 4.883ms
2.0 cpu, 512 ram, 30000 iterations, object type, object 30000: 4.151ms
2.0 cpu, 512 ram, 30000 iterations, array_ type, array_ 30000: 3.651ms
2.0 cpu, 512 ram, 30000 iterations, map___ type, map___ 30000: 4.895ms
3.0 cpu, 512 ram, 30000 iterations, object type, object 30000: 3.865ms
3.0 cpu, 512 ram, 30000 iterations, array_ type, array_ 30000: 3.503ms
3.0 cpu, 512 ram, 30000 iterations, map___ type, map___ 30000: 5.05ms
4.0 cpu, 512 ram, 30000 iterations, object type, object 30000: 3.416ms
4.0 cpu, 512 ram, 30000 iterations, array_ type, array_ 30000: 3.597ms
4.0 cpu, 512 ram, 30000 iterations, map___ type, map___ 30000: 4.905ms
0.5 cpu, 1024 ram, 30000 iterations, object type, object 30000: 3.732ms
0.5 cpu, 1024 ram, 30000 iterations, array_ type, array_ 30000: 3.604ms
0.5 cpu, 1024 ram, 30000 iterations, map___ type, map___ 30000: 4.846ms
1.0 cpu, 1024 ram, 30000 iterations, object type, object 30000: 3.897ms
1.0 cpu, 1024 ram, 30000 iterations, array_ type, array_ 30000: 3.521ms
1.0 cpu, 1024 ram, 30000 iterations, map___ type, map___ 30000: 5.001ms
2.0 cpu, 1024 ram, 30000 iterations, object type, object 30000: 4.029ms
2.0 cpu, 1024 ram, 30000 iterations, array_ type, array_ 30000: 3.83ms
2.0 cpu, 1024 ram, 30000 iterations, map___ type, map___ 30000: 5.073ms
3.0 cpu, 1024 ram, 30000 iterations, object type, object 30000: 3.905ms
3.0 cpu, 1024 ram, 30000 iterations, array_ type, array_ 30000: 16.102ms
3.0 cpu, 1024 ram, 30000 iterations, map___ type, map___ 30000: 4.968ms
4.0 cpu, 1024 ram, 30000 iterations, object type, object 30000: 3.701ms
4.0 cpu, 1024 ram, 30000 iterations, array_ type, array_ 30000: 3.409ms
4.0 cpu, 1024 ram, 30000 iterations, map___ type, map___ 30000: 5.208ms
0.5 cpu, 2048 ram, 30000 iterations, object type, object 30000: 4.162ms
0.5 cpu, 2048 ram, 30000 iterations, array_ type, array_ 30000: 3.711ms
0.5 cpu, 2048 ram, 30000 iterations, map___ type, map___ 30000: 6.04ms
1.0 cpu, 2048 ram, 30000 iterations, object type, object 30000: 6.835ms
1.0 cpu, 2048 ram, 30000 iterations, array_ type, array_ 30000: 3.519ms
1.0 cpu, 2048 ram, 30000 iterations, map___ type, map___ 30000: 5.163ms
2.0 cpu, 2048 ram, 30000 iterations, object type, object 30000: 3.86ms
2.0 cpu, 2048 ram, 30000 iterations, array_ type, array_ 30000: 3.883ms
2.0 cpu, 2048 ram, 30000 iterations, map___ type, map___ 30000: 4.953ms
3.0 cpu, 2048 ram, 30000 iterations, object type, object 30000: 4.056ms
3.0 cpu, 2048 ram, 30000 iterations, array_ type, array_ 30000: 3.857ms
3.0 cpu, 2048 ram, 30000 iterations, map___ type, map___ 30000: 4.958ms
4.0 cpu, 2048 ram, 30000 iterations, object type, object 30000: 3.784ms
4.0 cpu, 2048 ram, 30000 iterations, array_ type, array_ 30000: 3.769ms
4.0 cpu, 2048 ram, 30000 iterations, map___ type, map___ 30000: 4.877ms
0.5 cpu, 4096 ram, 30000 iterations, object type, object 30000: 3.783ms
0.5 cpu, 4096 ram, 30000 iterations, array_ type, array_ 30000: 3.494ms
0.5 cpu, 4096 ram, 30000 iterations, map___ type, map___ 30000: 5.328ms
1.0 cpu, 4096 ram, 30000 iterations, object type, object 30000: 3.765ms
1.0 cpu, 4096 ram, 30000 iterations, array_ type, array_ 30000: 3.416ms
1.0 cpu, 4096 ram, 30000 iterations, map___ type, map___ 30000: 4.746ms
2.0 cpu, 4096 ram, 30000 iterations, object type, object 30000: 3.547ms
2.0 cpu, 4096 ram, 30000 iterations, array_ type, array_ 30000: 3.509ms
2.0 cpu, 4096 ram, 30000 iterations, map___ type, map___ 30000: 4.674ms
3.0 cpu, 4096 ram, 30000 iterations, object type, object 30000: 3.878ms
3.0 cpu, 4096 ram, 30000 iterations, array_ type, array_ 30000: 3.591ms
3.0 cpu, 4096 ram, 30000 iterations, map___ type, map___ 30000: 4.881ms
4.0 cpu, 4096 ram, 30000 iterations, object type, object 30000: 3.637ms
4.0 cpu, 4096 ram, 30000 iterations, array_ type, array_ 30000: 3.753ms
4.0 cpu, 4096 ram, 30000 iterations, map___ type, map___ 30000: 5.035ms
0.5 cpu, 8192 ram, 30000 iterations, object type, object 30000: 3.888ms
0.5 cpu, 8192 ram, 30000 iterations, array_ type, array_ 30000: 3.53ms
0.5 cpu, 8192 ram, 30000 iterations, map___ type, map___ 30000: 5.273ms
1.0 cpu, 8192 ram, 30000 iterations, object type, object 30000: 4.218ms
1.0 cpu, 8192 ram, 30000 iterations, array_ type, array_ 30000: 3.573ms
1.0 cpu, 8192 ram, 30000 iterations, map___ type, map___ 30000: 7.176ms
2.0 cpu, 8192 ram, 30000 iterations, object type, object 30000: 4.212ms
2.0 cpu, 8192 ram, 30000 iterations, array_ type, array_ 30000: 3.348ms
2.0 cpu, 8192 ram, 30000 iterations, map___ type, map___ 30000: 5.303ms
3.0 cpu, 8192 ram, 30000 iterations, object type, object 30000: 3.354ms
3.0 cpu, 8192 ram, 30000 iterations, array_ type, array_ 30000: 3.782ms
3.0 cpu, 8192 ram, 30000 iterations, map___ type, map___ 30000: 5.342ms
4.0 cpu, 8192 ram, 30000 iterations, object type, object 30000: 3.822ms
4.0 cpu, 8192 ram, 30000 iterations, array_ type, array_ 30000: 4.118ms
4.0 cpu, 8192 ram, 30000 iterations, map___ type, map___ 30000: 4.91ms
0.5 cpu, 16384 ram, 30000 iterations, object type, object 30000: 4.054ms
0.5 cpu, 16384 ram, 30000 iterations, array_ type, array_ 30000: 3.86ms
0.5 cpu, 16384 ram, 30000 iterations, map___ type, map___ 30000: 5.159ms
1.0 cpu, 16384 ram, 30000 iterations, object type, object 30000: 3.469ms
1.0 cpu, 16384 ram, 30000 iterations, array_ type, array_ 30000: 3.929ms
1.0 cpu, 16384 ram, 30000 iterations, map___ type, map___ 30000: 5.058ms
2.0 cpu, 16384 ram, 30000 iterations, object type, object 30000: 3.571ms
2.0 cpu, 16384 ram, 30000 iterations, array_ type, array_ 30000: 3.713ms
2.0 cpu, 16384 ram, 30000 iterations, map___ type, map___ 30000: 4.96ms
3.0 cpu, 16384 ram, 30000 iterations, object type, object 30000: 3.805ms
3.0 cpu, 16384 ram, 30000 iterations, array_ type, array_ 30000: 3.736ms
3.0 cpu, 16384 ram, 30000 iterations, map___ type, map___ 30000: 4.597ms
4.0 cpu, 16384 ram, 30000 iterations, object type, object 30000: 3.877ms
4.0 cpu, 16384 ram, 30000 iterations, array_ type, array_ 30000: 3.493ms
4.0 cpu, 16384 ram, 30000 iterations, map___ type, map___ 30000: 4.931ms
0.5 cpu, 128 ram, 40000 iterations, object type, object 40000: 5.598ms
0.5 cpu, 128 ram, 40000 iterations, array_ type, array_ 40000: 3.858ms
0.5 cpu, 128 ram, 40000 iterations, map___ type, map___ 40000: 6.862ms
1.0 cpu, 128 ram, 40000 iterations, object type, object 40000: 5.568ms
1.0 cpu, 128 ram, 40000 iterations, array_ type, array_ 40000: 4.168ms
1.0 cpu, 128 ram, 40000 iterations, map___ type, map___ 40000: 7.083ms
2.0 cpu, 128 ram, 40000 iterations, object type, object 40000: 5.177ms
2.0 cpu, 128 ram, 40000 iterations, array_ type, array_ 40000: 4.078ms
2.0 cpu, 128 ram, 40000 iterations, map___ type, map___ 40000: 7.024ms
3.0 cpu, 128 ram, 40000 iterations, object type, object 40000: 4.865ms
3.0 cpu, 128 ram, 40000 iterations, array_ type, array_ 40000: 4.427ms
3.0 cpu, 128 ram, 40000 iterations, map___ type, map___ 40000: 7.267ms
4.0 cpu, 128 ram, 40000 iterations, object type, object 40000: 5.502ms
4.0 cpu, 128 ram, 40000 iterations, array_ type, array_ 40000: 4.103ms
4.0 cpu, 128 ram, 40000 iterations, map___ type, map___ 40000: 7.457ms
0.5 cpu, 256 ram, 40000 iterations, object type, object 40000: 5.735ms
0.5 cpu, 256 ram, 40000 iterations, array_ type, array_ 40000: 4.051ms
0.5 cpu, 256 ram, 40000 iterations, map___ type, map___ 40000: 7.003ms
1.0 cpu, 256 ram, 40000 iterations, object type, object 40000: 5.034ms
1.0 cpu, 256 ram, 40000 iterations, array_ type, array_ 40000: 4.012ms
1.0 cpu, 256 ram, 40000 iterations, map___ type, map___ 40000: 7.729ms
2.0 cpu, 256 ram, 40000 iterations, object type, object 40000: 5.402ms
2.0 cpu, 256 ram, 40000 iterations, array_ type, array_ 40000: 3.88ms
2.0 cpu, 256 ram, 40000 iterations, map___ type, map___ 40000: 7.44ms
3.0 cpu, 256 ram, 40000 iterations, object type, object 40000: 6.257ms
3.0 cpu, 256 ram, 40000 iterations, array_ type, array_ 40000: 4.408ms
3.0 cpu, 256 ram, 40000 iterations, map___ type, map___ 40000: 7.292ms
4.0 cpu, 256 ram, 40000 iterations, object type, object 40000: 5.186ms
4.0 cpu, 256 ram, 40000 iterations, array_ type, array_ 40000: 4.409ms
4.0 cpu, 256 ram, 40000 iterations, map___ type, map___ 40000: 7.191ms
0.5 cpu, 512 ram, 40000 iterations, object type, object 40000: 5.36ms
0.5 cpu, 512 ram, 40000 iterations, array_ type, array_ 40000: 4.889ms
0.5 cpu, 512 ram, 40000 iterations, map___ type, map___ 40000: 7.213ms
1.0 cpu, 512 ram, 40000 iterations, object type, object 40000: 5.955ms
1.0 cpu, 512 ram, 40000 iterations, array_ type, array_ 40000: 3.926ms
1.0 cpu, 512 ram, 40000 iterations, map___ type, map___ 40000: 8.71ms
2.0 cpu, 512 ram, 40000 iterations, object type, object 40000: 4.951ms
2.0 cpu, 512 ram, 40000 iterations, array_ type, array_ 40000: 4.711ms
2.0 cpu, 512 ram, 40000 iterations, map___ type, map___ 40000: 7.918ms
3.0 cpu, 512 ram, 40000 iterations, object type, object 40000: 5.38ms
3.0 cpu, 512 ram, 40000 iterations, array_ type, array_ 40000: 3.927ms
3.0 cpu, 512 ram, 40000 iterations, map___ type, map___ 40000: 6.87ms
4.0 cpu, 512 ram, 40000 iterations, object type, object 40000: 5.111ms
4.0 cpu, 512 ram, 40000 iterations, array_ type, array_ 40000: 4.06ms
4.0 cpu, 512 ram, 40000 iterations, map___ type, map___ 40000: 7.502ms
0.5 cpu, 1024 ram, 40000 iterations, object type, object 40000: 5.59ms
0.5 cpu, 1024 ram, 40000 iterations, array_ type, array_ 40000: 4.266ms
0.5 cpu, 1024 ram, 40000 iterations, map___ type, map___ 40000: 7.277ms
1.0 cpu, 1024 ram, 40000 iterations, object type, object 40000: 5.676ms
1.0 cpu, 1024 ram, 40000 iterations, array_ type, array_ 40000: 4.288ms
1.0 cpu, 1024 ram, 40000 iterations, map___ type, map___ 40000: 7.01ms
2.0 cpu, 1024 ram, 40000 iterations, object type, object 40000: 5.777ms
2.0 cpu, 1024 ram, 40000 iterations, array_ type, array_ 40000: 4.179ms
2.0 cpu, 1024 ram, 40000 iterations, map___ type, map___ 40000: 7.811ms
3.0 cpu, 1024 ram, 40000 iterations, object type, object 40000: 5.157ms
3.0 cpu, 1024 ram, 40000 iterations, array_ type, array_ 40000: 4.155ms
3.0 cpu, 1024 ram, 40000 iterations, map___ type, map___ 40000: 7.351ms
4.0 cpu, 1024 ram, 40000 iterations, object type, object 40000: 5.758ms
4.0 cpu, 1024 ram, 40000 iterations, array_ type, array_ 40000: 4.623ms
4.0 cpu, 1024 ram, 40000 iterations, map___ type, map___ 40000: 7.395ms
0.5 cpu, 2048 ram, 40000 iterations, object type, object 40000: 5.491ms
0.5 cpu, 2048 ram, 40000 iterations, array_ type, array_ 40000: 5.795ms
0.5 cpu, 2048 ram, 40000 iterations, map___ type, map___ 40000: 6.637ms
1.0 cpu, 2048 ram, 40000 iterations, object type, object 40000: 5.134ms
1.0 cpu, 2048 ram, 40000 iterations, array_ type, array_ 40000: 4.934ms
1.0 cpu, 2048 ram, 40000 iterations, map___ type, map___ 40000: 7.056ms
2.0 cpu, 2048 ram, 40000 iterations, object type, object 40000: 5.287ms
2.0 cpu, 2048 ram, 40000 iterations, array_ type, array_ 40000: 4.285ms
2.0 cpu, 2048 ram, 40000 iterations, map___ type, map___ 40000: 10.318ms
3.0 cpu, 2048 ram, 40000 iterations, object type, object 40000: 5.084ms
3.0 cpu, 2048 ram, 40000 iterations, array_ type, array_ 40000: 4.305ms
3.0 cpu, 2048 ram, 40000 iterations, map___ type, map___ 40000: 7.872ms
4.0 cpu, 2048 ram, 40000 iterations, object type, object 40000: 5.627ms
4.0 cpu, 2048 ram, 40000 iterations, array_ type, array_ 40000: 4.155ms
4.0 cpu, 2048 ram, 40000 iterations, map___ type, map___ 40000: 6.998ms
0.5 cpu, 4096 ram, 40000 iterations, object type, object 40000: 5.639ms
0.5 cpu, 4096 ram, 40000 iterations, array_ type, array_ 40000: 4.687ms
0.5 cpu, 4096 ram, 40000 iterations, map___ type, map___ 40000: 7.758ms
1.0 cpu, 4096 ram, 40000 iterations, object type, object 40000: 5.364ms
1.0 cpu, 4096 ram, 40000 iterations, array_ type, array_ 40000: 4.611ms
1.0 cpu, 4096 ram, 40000 iterations, map___ type, map___ 40000: 7.082ms
2.0 cpu, 4096 ram, 40000 iterations, object type, object 40000: 5.164ms
2.0 cpu, 4096 ram, 40000 iterations, array_ type, array_ 40000: 3.876ms
2.0 cpu, 4096 ram, 40000 iterations, map___ type, map___ 40000: 7.075ms
3.0 cpu, 4096 ram, 40000 iterations, object type, object 40000: 5.096ms
3.0 cpu, 4096 ram, 40000 iterations, array_ type, array_ 40000: 4.381ms
3.0 cpu, 4096 ram, 40000 iterations, map___ type, map___ 40000: 7.265ms
4.0 cpu, 4096 ram, 40000 iterations, object type, object 40000: 5.593ms
4.0 cpu, 4096 ram, 40000 iterations, array_ type, array_ 40000: 4.157ms
4.0 cpu, 4096 ram, 40000 iterations, map___ type, map___ 40000: 8.032ms
0.5 cpu, 8192 ram, 40000 iterations, object type, object 40000: 5.283ms
0.5 cpu, 8192 ram, 40000 iterations, array_ type, array_ 40000: 4.302ms
0.5 cpu, 8192 ram, 40000 iterations, map___ type, map___ 40000: 7.412ms
1.0 cpu, 8192 ram, 40000 iterations, object type, object 40000: 5.179ms
1.0 cpu, 8192 ram, 40000 iterations, array_ type, array_ 40000: 4.107ms
1.0 cpu, 8192 ram, 40000 iterations, map___ type, map___ 40000: 7.601ms
2.0 cpu, 8192 ram, 40000 iterations, object type, object 40000: 4.967ms
2.0 cpu, 8192 ram, 40000 iterations, array_ type, array_ 40000: 4.126ms
2.0 cpu, 8192 ram, 40000 iterations, map___ type, map___ 40000: 7.452ms
3.0 cpu, 8192 ram, 40000 iterations, object type, object 40000: 5.628ms
3.0 cpu, 8192 ram, 40000 iterations, array_ type, array_ 40000: 4.127ms
3.0 cpu, 8192 ram, 40000 iterations, map___ type, map___ 40000: 6.751ms
4.0 cpu, 8192 ram, 40000 iterations, object type, object 40000: 5.479ms
4.0 cpu, 8192 ram, 40000 iterations, array_ type, array_ 40000: 4.02ms
4.0 cpu, 8192 ram, 40000 iterations, map___ type, map___ 40000: 7.089ms
0.5 cpu, 16384 ram, 40000 iterations, object type, object 40000: 5.268ms
0.5 cpu, 16384 ram, 40000 iterations, array_ type, array_ 40000: 4.093ms
0.5 cpu, 16384 ram, 40000 iterations, map___ type, map___ 40000: 7.096ms
1.0 cpu, 16384 ram, 40000 iterations, object type, object 40000: 5.565ms
1.0 cpu, 16384 ram, 40000 iterations, array_ type, array_ 40000: 3.849ms
1.0 cpu, 16384 ram, 40000 iterations, map___ type, map___ 40000: 7.193ms
2.0 cpu, 16384 ram, 40000 iterations, object type, object 40000: 5.881ms
2.0 cpu, 16384 ram, 40000 iterations, array_ type, array_ 40000: 4.064ms
2.0 cpu, 16384 ram, 40000 iterations, map___ type, map___ 40000: 7.377ms
3.0 cpu, 16384 ram, 40000 iterations, object type, object 40000: 5.941ms
3.0 cpu, 16384 ram, 40000 iterations, array_ type, array_ 40000: 4.227ms
3.0 cpu, 16384 ram, 40000 iterations, map___ type, map___ 40000: 7.136ms
4.0 cpu, 16384 ram, 40000 iterations, object type, object 40000: 5.332ms
4.0 cpu, 16384 ram, 40000 iterations, array_ type, array_ 40000: 4.237ms
4.0 cpu, 16384 ram, 40000 iterations, map___ type, map___ 40000: 7.411ms
0.5 cpu, 128 ram, 50000 iterations, object type, object 50000: 5.93ms
0.5 cpu, 128 ram, 50000 iterations, array_ type, array_ 50000: 7.216ms
0.5 cpu, 128 ram, 50000 iterations, map___ type, map___ 50000: 7.71ms
1.0 cpu, 128 ram, 50000 iterations, object type, object 50000: 6.047ms
1.0 cpu, 128 ram, 50000 iterations, array_ type, array_ 50000: 4.739ms
1.0 cpu, 128 ram, 50000 iterations, map___ type, map___ 50000: 7.754ms
2.0 cpu, 128 ram, 50000 iterations, object type, object 50000: 5.781ms
2.0 cpu, 128 ram, 50000 iterations, array_ type, array_ 50000: 4.972ms
2.0 cpu, 128 ram, 50000 iterations, map___ type, map___ 50000: 8.218ms
3.0 cpu, 128 ram, 50000 iterations, object type, object 50000: 5.13ms
3.0 cpu, 128 ram, 50000 iterations, array_ type, array_ 50000: 5.072ms
3.0 cpu, 128 ram, 50000 iterations, map___ type, map___ 50000: 9.205ms
4.0 cpu, 128 ram, 50000 iterations, object type, object 50000: 6.057ms
4.0 cpu, 128 ram, 50000 iterations, array_ type, array_ 50000: 4.478ms
4.0 cpu, 128 ram, 50000 iterations, map___ type, map___ 50000: 7.601ms
0.5 cpu, 256 ram, 50000 iterations, object type, object 50000: 5.85ms
0.5 cpu, 256 ram, 50000 iterations, array_ type, array_ 50000: 4.896ms
0.5 cpu, 256 ram, 50000 iterations, map___ type, map___ 50000: 7.695ms
1.0 cpu, 256 ram, 50000 iterations, object type, object 50000: 6.479ms
1.0 cpu, 256 ram, 50000 iterations, array_ type, array_ 50000: 4.576ms
1.0 cpu, 256 ram, 50000 iterations, map___ type, map___ 50000: 7.705ms
2.0 cpu, 256 ram, 50000 iterations, object type, object 50000: 5.699ms
2.0 cpu, 256 ram, 50000 iterations, array_ type, array_ 50000: 4.493ms
2.0 cpu, 256 ram, 50000 iterations, map___ type, map___ 50000: 7.653ms
3.0 cpu, 256 ram, 50000 iterations, object type, object 50000: 5.853ms
3.0 cpu, 256 ram, 50000 iterations, array_ type, array_ 50000: 5.131ms
3.0 cpu, 256 ram, 50000 iterations, map___ type, map___ 50000: 7.875ms
4.0 cpu, 256 ram, 50000 iterations, object type, object 50000: 5.629ms
4.0 cpu, 256 ram, 50000 iterations, array_ type, array_ 50000: 4.586ms
4.0 cpu, 256 ram, 50000 iterations, map___ type, map___ 50000: 7.899ms
0.5 cpu, 512 ram, 50000 iterations, object type, object 50000: 6.142ms
0.5 cpu, 512 ram, 50000 iterations, array_ type, array_ 50000: 4.797ms
0.5 cpu, 512 ram, 50000 iterations, map___ type, map___ 50000: 8.04ms
1.0 cpu, 512 ram, 50000 iterations, object type, object 50000: 7.065ms
1.0 cpu, 512 ram, 50000 iterations, array_ type, array_ 50000: 5.253ms
1.0 cpu, 512 ram, 50000 iterations, map___ type, map___ 50000: 7.819ms
2.0 cpu, 512 ram, 50000 iterations, object type, object 50000: 6.315ms
2.0 cpu, 512 ram, 50000 iterations, array_ type, array_ 50000: 4.661ms
2.0 cpu, 512 ram, 50000 iterations, map___ type, map___ 50000: 7.673ms
3.0 cpu, 512 ram, 50000 iterations, object type, object 50000: 6.037ms
3.0 cpu, 512 ram, 50000 iterations, array_ type, array_ 50000: 4.604ms
3.0 cpu, 512 ram, 50000 iterations, map___ type, map___ 50000: 8.164ms
4.0 cpu, 512 ram, 50000 iterations, object type, object 50000: 5.666ms
4.0 cpu, 512 ram, 50000 iterations, array_ type, array_ 50000: 4.855ms
4.0 cpu, 512 ram, 50000 iterations, map___ type, map___ 50000: 7.228ms
0.5 cpu, 1024 ram, 50000 iterations, object type, object 50000: 5.87ms
0.5 cpu, 1024 ram, 50000 iterations, array_ type, array_ 50000: 4.676ms
0.5 cpu, 1024 ram, 50000 iterations, map___ type, map___ 50000: 7.986ms
1.0 cpu, 1024 ram, 50000 iterations, object type, object 50000: 5.428ms
1.0 cpu, 1024 ram, 50000 iterations, array_ type, array_ 50000: 4.384ms
1.0 cpu, 1024 ram, 50000 iterations, map___ type, map___ 50000: 8.013ms
2.0 cpu, 1024 ram, 50000 iterations, object type, object 50000: 6.407ms
2.0 cpu, 1024 ram, 50000 iterations, array_ type, array_ 50000: 4.757ms
2.0 cpu, 1024 ram, 50000 iterations, map___ type, map___ 50000: 7.63ms
3.0 cpu, 1024 ram, 50000 iterations, object type, object 50000: 5.704ms
3.0 cpu, 1024 ram, 50000 iterations, array_ type, array_ 50000: 4.705ms
3.0 cpu, 1024 ram, 50000 iterations, map___ type, map___ 50000: 7.794ms
4.0 cpu, 1024 ram, 50000 iterations, object type, object 50000: 6.288ms
4.0 cpu, 1024 ram, 50000 iterations, array_ type, array_ 50000: 5.951ms
4.0 cpu, 1024 ram, 50000 iterations, map___ type, map___ 50000: 8.093ms
0.5 cpu, 2048 ram, 50000 iterations, object type, object 50000: 5.845ms
0.5 cpu, 2048 ram, 50000 iterations, array_ type, array_ 50000: 4.684ms
0.5 cpu, 2048 ram, 50000 iterations, map___ type, map___ 50000: 7.797ms
1.0 cpu, 2048 ram, 50000 iterations, object type, object 50000: 5.507ms
1.0 cpu, 2048 ram, 50000 iterations, array_ type, array_ 50000: 4.411ms
1.0 cpu, 2048 ram, 50000 iterations, map___ type, map___ 50000: 7.796ms
2.0 cpu, 2048 ram, 50000 iterations, object type, object 50000: 5.596ms
2.0 cpu, 2048 ram, 50000 iterations, array_ type, array_ 50000: 4.731ms
2.0 cpu, 2048 ram, 50000 iterations, map___ type, map___ 50000: 8.373ms
3.0 cpu, 2048 ram, 50000 iterations, object type, object 50000: 6.072ms
3.0 cpu, 2048 ram, 50000 iterations, array_ type, array_ 50000: 4.452ms
3.0 cpu, 2048 ram, 50000 iterations, map___ type, map___ 50000: 7.831ms
4.0 cpu, 2048 ram, 50000 iterations, object type, object 50000: 5.735ms
4.0 cpu, 2048 ram, 50000 iterations, array_ type, array_ 50000: 4.56ms
4.0 cpu, 2048 ram, 50000 iterations, map___ type, map___ 50000: 7.505ms
0.5 cpu, 4096 ram, 50000 iterations, object type, object 50000: 5.919ms
0.5 cpu, 4096 ram, 50000 iterations, array_ type, array_ 50000: 5.104ms
0.5 cpu, 4096 ram, 50000 iterations, map___ type, map___ 50000: 8.39ms
1.0 cpu, 4096 ram, 50000 iterations, object type, object 50000: 6.515ms
1.0 cpu, 4096 ram, 50000 iterations, array_ type, array_ 50000: 4.626ms
1.0 cpu, 4096 ram, 50000 iterations, map___ type, map___ 50000: 7.902ms
2.0 cpu, 4096 ram, 50000 iterations, object type, object 50000: 5.915ms
2.0 cpu, 4096 ram, 50000 iterations, array_ type, array_ 50000: 4.416ms
2.0 cpu, 4096 ram, 50000 iterations, map___ type, map___ 50000: 7.836ms
3.0 cpu, 4096 ram, 50000 iterations, object type, object 50000: 5.847ms
3.0 cpu, 4096 ram, 50000 iterations, array_ type, array_ 50000: 5.011ms
3.0 cpu, 4096 ram, 50000 iterations, map___ type, map___ 50000: 7.363ms
4.0 cpu, 4096 ram, 50000 iterations, object type, object 50000: 5.485ms
4.0 cpu, 4096 ram, 50000 iterations, array_ type, array_ 50000: 4.464ms
4.0 cpu, 4096 ram, 50000 iterations, map___ type, map___ 50000: 7.864ms
0.5 cpu, 8192 ram, 50000 iterations, object type, object 50000: 5.578ms
0.5 cpu, 8192 ram, 50000 iterations, array_ type, array_ 50000: 4.609ms
0.5 cpu, 8192 ram, 50000 iterations, map___ type, map___ 50000: 8.149ms
1.0 cpu, 8192 ram, 50000 iterations, object type, object 50000: 6.198ms
1.0 cpu, 8192 ram, 50000 iterations, array_ type, array_ 50000: 4.679ms
1.0 cpu, 8192 ram, 50000 iterations, map___ type, map___ 50000: 8.431ms
2.0 cpu, 8192 ram, 50000 iterations, object type, object 50000: 5.569ms
2.0 cpu, 8192 ram, 50000 iterations, array_ type, array_ 50000: 4.767ms
2.0 cpu, 8192 ram, 50000 iterations, map___ type, map___ 50000: 7.449ms
3.0 cpu, 8192 ram, 50000 iterations, object type, object 50000: 5.763ms
3.0 cpu, 8192 ram, 50000 iterations, array_ type, array_ 50000: 4.222ms
3.0 cpu, 8192 ram, 50000 iterations, map___ type, map___ 50000: 7.718ms
4.0 cpu, 8192 ram, 50000 iterations, object type, object 50000: 6.163ms
4.0 cpu, 8192 ram, 50000 iterations, array_ type, array_ 50000: 5.042ms
4.0 cpu, 8192 ram, 50000 iterations, map___ type, map___ 50000: 7.929ms
0.5 cpu, 16384 ram, 50000 iterations, object type, object 50000: 5.754ms
0.5 cpu, 16384 ram, 50000 iterations, array_ type, array_ 50000: 4.866ms
0.5 cpu, 16384 ram, 50000 iterations, map___ type, map___ 50000: 7.528ms
1.0 cpu, 16384 ram, 50000 iterations, object type, object 50000: 6.307ms
1.0 cpu, 16384 ram, 50000 iterations, array_ type, array_ 50000: 4.786ms
1.0 cpu, 16384 ram, 50000 iterations, map___ type, map___ 50000: 7.897ms
2.0 cpu, 16384 ram, 50000 iterations, object type, object 50000: 5.532ms
2.0 cpu, 16384 ram, 50000 iterations, array_ type, array_ 50000: 4.803ms
2.0 cpu, 16384 ram, 50000 iterations, map___ type, map___ 50000: 7.588ms
3.0 cpu, 16384 ram, 50000 iterations, object type, object 50000: 6.33ms
3.0 cpu, 16384 ram, 50000 iterations, array_ type, array_ 50000: 5.969ms
3.0 cpu, 16384 ram, 50000 iterations, map___ type, map___ 50000: 7.337ms
4.0 cpu, 16384 ram, 50000 iterations, object type, object 50000: 5.687ms
4.0 cpu, 16384 ram, 50000 iterations, array_ type, array_ 50000: 5.158ms
4.0 cpu, 16384 ram, 50000 iterations, map___ type, map___ 50000: 7.804ms
0.5 cpu, 128 ram, 60000 iterations, object type, object 60000: 6.823ms
0.5 cpu, 128 ram, 60000 iterations, array_ type, array_ 60000: 4.966ms
0.5 cpu, 128 ram, 60000 iterations, map___ type, map___ 60000: 10.215ms
1.0 cpu, 128 ram, 60000 iterations, object type, object 60000: 7.711ms
1.0 cpu, 128 ram, 60000 iterations, array_ type, array_ 60000: 5.803ms
1.0 cpu, 128 ram, 60000 iterations, map___ type, map___ 60000: 9.629ms
2.0 cpu, 128 ram, 60000 iterations, object type, object 60000: 6.861ms
2.0 cpu, 128 ram, 60000 iterations, array_ type, array_ 60000: 6.076ms
2.0 cpu, 128 ram, 60000 iterations, map___ type, map___ 60000: 9.174ms
3.0 cpu, 128 ram, 60000 iterations, object type, object 60000: 7.843ms
3.0 cpu, 128 ram, 60000 iterations, array_ type, array_ 60000: 4.979ms
3.0 cpu, 128 ram, 60000 iterations, map___ type, map___ 60000: 9.389ms
4.0 cpu, 128 ram, 60000 iterations, object type, object 60000: 7.624ms
4.0 cpu, 128 ram, 60000 iterations, array_ type, array_ 60000: 5.079ms
4.0 cpu, 128 ram, 60000 iterations, map___ type, map___ 60000: 9.102ms
0.5 cpu, 256 ram, 60000 iterations, object type, object 60000: 7.227ms
0.5 cpu, 256 ram, 60000 iterations, array_ type, array_ 60000: 5.141ms
0.5 cpu, 256 ram, 60000 iterations, map___ type, map___ 60000: 9.268ms
1.0 cpu, 256 ram, 60000 iterations, object type, object 60000: 7.166ms
1.0 cpu, 256 ram, 60000 iterations, array_ type, array_ 60000: 4.903ms
1.0 cpu, 256 ram, 60000 iterations, map___ type, map___ 60000: 8.869ms
2.0 cpu, 256 ram, 60000 iterations, object type, object 60000: 7.118ms
2.0 cpu, 256 ram, 60000 iterations, array_ type, array_ 60000: 5.455ms
2.0 cpu, 256 ram, 60000 iterations, map___ type, map___ 60000: 9.538ms
3.0 cpu, 256 ram, 60000 iterations, object type, object 60000: 8.69ms
3.0 cpu, 256 ram, 60000 iterations, array_ type, array_ 60000: 5.289ms
3.0 cpu, 256 ram, 60000 iterations, map___ type, map___ 60000: 8.983ms
4.0 cpu, 256 ram, 60000 iterations, object type, object 60000: 7.712ms
4.0 cpu, 256 ram, 60000 iterations, array_ type, array_ 60000: 4.996ms
4.0 cpu, 256 ram, 60000 iterations, map___ type, map___ 60000: 9.041ms
0.5 cpu, 512 ram, 60000 iterations, object type, object 60000: 8.114ms
0.5 cpu, 512 ram, 60000 iterations, array_ type, array_ 60000: 8.978ms
0.5 cpu, 512 ram, 60000 iterations, map___ type, map___ 60000: 8.907ms
1.0 cpu, 512 ram, 60000 iterations, object type, object 60000: 7.64ms
1.0 cpu, 512 ram, 60000 iterations, array_ type, array_ 60000: 5.293ms
1.0 cpu, 512 ram, 60000 iterations, map___ type, map___ 60000: 9.2ms
2.0 cpu, 512 ram, 60000 iterations, object type, object 60000: 7.483ms
2.0 cpu, 512 ram, 60000 iterations, array_ type, array_ 60000: 5.127ms
2.0 cpu, 512 ram, 60000 iterations, map___ type, map___ 60000: 9.634ms
3.0 cpu, 512 ram, 60000 iterations, object type, object 60000: 7.544ms
3.0 cpu, 512 ram, 60000 iterations, array_ type, array_ 60000: 5.436ms
3.0 cpu, 512 ram, 60000 iterations, map___ type, map___ 60000: 9.434ms
4.0 cpu, 512 ram, 60000 iterations, object type, object 60000: 8.063ms
4.0 cpu, 512 ram, 60000 iterations, array_ type, array_ 60000: 5.27ms
4.0 cpu, 512 ram, 60000 iterations, map___ type, map___ 60000: 9.04ms
0.5 cpu, 1024 ram, 60000 iterations, object type, object 60000: 7.684ms
0.5 cpu, 1024 ram, 60000 iterations, array_ type, array_ 60000: 5.203ms
0.5 cpu, 1024 ram, 60000 iterations, map___ type, map___ 60000: 9.161ms
1.0 cpu, 1024 ram, 60000 iterations, object type, object 60000: 7.95ms
1.0 cpu, 1024 ram, 60000 iterations, array_ type, array_ 60000: 6.841ms
1.0 cpu, 1024 ram, 60000 iterations, map___ type, map___ 60000: 9.467ms
2.0 cpu, 1024 ram, 60000 iterations, object type, object 60000: 7.82ms
2.0 cpu, 1024 ram, 60000 iterations, array_ type, array_ 60000: 5.317ms
2.0 cpu, 1024 ram, 60000 iterations, map___ type, map___ 60000: 9.391ms
3.0 cpu, 1024 ram, 60000 iterations, object type, object 60000: 7.528ms
3.0 cpu, 1024 ram, 60000 iterations, array_ type, array_ 60000: 5.304ms
3.0 cpu, 1024 ram, 60000 iterations, map___ type, map___ 60000: 9.201ms
4.0 cpu, 1024 ram, 60000 iterations, object type, object 60000: 9.859ms
4.0 cpu, 1024 ram, 60000 iterations, array_ type, array_ 60000: 5.612ms
4.0 cpu, 1024 ram, 60000 iterations, map___ type, map___ 60000: 9.095ms
0.5 cpu, 2048 ram, 60000 iterations, object type, object 60000: 7.745ms
0.5 cpu, 2048 ram, 60000 iterations, array_ type, array_ 60000: 5.101ms
0.5 cpu, 2048 ram, 60000 iterations, map___ type, map___ 60000: 9.925ms
1.0 cpu, 2048 ram, 60000 iterations, object type, object 60000: 7.685ms
1.0 cpu, 2048 ram, 60000 iterations, array_ type, array_ 60000: 4.981ms
1.0 cpu, 2048 ram, 60000 iterations, map___ type, map___ 60000: 9.322ms
2.0 cpu, 2048 ram, 60000 iterations, object type, object 60000: 7.018ms
2.0 cpu, 2048 ram, 60000 iterations, array_ type, array_ 60000: 5.378ms
2.0 cpu, 2048 ram, 60000 iterations, map___ type, map___ 60000: 9.336ms
3.0 cpu, 2048 ram, 60000 iterations, object type, object 60000: 7.828ms
3.0 cpu, 2048 ram, 60000 iterations, array_ type, array_ 60000: 5.605ms
3.0 cpu, 2048 ram, 60000 iterations, map___ type, map___ 60000: 9.611ms
4.0 cpu, 2048 ram, 60000 iterations, object type, object 60000: 8.012ms
4.0 cpu, 2048 ram, 60000 iterations, array_ type, array_ 60000: 5.269ms
4.0 cpu, 2048 ram, 60000 iterations, map___ type, map___ 60000: 11.806ms
0.5 cpu, 4096 ram, 60000 iterations, object type, object 60000: 7.724ms
0.5 cpu, 4096 ram, 60000 iterations, array_ type, array_ 60000: 5.231ms
0.5 cpu, 4096 ram, 60000 iterations, map___ type, map___ 60000: 9.234ms
1.0 cpu, 4096 ram, 60000 iterations, object type, object 60000: 7.633ms
1.0 cpu, 4096 ram, 60000 iterations, array_ type, array_ 60000: 5.284ms
1.0 cpu, 4096 ram, 60000 iterations, map___ type, map___ 60000: 9.636ms
2.0 cpu, 4096 ram, 60000 iterations, object type, object 60000: 7.654ms
2.0 cpu, 4096 ram, 60000 iterations, array_ type, array_ 60000: 5.263ms
2.0 cpu, 4096 ram, 60000 iterations, map___ type, map___ 60000: 9.461ms
3.0 cpu, 4096 ram, 60000 iterations, object type, object 60000: 7.338ms
3.0 cpu, 4096 ram, 60000 iterations, array_ type, array_ 60000: 5.149ms
3.0 cpu, 4096 ram, 60000 iterations, map___ type, map___ 60000: 9.156ms
4.0 cpu, 4096 ram, 60000 iterations, object type, object 60000: 7.707ms
4.0 cpu, 4096 ram, 60000 iterations, array_ type, array_ 60000: 5.111ms
4.0 cpu, 4096 ram, 60000 iterations, map___ type, map___ 60000: 9.407ms
0.5 cpu, 8192 ram, 60000 iterations, object type, object 60000: 7.721ms
0.5 cpu, 8192 ram, 60000 iterations, array_ type, array_ 60000: 4.979ms
0.5 cpu, 8192 ram, 60000 iterations, map___ type, map___ 60000: 9.723ms
1.0 cpu, 8192 ram, 60000 iterations, object type, object 60000: 7.54ms
1.0 cpu, 8192 ram, 60000 iterations, array_ type, array_ 60000: 4.983ms
1.0 cpu, 8192 ram, 60000 iterations, map___ type, map___ 60000: 9.696ms
2.0 cpu, 8192 ram, 60000 iterations, object type, object 60000: 10.616ms
2.0 cpu, 8192 ram, 60000 iterations, array_ type, array_ 60000: 5.899ms
2.0 cpu, 8192 ram, 60000 iterations, map___ type, map___ 60000: 9.747ms
3.0 cpu, 8192 ram, 60000 iterations, object type, object 60000: 7.696ms
3.0 cpu, 8192 ram, 60000 iterations, array_ type, array_ 60000: 5.161ms
3.0 cpu, 8192 ram, 60000 iterations, map___ type, map___ 60000: 9.366ms
4.0 cpu, 8192 ram, 60000 iterations, object type, object 60000: 8.436ms
4.0 cpu, 8192 ram, 60000 iterations, array_ type, array_ 60000: 5.23ms
4.0 cpu, 8192 ram, 60000 iterations, map___ type, map___ 60000: 9.843ms
0.5 cpu, 16384 ram, 60000 iterations, object type, object 60000: 7.749ms
0.5 cpu, 16384 ram, 60000 iterations, array_ type, array_ 60000: 5.183ms
0.5 cpu, 16384 ram, 60000 iterations, map___ type, map___ 60000: 10.519ms
1.0 cpu, 16384 ram, 60000 iterations, object type, object 60000: 7.819ms
1.0 cpu, 16384 ram, 60000 iterations, array_ type, array_ 60000: 5.176ms
1.0 cpu, 16384 ram, 60000 iterations, map___ type, map___ 60000: 10.051ms
2.0 cpu, 16384 ram, 60000 iterations, object type, object 60000: 8.321ms
2.0 cpu, 16384 ram, 60000 iterations, array_ type, array_ 60000: 4.829ms
2.0 cpu, 16384 ram, 60000 iterations, map___ type, map___ 60000: 9.473ms
3.0 cpu, 16384 ram, 60000 iterations, object type, object 60000: 7.575ms
3.0 cpu, 16384 ram, 60000 iterations, array_ type, array_ 60000: 5.027ms
3.0 cpu, 16384 ram, 60000 iterations, map___ type, map___ 60000: 9.71ms
4.0 cpu, 16384 ram, 60000 iterations, object type, object 60000: 7.742ms
4.0 cpu, 16384 ram, 60000 iterations, array_ type, array_ 60000: 5.241ms
4.0 cpu, 16384 ram, 60000 iterations, map___ type, map___ 60000: 9.036ms
0.5 cpu, 128 ram, 70000 iterations, object type, object 70000: 8.248ms
0.5 cpu, 128 ram, 70000 iterations, array_ type, array_ 70000: 5.826ms
0.5 cpu, 128 ram, 70000 iterations, map___ type, map___ 70000: 11.684ms
1.0 cpu, 128 ram, 70000 iterations, object type, object 70000: 7.925ms
1.0 cpu, 128 ram, 70000 iterations, array_ type, array_ 70000: 5.344ms
1.0 cpu, 128 ram, 70000 iterations, map___ type, map___ 70000: 11.625ms
2.0 cpu, 128 ram, 70000 iterations, object type, object 70000: 8.135ms
2.0 cpu, 128 ram, 70000 iterations, array_ type, array_ 70000: 5.5ms
2.0 cpu, 128 ram, 70000 iterations, map___ type, map___ 70000: 12.351ms
3.0 cpu, 128 ram, 70000 iterations, object type, object 70000: 8.262ms
3.0 cpu, 128 ram, 70000 iterations, array_ type, array_ 70000: 5.392ms
3.0 cpu, 128 ram, 70000 iterations, map___ type, map___ 70000: 11.523ms
4.0 cpu, 128 ram, 70000 iterations, object type, object 70000: 7.359ms
4.0 cpu, 128 ram, 70000 iterations, array_ type, array_ 70000: 5.567ms
4.0 cpu, 128 ram, 70000 iterations, map___ type, map___ 70000: 11.284ms
0.5 cpu, 256 ram, 70000 iterations, object type, object 70000: 8.152ms
0.5 cpu, 256 ram, 70000 iterations, array_ type, array_ 70000: 5.344ms
0.5 cpu, 256 ram, 70000 iterations, map___ type, map___ 70000: 11.478ms
1.0 cpu, 256 ram, 70000 iterations, object type, object 70000: 7.79ms
1.0 cpu, 256 ram, 70000 iterations, array_ type, array_ 70000: 5.915ms
1.0 cpu, 256 ram, 70000 iterations, map___ type, map___ 70000: 11.124ms
2.0 cpu, 256 ram, 70000 iterations, object type, object 70000: 7.653ms
2.0 cpu, 256 ram, 70000 iterations, array_ type, array_ 70000: 5.483ms
2.0 cpu, 256 ram, 70000 iterations, map___ type, map___ 70000: 11.322ms
3.0 cpu, 256 ram, 70000 iterations, object type, object 70000: 7.443ms
3.0 cpu, 256 ram, 70000 iterations, array_ type, array_ 70000: 5.482ms
3.0 cpu, 256 ram, 70000 iterations, map___ type, map___ 70000: 12.37ms
4.0 cpu, 256 ram, 70000 iterations, object type, object 70000: 7.979ms
4.0 cpu, 256 ram, 70000 iterations, array_ type, array_ 70000: 8.586ms
4.0 cpu, 256 ram, 70000 iterations, map___ type, map___ 70000: 11.664ms
0.5 cpu, 512 ram, 70000 iterations, object type, object 70000: 8.106ms
0.5 cpu, 512 ram, 70000 iterations, array_ type, array_ 70000: 5.669ms
0.5 cpu, 512 ram, 70000 iterations, map___ type, map___ 70000: 10.867ms
1.0 cpu, 512 ram, 70000 iterations, object type, object 70000: 7.994ms
1.0 cpu, 512 ram, 70000 iterations, array_ type, array_ 70000: 5.298ms
1.0 cpu, 512 ram, 70000 iterations, map___ type, map___ 70000: 13.968ms
2.0 cpu, 512 ram, 70000 iterations, object type, object 70000: 9.51ms
2.0 cpu, 512 ram, 70000 iterations, array_ type, array_ 70000: 5.313ms
2.0 cpu, 512 ram, 70000 iterations, map___ type, map___ 70000: 12.166ms
3.0 cpu, 512 ram, 70000 iterations, object type, object 70000: 8.431ms
3.0 cpu, 512 ram, 70000 iterations, array_ type, array_ 70000: 5.462ms
3.0 cpu, 512 ram, 70000 iterations, map___ type, map___ 70000: 11.91ms
4.0 cpu, 512 ram, 70000 iterations, object type, object 70000: 7.782ms
4.0 cpu, 512 ram, 70000 iterations, array_ type, array_ 70000: 5.494ms
4.0 cpu, 512 ram, 70000 iterations, map___ type, map___ 70000: 11.35ms
0.5 cpu, 1024 ram, 70000 iterations, object type, object 70000: 8.08ms
0.5 cpu, 1024 ram, 70000 iterations, array_ type, array_ 70000: 6.067ms
0.5 cpu, 1024 ram, 70000 iterations, map___ type, map___ 70000: 11.524ms
1.0 cpu, 1024 ram, 70000 iterations, object type, object 70000: 9.669ms
1.0 cpu, 1024 ram, 70000 iterations, array_ type, array_ 70000: 5.486ms
1.0 cpu, 1024 ram, 70000 iterations, map___ type, map___ 70000: 11.222ms
2.0 cpu, 1024 ram, 70000 iterations, object type, object 70000: 8.146ms
2.0 cpu, 1024 ram, 70000 iterations, array_ type, array_ 70000: 5.225ms
2.0 cpu, 1024 ram, 70000 iterations, map___ type, map___ 70000: 10.696ms
3.0 cpu, 1024 ram, 70000 iterations, object type, object 70000: 7.725ms
3.0 cpu, 1024 ram, 70000 iterations, array_ type, array_ 70000: 5.555ms
3.0 cpu, 1024 ram, 70000 iterations, map___ type, map___ 70000: 11.82ms
4.0 cpu, 1024 ram, 70000 iterations, object type, object 70000: 7.786ms
4.0 cpu, 1024 ram, 70000 iterations, array_ type, array_ 70000: 6.198ms
4.0 cpu, 1024 ram, 70000 iterations, map___ type, map___ 70000: 11.104ms
0.5 cpu, 2048 ram, 70000 iterations, object type, object 70000: 8.066ms
0.5 cpu, 2048 ram, 70000 iterations, array_ type, array_ 70000: 5.705ms
0.5 cpu, 2048 ram, 70000 iterations, map___ type, map___ 70000: 12.003ms
1.0 cpu, 2048 ram, 70000 iterations, object type, object 70000: 7.811ms
1.0 cpu, 2048 ram, 70000 iterations, array_ type, array_ 70000: 5.613ms
1.0 cpu, 2048 ram, 70000 iterations, map___ type, map___ 70000: 11.853ms
2.0 cpu, 2048 ram, 70000 iterations, object type, object 70000: 9.264ms
2.0 cpu, 2048 ram, 70000 iterations, array_ type, array_ 70000: 5.685ms
2.0 cpu, 2048 ram, 70000 iterations, map___ type, map___ 70000: 12.025ms
3.0 cpu, 2048 ram, 70000 iterations, object type, object 70000: 9.347ms
3.0 cpu, 2048 ram, 70000 iterations, array_ type, array_ 70000: 5.343ms
3.0 cpu, 2048 ram, 70000 iterations, map___ type, map___ 70000: 11.821ms
4.0 cpu, 2048 ram, 70000 iterations, object type, object 70000: 8.33ms
4.0 cpu, 2048 ram, 70000 iterations, array_ type, array_ 70000: 5.395ms
4.0 cpu, 2048 ram, 70000 iterations, map___ type, map___ 70000: 11.435ms
0.5 cpu, 4096 ram, 70000 iterations, object type, object 70000: 8.335ms
0.5 cpu, 4096 ram, 70000 iterations, array_ type, array_ 70000: 5.134ms
0.5 cpu, 4096 ram, 70000 iterations, map___ type, map___ 70000: 12.38ms
1.0 cpu, 4096 ram, 70000 iterations, object type, object 70000: 15.088ms
1.0 cpu, 4096 ram, 70000 iterations, array_ type, array_ 70000: 5.453ms
1.0 cpu, 4096 ram, 70000 iterations, map___ type, map___ 70000: 11.359ms
2.0 cpu, 4096 ram, 70000 iterations, object type, object 70000: 8.323ms
2.0 cpu, 4096 ram, 70000 iterations, array_ type, array_ 70000: 5.535ms
2.0 cpu, 4096 ram, 70000 iterations, map___ type, map___ 70000: 11.823ms
3.0 cpu, 4096 ram, 70000 iterations, object type, object 70000: 8.38ms
3.0 cpu, 4096 ram, 70000 iterations, array_ type, array_ 70000: 5.954ms
3.0 cpu, 4096 ram, 70000 iterations, map___ type, map___ 70000: 11.725ms
4.0 cpu, 4096 ram, 70000 iterations, object type, object 70000: 7.956ms
4.0 cpu, 4096 ram, 70000 iterations, array_ type, array_ 70000: 6.775ms
4.0 cpu, 4096 ram, 70000 iterations, map___ type, map___ 70000: 11.513ms
0.5 cpu, 8192 ram, 70000 iterations, object type, object 70000: 8.058ms
0.5 cpu, 8192 ram, 70000 iterations, array_ type, array_ 70000: 5.774ms
0.5 cpu, 8192 ram, 70000 iterations, map___ type, map___ 70000: 11.487ms
1.0 cpu, 8192 ram, 70000 iterations, object type, object 70000: 8.642ms
1.0 cpu, 8192 ram, 70000 iterations, array_ type, array_ 70000: 5.737ms
1.0 cpu, 8192 ram, 70000 iterations, map___ type, map___ 70000: 11.827ms
2.0 cpu, 8192 ram, 70000 iterations, object type, object 70000: 8.05ms
2.0 cpu, 8192 ram, 70000 iterations, array_ type, array_ 70000: 5.773ms
2.0 cpu, 8192 ram, 70000 iterations, map___ type, map___ 70000: 11.554ms
3.0 cpu, 8192 ram, 70000 iterations, object type, object 70000: 7.812ms
3.0 cpu, 8192 ram, 70000 iterations, array_ type, array_ 70000: 5.598ms
3.0 cpu, 8192 ram, 70000 iterations, map___ type, map___ 70000: 11.393ms
4.0 cpu, 8192 ram, 70000 iterations, object type, object 70000: 8.064ms
4.0 cpu, 8192 ram, 70000 iterations, array_ type, array_ 70000: 5.58ms
4.0 cpu, 8192 ram, 70000 iterations, map___ type, map___ 70000: 11.615ms
0.5 cpu, 16384 ram, 70000 iterations, object type, object 70000: 8.271ms
0.5 cpu, 16384 ram, 70000 iterations, array_ type, array_ 70000: 5.185ms
0.5 cpu, 16384 ram, 70000 iterations, map___ type, map___ 70000: 11.166ms
1.0 cpu, 16384 ram, 70000 iterations, object type, object 70000: 10.317ms
1.0 cpu, 16384 ram, 70000 iterations, array_ type, array_ 70000: 5.123ms
1.0 cpu, 16384 ram, 70000 iterations, map___ type, map___ 70000: 11.753ms
2.0 cpu, 16384 ram, 70000 iterations, object type, object 70000: 8.234ms
2.0 cpu, 16384 ram, 70000 iterations, array_ type, array_ 70000: 5.588ms
2.0 cpu, 16384 ram, 70000 iterations, map___ type, map___ 70000: 11.682ms
3.0 cpu, 16384 ram, 70000 iterations, object type, object 70000: 8.028ms
3.0 cpu, 16384 ram, 70000 iterations, array_ type, array_ 70000: 7.237ms
3.0 cpu, 16384 ram, 70000 iterations, map___ type, map___ 70000: 12.177ms
4.0 cpu, 16384 ram, 70000 iterations, object type, object 70000: 8.007ms
4.0 cpu, 16384 ram, 70000 iterations, array_ type, array_ 70000: 8.574ms
4.0 cpu, 16384 ram, 70000 iterations, map___ type, map___ 70000: 10.894ms
0.5 cpu, 128 ram, 80000 iterations, object type, object 80000: 9.71ms
0.5 cpu, 128 ram, 80000 iterations, array_ type, array_ 80000: 6.426ms
0.5 cpu, 128 ram, 80000 iterations, map___ type, map___ 80000: 13.099ms
1.0 cpu, 128 ram, 80000 iterations, object type, object 80000: 9.141ms
1.0 cpu, 128 ram, 80000 iterations, array_ type, array_ 80000: 6.192ms
1.0 cpu, 128 ram, 80000 iterations, map___ type, map___ 80000: 13.323ms
2.0 cpu, 128 ram, 80000 iterations, object type, object 80000: 8.687ms
2.0 cpu, 128 ram, 80000 iterations, array_ type, array_ 80000: 6.968ms
2.0 cpu, 128 ram, 80000 iterations, map___ type, map___ 80000: 13.342ms
3.0 cpu, 128 ram, 80000 iterations, object type, object 80000: 9.83ms
3.0 cpu, 128 ram, 80000 iterations, array_ type, array_ 80000: 6.103ms
3.0 cpu, 128 ram, 80000 iterations, map___ type, map___ 80000: 13.908ms
4.0 cpu, 128 ram, 80000 iterations, object type, object 80000: 9.692ms
4.0 cpu, 128 ram, 80000 iterations, array_ type, array_ 80000: 6.103ms
4.0 cpu, 128 ram, 80000 iterations, map___ type, map___ 80000: 13.193ms
0.5 cpu, 256 ram, 80000 iterations, object type, object 80000: 9.819ms
0.5 cpu, 256 ram, 80000 iterations, array_ type, array_ 80000: 6.264ms
0.5 cpu, 256 ram, 80000 iterations, map___ type, map___ 80000: 13.827ms
1.0 cpu, 256 ram, 80000 iterations, object type, object 80000: 10.18ms
1.0 cpu, 256 ram, 80000 iterations, array_ type, array_ 80000: 6.237ms
1.0 cpu, 256 ram, 80000 iterations, map___ type, map___ 80000: 12.439ms
2.0 cpu, 256 ram, 80000 iterations, object type, object 80000: 10.067ms
2.0 cpu, 256 ram, 80000 iterations, array_ type, array_ 80000: 6.152ms
2.0 cpu, 256 ram, 80000 iterations, map___ type, map___ 80000: 13.734ms
3.0 cpu, 256 ram, 80000 iterations, object type, object 80000: 9.802ms
3.0 cpu, 256 ram, 80000 iterations, array_ type, array_ 80000: 6.091ms
3.0 cpu, 256 ram, 80000 iterations, map___ type, map___ 80000: 12.987ms
4.0 cpu, 256 ram, 80000 iterations, object type, object 80000: 9.123ms
4.0 cpu, 256 ram, 80000 iterations, array_ type, array_ 80000: 8.067ms
4.0 cpu, 256 ram, 80000 iterations, map___ type, map___ 80000: 13.203ms
0.5 cpu, 512 ram, 80000 iterations, object type, object 80000: 9.482ms
0.5 cpu, 512 ram, 80000 iterations, array_ type, array_ 80000: 6.147ms
0.5 cpu, 512 ram, 80000 iterations, map___ type, map___ 80000: 13.281ms
1.0 cpu, 512 ram, 80000 iterations, object type, object 80000: 10.255ms
1.0 cpu, 512 ram, 80000 iterations, array_ type, array_ 80000: 6.129ms
1.0 cpu, 512 ram, 80000 iterations, map___ type, map___ 80000: 13.854ms
2.0 cpu, 512 ram, 80000 iterations, object type, object 80000: 9.465ms
2.0 cpu, 512 ram, 80000 iterations, array_ type, array_ 80000: 6.179ms
2.0 cpu, 512 ram, 80000 iterations, map___ type, map___ 80000: 13.711ms
3.0 cpu, 512 ram, 80000 iterations, object type, object 80000: 9.289ms
3.0 cpu, 512 ram, 80000 iterations, array_ type, array_ 80000: 6.531ms
3.0 cpu, 512 ram, 80000 iterations, map___ type, map___ 80000: 13.261ms
4.0 cpu, 512 ram, 80000 iterations, object type, object 80000: 10.227ms
4.0 cpu, 512 ram, 80000 iterations, array_ type, array_ 80000: 5.997ms
4.0 cpu, 512 ram, 80000 iterations, map___ type, map___ 80000: 12.666ms
0.5 cpu, 1024 ram, 80000 iterations, object type, object 80000: 9.342ms
0.5 cpu, 1024 ram, 80000 iterations, array_ type, array_ 80000: 6.271ms
0.5 cpu, 1024 ram, 80000 iterations, map___ type, map___ 80000: 12.53ms
1.0 cpu, 1024 ram, 80000 iterations, object type, object 80000: 11.784ms
1.0 cpu, 1024 ram, 80000 iterations, array_ type, array_ 80000: 6.363ms
1.0 cpu, 1024 ram, 80000 iterations, map___ type, map___ 80000: 13.714ms
2.0 cpu, 1024 ram, 80000 iterations, object type, object 80000: 8.347ms
2.0 cpu, 1024 ram, 80000 iterations, array_ type, array_ 80000: 6.288ms
2.0 cpu, 1024 ram, 80000 iterations, map___ type, map___ 80000: 11.764ms
3.0 cpu, 1024 ram, 80000 iterations, object type, object 80000: 8.937ms
3.0 cpu, 1024 ram, 80000 iterations, array_ type, array_ 80000: 6.61ms
3.0 cpu, 1024 ram, 80000 iterations, map___ type, map___ 80000: 12.088ms
4.0 cpu, 1024 ram, 80000 iterations, object type, object 80000: 8.815ms
4.0 cpu, 1024 ram, 80000 iterations, array_ type, array_ 80000: 9.497ms
4.0 cpu, 1024 ram, 80000 iterations, map___ type, map___ 80000: 12.648ms
0.5 cpu, 2048 ram, 80000 iterations, object type, object 80000: 8.31ms
0.5 cpu, 2048 ram, 80000 iterations, array_ type, array_ 80000: 6.189ms
0.5 cpu, 2048 ram, 80000 iterations, map___ type, map___ 80000: 12.706ms
1.0 cpu, 2048 ram, 80000 iterations, object type, object 80000: 8.881ms
1.0 cpu, 2048 ram, 80000 iterations, array_ type, array_ 80000: 5.776ms
1.0 cpu, 2048 ram, 80000 iterations, map___ type, map___ 80000: 13.926ms
2.0 cpu, 2048 ram, 80000 iterations, object type, object 80000: 8.844ms
2.0 cpu, 2048 ram, 80000 iterations, array_ type, array_ 80000: 5.956ms
2.0 cpu, 2048 ram, 80000 iterations, map___ type, map___ 80000: 12.556ms
3.0 cpu, 2048 ram, 80000 iterations, object type, object 80000: 9.149ms
3.0 cpu, 2048 ram, 80000 iterations, array_ type, array_ 80000: 6.449ms
3.0 cpu, 2048 ram, 80000 iterations, map___ type, map___ 80000: 12.267ms
4.0 cpu, 2048 ram, 80000 iterations, object type, object 80000: 9.115ms
4.0 cpu, 2048 ram, 80000 iterations, array_ type, array_ 80000: 6ms
4.0 cpu, 2048 ram, 80000 iterations, map___ type, map___ 80000: 12.226ms
0.5 cpu, 4096 ram, 80000 iterations, object type, object 80000: 8.864ms
0.5 cpu, 4096 ram, 80000 iterations, array_ type, array_ 80000: 6.068ms
0.5 cpu, 4096 ram, 80000 iterations, map___ type, map___ 80000: 12.42ms
1.0 cpu, 4096 ram, 80000 iterations, object type, object 80000: 8.862ms
1.0 cpu, 4096 ram, 80000 iterations, array_ type, array_ 80000: 6.082ms
1.0 cpu, 4096 ram, 80000 iterations, map___ type, map___ 80000: 12.172ms
2.0 cpu, 4096 ram, 80000 iterations, object type, object 80000: 8.422ms
2.0 cpu, 4096 ram, 80000 iterations, array_ type, array_ 80000: 7.23ms
2.0 cpu, 4096 ram, 80000 iterations, map___ type, map___ 80000: 12.812ms
3.0 cpu, 4096 ram, 80000 iterations, object type, object 80000: 9.037ms
3.0 cpu, 4096 ram, 80000 iterations, array_ type, array_ 80000: 6.281ms
3.0 cpu, 4096 ram, 80000 iterations, map___ type, map___ 80000: 12.847ms
4.0 cpu, 4096 ram, 80000 iterations, object type, object 80000: 8.624ms
4.0 cpu, 4096 ram, 80000 iterations, array_ type, array_ 80000: 6.248ms
4.0 cpu, 4096 ram, 80000 iterations, map___ type, map___ 80000: 14.734ms
0.5 cpu, 8192 ram, 80000 iterations, object type, object 80000: 8.825ms
0.5 cpu, 8192 ram, 80000 iterations, array_ type, array_ 80000: 6.722ms
0.5 cpu, 8192 ram, 80000 iterations, map___ type, map___ 80000: 12.647ms
1.0 cpu, 8192 ram, 80000 iterations, object type, object 80000: 8.878ms
1.0 cpu, 8192 ram, 80000 iterations, array_ type, array_ 80000: 5.996ms
1.0 cpu, 8192 ram, 80000 iterations, map___ type, map___ 80000: 12.204ms
2.0 cpu, 8192 ram, 80000 iterations, object type, object 80000: 8.599ms
2.0 cpu, 8192 ram, 80000 iterations, array_ type, array_ 80000: 9.882ms
2.0 cpu, 8192 ram, 80000 iterations, map___ type, map___ 80000: 12.486ms
3.0 cpu, 8192 ram, 80000 iterations, object type, object 80000: 8.163ms
3.0 cpu, 8192 ram, 80000 iterations, array_ type, array_ 80000: 5.962ms
3.0 cpu, 8192 ram, 80000 iterations, map___ type, map___ 80000: 11.866ms
4.0 cpu, 8192 ram, 80000 iterations, object type, object 80000: 8.671ms
4.0 cpu, 8192 ram, 80000 iterations, array_ type, array_ 80000: 6.289ms
4.0 cpu, 8192 ram, 80000 iterations, map___ type, map___ 80000: 11.915ms
0.5 cpu, 16384 ram, 80000 iterations, object type, object 80000: 9.251ms
0.5 cpu, 16384 ram, 80000 iterations, array_ type, array_ 80000: 6.097ms
0.5 cpu, 16384 ram, 80000 iterations, map___ type, map___ 80000: 12.417ms
1.0 cpu, 16384 ram, 80000 iterations, object type, object 80000: 8.605ms
1.0 cpu, 16384 ram, 80000 iterations, array_ type, array_ 80000: 6.447ms
1.0 cpu, 16384 ram, 80000 iterations, map___ type, map___ 80000: 12.46ms
2.0 cpu, 16384 ram, 80000 iterations, object type, object 80000: 8.047ms
2.0 cpu, 16384 ram, 80000 iterations, array_ type, array_ 80000: 6.1ms
2.0 cpu, 16384 ram, 80000 iterations, map___ type, map___ 80000: 12.911ms
3.0 cpu, 16384 ram, 80000 iterations, object type, object 80000: 9.646ms
3.0 cpu, 16384 ram, 80000 iterations, array_ type, array_ 80000: 6.463ms
3.0 cpu, 16384 ram, 80000 iterations, map___ type, map___ 80000: 13.07ms
4.0 cpu, 16384 ram, 80000 iterations, object type, object 80000: 8.38ms
4.0 cpu, 16384 ram, 80000 iterations, array_ type, array_ 80000: 5.926ms
4.0 cpu, 16384 ram, 80000 iterations, map___ type, map___ 80000: 12.589ms
0.5 cpu, 128 ram, 90000 iterations, object type, object 90000: 10.738ms
0.5 cpu, 128 ram, 90000 iterations, array_ type, array_ 90000: 6.581ms
0.5 cpu, 128 ram, 90000 iterations, map___ type, map___ 90000: 14.051ms
1.0 cpu, 128 ram, 90000 iterations, object type, object 90000: 10.361ms
1.0 cpu, 128 ram, 90000 iterations, array_ type, array_ 90000: 6.682ms
1.0 cpu, 128 ram, 90000 iterations, map___ type, map___ 90000: 13.786ms
2.0 cpu, 128 ram, 90000 iterations, object type, object 90000: 9.692ms
2.0 cpu, 128 ram, 90000 iterations, array_ type, array_ 90000: 6.244ms
2.0 cpu, 128 ram, 90000 iterations, map___ type, map___ 90000: 17.355ms
3.0 cpu, 128 ram, 90000 iterations, object type, object 90000: 9.906ms
3.0 cpu, 128 ram, 90000 iterations, array_ type, array_ 90000: 6.546ms
3.0 cpu, 128 ram, 90000 iterations, map___ type, map___ 90000: 14.303ms
4.0 cpu, 128 ram, 90000 iterations, object type, object 90000: 9.779ms
4.0 cpu, 128 ram, 90000 iterations, array_ type, array_ 90000: 6.649ms
4.0 cpu, 128 ram, 90000 iterations, map___ type, map___ 90000: 14.374ms
0.5 cpu, 256 ram, 90000 iterations, object type, object 90000: 9.737ms
0.5 cpu, 256 ram, 90000 iterations, array_ type, array_ 90000: 6.518ms
0.5 cpu, 256 ram, 90000 iterations, map___ type, map___ 90000: 13.95ms
1.0 cpu, 256 ram, 90000 iterations, object type, object 90000: 11.052ms
1.0 cpu, 256 ram, 90000 iterations, array_ type, array_ 90000: 6.684ms
1.0 cpu, 256 ram, 90000 iterations, map___ type, map___ 90000: 13.353ms
2.0 cpu, 256 ram, 90000 iterations, object type, object 90000: 10.657ms
2.0 cpu, 256 ram, 90000 iterations, array_ type, array_ 90000: 6.514ms
2.0 cpu, 256 ram, 90000 iterations, map___ type, map___ 90000: 13.775ms
3.0 cpu, 256 ram, 90000 iterations, object type, object 90000: 10.18ms
3.0 cpu, 256 ram, 90000 iterations, array_ type, array_ 90000: 5.939ms
3.0 cpu, 256 ram, 90000 iterations, map___ type, map___ 90000: 13.452ms
4.0 cpu, 256 ram, 90000 iterations, object type, object 90000: 10.216ms
4.0 cpu, 256 ram, 90000 iterations, array_ type, array_ 90000: 6.645ms
4.0 cpu, 256 ram, 90000 iterations, map___ type, map___ 90000: 19.393ms
0.5 cpu, 512 ram, 90000 iterations, object type, object 90000: 10.72ms
0.5 cpu, 512 ram, 90000 iterations, array_ type, array_ 90000: 6.603ms
0.5 cpu, 512 ram, 90000 iterations, map___ type, map___ 90000: 14.459ms
1.0 cpu, 512 ram, 90000 iterations, object type, object 90000: 10.688ms
1.0 cpu, 512 ram, 90000 iterations, array_ type, array_ 90000: 6.63ms
1.0 cpu, 512 ram, 90000 iterations, map___ type, map___ 90000: 13.483ms
2.0 cpu, 512 ram, 90000 iterations, object type, object 90000: 10.359ms
2.0 cpu, 512 ram, 90000 iterations, array_ type, array_ 90000: 6.455ms
2.0 cpu, 512 ram, 90000 iterations, map___ type, map___ 90000: 14.359ms
3.0 cpu, 512 ram, 90000 iterations, object type, object 90000: 10.66ms
3.0 cpu, 512 ram, 90000 iterations, array_ type, array_ 90000: 6.41ms
3.0 cpu, 512 ram, 90000 iterations, map___ type, map___ 90000: 14.284ms
4.0 cpu, 512 ram, 90000 iterations, object type, object 90000: 10.675ms
4.0 cpu, 512 ram, 90000 iterations, array_ type, array_ 90000: 6.715ms
4.0 cpu, 512 ram, 90000 iterations, map___ type, map___ 90000: 13.926ms
0.5 cpu, 1024 ram, 90000 iterations, object type, object 90000: 9.318ms
0.5 cpu, 1024 ram, 90000 iterations, array_ type, array_ 90000: 6.885ms
0.5 cpu, 1024 ram, 90000 iterations, map___ type, map___ 90000: 13.694ms
1.0 cpu, 1024 ram, 90000 iterations, object type, object 90000: 8.84ms
1.0 cpu, 1024 ram, 90000 iterations, array_ type, array_ 90000: 7.714ms
1.0 cpu, 1024 ram, 90000 iterations, map___ type, map___ 90000: 13.002ms
2.0 cpu, 1024 ram, 90000 iterations, object type, object 90000: 9.465ms
2.0 cpu, 1024 ram, 90000 iterations, array_ type, array_ 90000: 6.778ms
2.0 cpu, 1024 ram, 90000 iterations, map___ type, map___ 90000: 13.107ms
3.0 cpu, 1024 ram, 90000 iterations, object type, object 90000: 9.197ms
3.0 cpu, 1024 ram, 90000 iterations, array_ type, array_ 90000: 6.824ms
3.0 cpu, 1024 ram, 90000 iterations, map___ type, map___ 90000: 13.372ms
4.0 cpu, 1024 ram, 90000 iterations, object type, object 90000: 8.975ms
4.0 cpu, 1024 ram, 90000 iterations, array_ type, array_ 90000: 6.336ms
4.0 cpu, 1024 ram, 90000 iterations, map___ type, map___ 90000: 15.959ms
0.5 cpu, 2048 ram, 90000 iterations, object type, object 90000: 9.66ms
0.5 cpu, 2048 ram, 90000 iterations, array_ type, array_ 90000: 6.416ms
0.5 cpu, 2048 ram, 90000 iterations, map___ type, map___ 90000: 12.511ms
1.0 cpu, 2048 ram, 90000 iterations, object type, object 90000: 9.258ms
1.0 cpu, 2048 ram, 90000 iterations, array_ type, array_ 90000: 6.527ms
1.0 cpu, 2048 ram, 90000 iterations, map___ type, map___ 90000: 13.077ms
2.0 cpu, 2048 ram, 90000 iterations, object type, object 90000: 8.984ms
2.0 cpu, 2048 ram, 90000 iterations, array_ type, array_ 90000: 6.147ms
2.0 cpu, 2048 ram, 90000 iterations, map___ type, map___ 90000: 13.148ms
3.0 cpu, 2048 ram, 90000 iterations, object type, object 90000: 9.08ms
3.0 cpu, 2048 ram, 90000 iterations, array_ type, array_ 90000: 6.416ms
3.0 cpu, 2048 ram, 90000 iterations, map___ type, map___ 90000: 13.428ms
4.0 cpu, 2048 ram, 90000 iterations, object type, object 90000: 9.919ms
4.0 cpu, 2048 ram, 90000 iterations, array_ type, array_ 90000: 6.368ms
4.0 cpu, 2048 ram, 90000 iterations, map___ type, map___ 90000: 12.963ms
0.5 cpu, 4096 ram, 90000 iterations, object type, object 90000: 9.16ms
0.5 cpu, 4096 ram, 90000 iterations, array_ type, array_ 90000: 6.401ms
0.5 cpu, 4096 ram, 90000 iterations, map___ type, map___ 90000: 13.199ms
1.0 cpu, 4096 ram, 90000 iterations, object type, object 90000: 9.735ms
1.0 cpu, 4096 ram, 90000 iterations, array_ type, array_ 90000: 6.966ms
1.0 cpu, 4096 ram, 90000 iterations, map___ type, map___ 90000: 13.271ms
2.0 cpu, 4096 ram, 90000 iterations, object type, object 90000: 8.786ms
2.0 cpu, 4096 ram, 90000 iterations, array_ type, array_ 90000: 6.483ms
2.0 cpu, 4096 ram, 90000 iterations, map___ type, map___ 90000: 12.372ms
3.0 cpu, 4096 ram, 90000 iterations, object type, object 90000: 9.829ms
3.0 cpu, 4096 ram, 90000 iterations, array_ type, array_ 90000: 6.464ms
3.0 cpu, 4096 ram, 90000 iterations, map___ type, map___ 90000: 13.812ms
4.0 cpu, 4096 ram, 90000 iterations, object type, object 90000: 9.105ms
4.0 cpu, 4096 ram, 90000 iterations, array_ type, array_ 90000: 7.29ms
4.0 cpu, 4096 ram, 90000 iterations, map___ type, map___ 90000: 13.356ms
0.5 cpu, 8192 ram, 90000 iterations, object type, object 90000: 9.364ms
0.5 cpu, 8192 ram, 90000 iterations, array_ type, array_ 90000: 6.465ms
0.5 cpu, 8192 ram, 90000 iterations, map___ type, map___ 90000: 12.701ms
1.0 cpu, 8192 ram, 90000 iterations, object type, object 90000: 9.47ms
1.0 cpu, 8192 ram, 90000 iterations, array_ type, array_ 90000: 6.813ms
1.0 cpu, 8192 ram, 90000 iterations, map___ type, map___ 90000: 12.75ms
2.0 cpu, 8192 ram, 90000 iterations, object type, object 90000: 9.16ms
2.0 cpu, 8192 ram, 90000 iterations, array_ type, array_ 90000: 7.675ms
2.0 cpu, 8192 ram, 90000 iterations, map___ type, map___ 90000: 13.207ms
3.0 cpu, 8192 ram, 90000 iterations, object type, object 90000: 9.552ms
3.0 cpu, 8192 ram, 90000 iterations, array_ type, array_ 90000: 6.452ms
3.0 cpu, 8192 ram, 90000 iterations, map___ type, map___ 90000: 13.579ms
4.0 cpu, 8192 ram, 90000 iterations, object type, object 90000: 9.337ms
4.0 cpu, 8192 ram, 90000 iterations, array_ type, array_ 90000: 6.683ms
4.0 cpu, 8192 ram, 90000 iterations, map___ type, map___ 90000: 12.261ms
0.5 cpu, 16384 ram, 90000 iterations, object type, object 90000: 9.056ms
0.5 cpu, 16384 ram, 90000 iterations, array_ type, array_ 90000: 6.427ms
0.5 cpu, 16384 ram, 90000 iterations, map___ type, map___ 90000: 13ms
1.0 cpu, 16384 ram, 90000 iterations, object type, object 90000: 8.695ms
1.0 cpu, 16384 ram, 90000 iterations, array_ type, array_ 90000: 6.478ms
1.0 cpu, 16384 ram, 90000 iterations, map___ type, map___ 90000: 13.076ms
2.0 cpu, 16384 ram, 90000 iterations, object type, object 90000: 9.282ms
2.0 cpu, 16384 ram, 90000 iterations, array_ type, array_ 90000: 6.95ms
2.0 cpu, 16384 ram, 90000 iterations, map___ type, map___ 90000: 13.21ms
3.0 cpu, 16384 ram, 90000 iterations, object type, object 90000: 8.69ms
3.0 cpu, 16384 ram, 90000 iterations, array_ type, array_ 90000: 6.687ms
3.0 cpu, 16384 ram, 90000 iterations, map___ type, map___ 90000: 12.512ms
4.0 cpu, 16384 ram, 90000 iterations, object type, object 90000: 9.792ms
4.0 cpu, 16384 ram, 90000 iterations, array_ type, array_ 90000: 6.878ms
4.0 cpu, 16384 ram, 90000 iterations, map___ type, map___ 90000: 13.461ms
0.5 cpu, 128 ram, 100000 iterations, object type, object 100000: 11.195ms
0.5 cpu, 128 ram, 100000 iterations, array_ type, array_ 100000: 7.589ms
0.5 cpu, 128 ram, 100000 iterations, map___ type, map___ 100000: 35.235ms
1.0 cpu, 128 ram, 100000 iterations, object type, object 100000: 11.118ms
1.0 cpu, 128 ram, 100000 iterations, array_ type, array_ 100000: 6.742ms
1.0 cpu, 128 ram, 100000 iterations, map___ type, map___ 100000: 15.165ms
2.0 cpu, 128 ram, 100000 iterations, object type, object 100000: 11.497ms
2.0 cpu, 128 ram, 100000 iterations, array_ type, array_ 100000: 6.679ms
2.0 cpu, 128 ram, 100000 iterations, map___ type, map___ 100000: 17.086ms
3.0 cpu, 128 ram, 100000 iterations, object type, object 100000: 11.731ms
3.0 cpu, 128 ram, 100000 iterations, array_ type, array_ 100000: 6.925ms
3.0 cpu, 128 ram, 100000 iterations, map___ type, map___ 100000: 15.141ms
4.0 cpu, 128 ram, 100000 iterations, object type, object 100000: 10.532ms
4.0 cpu, 128 ram, 100000 iterations, array_ type, array_ 100000: 6.953ms
4.0 cpu, 128 ram, 100000 iterations, map___ type, map___ 100000: 15.745ms
0.5 cpu, 256 ram, 100000 iterations, object type, object 100000: 10.761ms
0.5 cpu, 256 ram, 100000 iterations, array_ type, array_ 100000: 8.198ms
0.5 cpu, 256 ram, 100000 iterations, map___ type, map___ 100000: 15.009ms
1.0 cpu, 256 ram, 100000 iterations, object type, object 100000: 11.818ms
1.0 cpu, 256 ram, 100000 iterations, array_ type, array_ 100000: 6.597ms
1.0 cpu, 256 ram, 100000 iterations, map___ type, map___ 100000: 16.206ms
2.0 cpu, 256 ram, 100000 iterations, object type, object 100000: 11.132ms
2.0 cpu, 256 ram, 100000 iterations, array_ type, array_ 100000: 6.814ms
2.0 cpu, 256 ram, 100000 iterations, map___ type, map___ 100000: 16.103ms
3.0 cpu, 256 ram, 100000 iterations, object type, object 100000: 11.431ms
3.0 cpu, 256 ram, 100000 iterations, array_ type, array_ 100000: 6.964ms
3.0 cpu, 256 ram, 100000 iterations, map___ type, map___ 100000: 15.816ms
4.0 cpu, 256 ram, 100000 iterations, object type, object 100000: 11.701ms
4.0 cpu, 256 ram, 100000 iterations, array_ type, array_ 100000: 7.031ms
4.0 cpu, 256 ram, 100000 iterations, map___ type, map___ 100000: 15.217ms
0.5 cpu, 512 ram, 100000 iterations, object type, object 100000: 11.723ms
0.5 cpu, 512 ram, 100000 iterations, array_ type, array_ 100000: 6.854ms
0.5 cpu, 512 ram, 100000 iterations, map___ type, map___ 100000: 32.143ms
1.0 cpu, 512 ram, 100000 iterations, object type, object 100000: 12.031ms
1.0 cpu, 512 ram, 100000 iterations, array_ type, array_ 100000: 6.763ms
1.0 cpu, 512 ram, 100000 iterations, map___ type, map___ 100000: 14.933ms
2.0 cpu, 512 ram, 100000 iterations, object type, object 100000: 11.67ms
2.0 cpu, 512 ram, 100000 iterations, array_ type, array_ 100000: 6.916ms
2.0 cpu, 512 ram, 100000 iterations, map___ type, map___ 100000: 15.496ms
3.0 cpu, 512 ram, 100000 iterations, object type, object 100000: 11.749ms
3.0 cpu, 512 ram, 100000 iterations, array_ type, array_ 100000: 7.047ms
3.0 cpu, 512 ram, 100000 iterations, map___ type, map___ 100000: 16.744ms
4.0 cpu, 512 ram, 100000 iterations, object type, object 100000: 10.734ms
4.0 cpu, 512 ram, 100000 iterations, array_ type, array_ 100000: 6.651ms
4.0 cpu, 512 ram, 100000 iterations, map___ type, map___ 100000: 16.912ms
0.5 cpu, 1024 ram, 100000 iterations, object type, object 100000: 9.66ms
0.5 cpu, 1024 ram, 100000 iterations, array_ type, array_ 100000: 7.155ms
0.5 cpu, 1024 ram, 100000 iterations, map___ type, map___ 100000: 14.1ms
1.0 cpu, 1024 ram, 100000 iterations, object type, object 100000: 9.87ms
1.0 cpu, 1024 ram, 100000 iterations, array_ type, array_ 100000: 6.74ms
1.0 cpu, 1024 ram, 100000 iterations, map___ type, map___ 100000: 13.599ms
2.0 cpu, 1024 ram, 100000 iterations, object type, object 100000: 9.464ms
2.0 cpu, 1024 ram, 100000 iterations, array_ type, array_ 100000: 7.677ms
2.0 cpu, 1024 ram, 100000 iterations, map___ type, map___ 100000: 13.676ms
3.0 cpu, 1024 ram, 100000 iterations, object type, object 100000: 9.455ms
3.0 cpu, 1024 ram, 100000 iterations, array_ type, array_ 100000: 6.658ms
3.0 cpu, 1024 ram, 100000 iterations, map___ type, map___ 100000: 13.534ms
4.0 cpu, 1024 ram, 100000 iterations, object type, object 100000: 10.106ms
4.0 cpu, 1024 ram, 100000 iterations, array_ type, array_ 100000: 6.749ms
4.0 cpu, 1024 ram, 100000 iterations, map___ type, map___ 100000: 13.466ms
0.5 cpu, 2048 ram, 100000 iterations, object type, object 100000: 9.233ms
0.5 cpu, 2048 ram, 100000 iterations, array_ type, array_ 100000: 7.188ms
0.5 cpu, 2048 ram, 100000 iterations, map___ type, map___ 100000: 13.549ms
1.0 cpu, 2048 ram, 100000 iterations, object type, object 100000: 9.764ms
1.0 cpu, 2048 ram, 100000 iterations, array_ type, array_ 100000: 7.078ms
1.0 cpu, 2048 ram, 100000 iterations, map___ type, map___ 100000: 13.946ms
2.0 cpu, 2048 ram, 100000 iterations, object type, object 100000: 9.988ms
2.0 cpu, 2048 ram, 100000 iterations, array_ type, array_ 100000: 7.026ms
2.0 cpu, 2048 ram, 100000 iterations, map___ type, map___ 100000: 13.454ms
3.0 cpu, 2048 ram, 100000 iterations, object type, object 100000: 10.244ms
3.0 cpu, 2048 ram, 100000 iterations, array_ type, array_ 100000: 6.588ms
3.0 cpu, 2048 ram, 100000 iterations, map___ type, map___ 100000: 13.958ms
4.0 cpu, 2048 ram, 100000 iterations, object type, object 100000: 9.927ms
4.0 cpu, 2048 ram, 100000 iterations, array_ type, array_ 100000: 6.845ms
4.0 cpu, 2048 ram, 100000 iterations, map___ type, map___ 100000: 13.386ms
0.5 cpu, 4096 ram, 100000 iterations, object type, object 100000: 9.496ms
0.5 cpu, 4096 ram, 100000 iterations, array_ type, array_ 100000: 7.454ms
0.5 cpu, 4096 ram, 100000 iterations, map___ type, map___ 100000: 14.841ms
1.0 cpu, 4096 ram, 100000 iterations, object type, object 100000: 9.68ms
1.0 cpu, 4096 ram, 100000 iterations, array_ type, array_ 100000: 6.896ms
1.0 cpu, 4096 ram, 100000 iterations, map___ type, map___ 100000: 13.729ms
2.0 cpu, 4096 ram, 100000 iterations, object type, object 100000: 9.407ms
2.0 cpu, 4096 ram, 100000 iterations, array_ type, array_ 100000: 7.203ms
2.0 cpu, 4096 ram, 100000 iterations, map___ type, map___ 100000: 14.255ms
3.0 cpu, 4096 ram, 100000 iterations, object type, object 100000: 8.985ms
3.0 cpu, 4096 ram, 100000 iterations, array_ type, array_ 100000: 7.428ms
3.0 cpu, 4096 ram, 100000 iterations, map___ type, map___ 100000: 13.88ms
4.0 cpu, 4096 ram, 100000 iterations, object type, object 100000: 9.589ms
4.0 cpu, 4096 ram, 100000 iterations, array_ type, array_ 100000: 6.92ms
4.0 cpu, 4096 ram, 100000 iterations, map___ type, map___ 100000: 13.661ms
0.5 cpu, 8192 ram, 100000 iterations, object type, object 100000: 10.332ms
0.5 cpu, 8192 ram, 100000 iterations, array_ type, array_ 100000: 7.014ms
0.5 cpu, 8192 ram, 100000 iterations, map___ type, map___ 100000: 14.544ms
1.0 cpu, 8192 ram, 100000 iterations, object type, object 100000: 9.82ms
1.0 cpu, 8192 ram, 100000 iterations, array_ type, array_ 100000: 7.184ms
1.0 cpu, 8192 ram, 100000 iterations, map___ type, map___ 100000: 14.307ms
2.0 cpu, 8192 ram, 100000 iterations, object type, object 100000: 9.719ms
2.0 cpu, 8192 ram, 100000 iterations, array_ type, array_ 100000: 7.056ms
2.0 cpu, 8192 ram, 100000 iterations, map___ type, map___ 100000: 13.237ms
3.0 cpu, 8192 ram, 100000 iterations, object type, object 100000: 10.214ms
3.0 cpu, 8192 ram, 100000 iterations, array_ type, array_ 100000: 6.772ms
3.0 cpu, 8192 ram, 100000 iterations, map___ type, map___ 100000: 13.414ms
4.0 cpu, 8192 ram, 100000 iterations, object type, object 100000: 10.395ms
4.0 cpu, 8192 ram, 100000 iterations, array_ type, array_ 100000: 6.697ms
4.0 cpu, 8192 ram, 100000 iterations, map___ type, map___ 100000: 14.286ms
0.5 cpu, 16384 ram, 100000 iterations, object type, object 100000: 9.331ms
0.5 cpu, 16384 ram, 100000 iterations, array_ type, array_ 100000: 6.721ms
0.5 cpu, 16384 ram, 100000 iterations, map___ type, map___ 100000: 13.032ms
1.0 cpu, 16384 ram, 100000 iterations, object type, object 100000: 9.153ms
1.0 cpu, 16384 ram, 100000 iterations, array_ type, array_ 100000: 7.256ms
1.0 cpu, 16384 ram, 100000 iterations, map___ type, map___ 100000: 14.213ms
2.0 cpu, 16384 ram, 100000 iterations, object type, object 100000: 10.117ms
2.0 cpu, 16384 ram, 100000 iterations, array_ type, array_ 100000: 6.387ms
2.0 cpu, 16384 ram, 100000 iterations, map___ type, map___ 100000: 13.629ms
3.0 cpu, 16384 ram, 100000 iterations, object type, object 100000: 9.565ms
3.0 cpu, 16384 ram, 100000 iterations, array_ type, array_ 100000: 6.568ms
3.0 cpu, 16384 ram, 100000 iterations, map___ type, map___ 100000: 13.983ms
4.0 cpu, 16384 ram, 100000 iterations, object type, object 100000: 9.706ms
4.0 cpu, 16384 ram, 100000 iterations, array_ type, array_ 100000: 6.655ms
4.0 cpu, 16384 ram, 100000 iterations, map___ type, map___ 100000: 14.095ms
0.5 cpu, 128 ram, 200000 iterations, object type, object 200000: 20.43ms
0.5 cpu, 128 ram, 200000 iterations, array_ type, array_ 200000: 11.393ms
0.5 cpu, 128 ram, 200000 iterations, map___ type, map___ 200000: 61.546ms
1.0 cpu, 128 ram, 200000 iterations, object type, object 200000: 20.591ms
1.0 cpu, 128 ram, 200000 iterations, array_ type, array_ 200000: 10.88ms
1.0 cpu, 128 ram, 200000 iterations, map___ type, map___ 200000: 35.313ms
2.0 cpu, 128 ram, 200000 iterations, object type, object 200000: 21.605ms
2.0 cpu, 128 ram, 200000 iterations, array_ type, array_ 200000: 11.195ms
2.0 cpu, 128 ram, 200000 iterations, map___ type, map___ 200000: 36.657ms
3.0 cpu, 128 ram, 200000 iterations, object type, object 200000: 19.293ms
3.0 cpu, 128 ram, 200000 iterations, array_ type, array_ 200000: 11.013ms
3.0 cpu, 128 ram, 200000 iterations, map___ type, map___ 200000: 37.145ms
4.0 cpu, 128 ram, 200000 iterations, object type, object 200000: 20.836ms
4.0 cpu, 128 ram, 200000 iterations, array_ type, array_ 200000: 11.001ms
4.0 cpu, 128 ram, 200000 iterations, map___ type, map___ 200000: 36.939ms
0.5 cpu, 256 ram, 200000 iterations, object type, object 200000: 51.004ms
0.5 cpu, 256 ram, 200000 iterations, array_ type, array_ 200000: 10.901ms
0.5 cpu, 256 ram, 200000 iterations, map___ type, map___ 200000: 37.597ms
1.0 cpu, 256 ram, 200000 iterations, object type, object 200000: 19.793ms
1.0 cpu, 256 ram, 200000 iterations, array_ type, array_ 200000: 10.944ms
1.0 cpu, 256 ram, 200000 iterations, map___ type, map___ 200000: 36.989ms
2.0 cpu, 256 ram, 200000 iterations, object type, object 200000: 20.308ms
2.0 cpu, 256 ram, 200000 iterations, array_ type, array_ 200000: 10.692ms
2.0 cpu, 256 ram, 200000 iterations, map___ type, map___ 200000: 35.335ms
3.0 cpu, 256 ram, 200000 iterations, object type, object 200000: 21.042ms
3.0 cpu, 256 ram, 200000 iterations, array_ type, array_ 200000: 11.517ms
3.0 cpu, 256 ram, 200000 iterations, map___ type, map___ 200000: 38.043ms
4.0 cpu, 256 ram, 200000 iterations, object type, object 200000: 20.724ms
4.0 cpu, 256 ram, 200000 iterations, array_ type, array_ 200000: 11.044ms
4.0 cpu, 256 ram, 200000 iterations, map___ type, map___ 200000: 35.95ms
0.5 cpu, 512 ram, 200000 iterations, object type, object 200000: 20.806ms
0.5 cpu, 512 ram, 200000 iterations, array_ type, array_ 200000: 12.919ms
0.5 cpu, 512 ram, 200000 iterations, map___ type, map___ 200000: 34.372ms
1.0 cpu, 512 ram, 200000 iterations, object type, object 200000: 21.03ms
1.0 cpu, 512 ram, 200000 iterations, array_ type, array_ 200000: 12.533ms
1.0 cpu, 512 ram, 200000 iterations, map___ type, map___ 200000: 37.683ms
2.0 cpu, 512 ram, 200000 iterations, object type, object 200000: 20.218ms
2.0 cpu, 512 ram, 200000 iterations, array_ type, array_ 200000: 10.713ms
2.0 cpu, 512 ram, 200000 iterations, map___ type, map___ 200000: 34.03ms
3.0 cpu, 512 ram, 200000 iterations, object type, object 200000: 20.487ms
3.0 cpu, 512 ram, 200000 iterations, array_ type, array_ 200000: 11.405ms
3.0 cpu, 512 ram, 200000 iterations, map___ type, map___ 200000: 50.593ms
4.0 cpu, 512 ram, 200000 iterations, object type, object 200000: 21.895ms
4.0 cpu, 512 ram, 200000 iterations, array_ type, array_ 200000: 11.507ms
4.0 cpu, 512 ram, 200000 iterations, map___ type, map___ 200000: 35.121ms
0.5 cpu, 1024 ram, 200000 iterations, object type, object 200000: 28.598ms
0.5 cpu, 1024 ram, 200000 iterations, array_ type, array_ 200000: 11.357ms
0.5 cpu, 1024 ram, 200000 iterations, map___ type, map___ 200000: 29.38ms
1.0 cpu, 1024 ram, 200000 iterations, object type, object 200000: 18.922ms
1.0 cpu, 1024 ram, 200000 iterations, array_ type, array_ 200000: 11.742ms
1.0 cpu, 1024 ram, 200000 iterations, map___ type, map___ 200000: 25.291ms
2.0 cpu, 1024 ram, 200000 iterations, object type, object 200000: 18.139ms
2.0 cpu, 1024 ram, 200000 iterations, array_ type, array_ 200000: 11.262ms
2.0 cpu, 1024 ram, 200000 iterations, map___ type, map___ 200000: 29.749ms
3.0 cpu, 1024 ram, 200000 iterations, object type, object 200000: 19.46ms
3.0 cpu, 1024 ram, 200000 iterations, array_ type, array_ 200000: 11.765ms
3.0 cpu, 1024 ram, 200000 iterations, map___ type, map___ 200000: 26.37ms
4.0 cpu, 1024 ram, 200000 iterations, object type, object 200000: 18.482ms
4.0 cpu, 1024 ram, 200000 iterations, array_ type, array_ 200000: 11.089ms
4.0 cpu, 1024 ram, 200000 iterations, map___ type, map___ 200000: 28.049ms
0.5 cpu, 2048 ram, 200000 iterations, object type, object 200000: 53.554ms
0.5 cpu, 2048 ram, 200000 iterations, array_ type, array_ 200000: 11.695ms
0.5 cpu, 2048 ram, 200000 iterations, map___ type, map___ 200000: 27.771ms
1.0 cpu, 2048 ram, 200000 iterations, object type, object 200000: 19.363ms
1.0 cpu, 2048 ram, 200000 iterations, array_ type, array_ 200000: 11.63ms
1.0 cpu, 2048 ram, 200000 iterations, map___ type, map___ 200000: 25.643ms
2.0 cpu, 2048 ram, 200000 iterations, object type, object 200000: 18.656ms
2.0 cpu, 2048 ram, 200000 iterations, array_ type, array_ 200000: 11.181ms
2.0 cpu, 2048 ram, 200000 iterations, map___ type, map___ 200000: 27.984ms
3.0 cpu, 2048 ram, 200000 iterations, object type, object 200000: 19.51ms
3.0 cpu, 2048 ram, 200000 iterations, array_ type, array_ 200000: 11.159ms
3.0 cpu, 2048 ram, 200000 iterations, map___ type, map___ 200000: 26.082ms
4.0 cpu, 2048 ram, 200000 iterations, object type, object 200000: 19.109ms
4.0 cpu, 2048 ram, 200000 iterations, array_ type, array_ 200000: 11.193ms
4.0 cpu, 2048 ram, 200000 iterations, map___ type, map___ 200000: 25.166ms
0.5 cpu, 4096 ram, 200000 iterations, object type, object 200000: 19.717ms
0.5 cpu, 4096 ram, 200000 iterations, array_ type, array_ 200000: 11.743ms
0.5 cpu, 4096 ram, 200000 iterations, map___ type, map___ 200000: 28.343ms
1.0 cpu, 4096 ram, 200000 iterations, object type, object 200000: 18.841ms
1.0 cpu, 4096 ram, 200000 iterations, array_ type, array_ 200000: 11.48ms
1.0 cpu, 4096 ram, 200000 iterations, map___ type, map___ 200000: 27.663ms
2.0 cpu, 4096 ram, 200000 iterations, object type, object 200000: 18.887ms
2.0 cpu, 4096 ram, 200000 iterations, array_ type, array_ 200000: 11.26ms
2.0 cpu, 4096 ram, 200000 iterations, map___ type, map___ 200000: 27.385ms
3.0 cpu, 4096 ram, 200000 iterations, object type, object 200000: 18.668ms
3.0 cpu, 4096 ram, 200000 iterations, array_ type, array_ 200000: 11.432ms
3.0 cpu, 4096 ram, 200000 iterations, map___ type, map___ 200000: 27.242ms
4.0 cpu, 4096 ram, 200000 iterations, object type, object 200000: 18.759ms
4.0 cpu, 4096 ram, 200000 iterations, array_ type, array_ 200000: 11.061ms
4.0 cpu, 4096 ram, 200000 iterations, map___ type, map___ 200000: 27.417ms
0.5 cpu, 8192 ram, 200000 iterations, object type, object 200000: 43.182ms
0.5 cpu, 8192 ram, 200000 iterations, array_ type, array_ 200000: 11.568ms
0.5 cpu, 8192 ram, 200000 iterations, map___ type, map___ 200000: 25.875ms
1.0 cpu, 8192 ram, 200000 iterations, object type, object 200000: 19.273ms
1.0 cpu, 8192 ram, 200000 iterations, array_ type, array_ 200000: 11.658ms
1.0 cpu, 8192 ram, 200000 iterations, map___ type, map___ 200000: 29.016ms
2.0 cpu, 8192 ram, 200000 iterations, object type, object 200000: 19.905ms
2.0 cpu, 8192 ram, 200000 iterations, array_ type, array_ 200000: 11.613ms
2.0 cpu, 8192 ram, 200000 iterations, map___ type, map___ 200000: 27.414ms
3.0 cpu, 8192 ram, 200000 iterations, object type, object 200000: 18.107ms
3.0 cpu, 8192 ram, 200000 iterations, array_ type, array_ 200000: 11.319ms
3.0 cpu, 8192 ram, 200000 iterations, map___ type, map___ 200000: 26.298ms
4.0 cpu, 8192 ram, 200000 iterations, object type, object 200000: 18.647ms
4.0 cpu, 8192 ram, 200000 iterations, array_ type, array_ 200000: 11.032ms
4.0 cpu, 8192 ram, 200000 iterations, map___ type, map___ 200000: 29.077ms
0.5 cpu, 16384 ram, 200000 iterations, object type, object 200000: 25.6ms
0.5 cpu, 16384 ram, 200000 iterations, array_ type, array_ 200000: 11.384ms
0.5 cpu, 16384 ram, 200000 iterations, map___ type, map___ 200000: 35.381ms
1.0 cpu, 16384 ram, 200000 iterations, object type, object 200000: 17.91ms
1.0 cpu, 16384 ram, 200000 iterations, array_ type, array_ 200000: 11.232ms
1.0 cpu, 16384 ram, 200000 iterations, map___ type, map___ 200000: 25.396ms
2.0 cpu, 16384 ram, 200000 iterations, object type, object 200000: 19.614ms
2.0 cpu, 16384 ram, 200000 iterations, array_ type, array_ 200000: 11.217ms
2.0 cpu, 16384 ram, 200000 iterations, map___ type, map___ 200000: 27.343ms
3.0 cpu, 16384 ram, 200000 iterations, object type, object 200000: 18.963ms
3.0 cpu, 16384 ram, 200000 iterations, array_ type, array_ 200000: 11.444ms
3.0 cpu, 16384 ram, 200000 iterations, map___ type, map___ 200000: 28.003ms
4.0 cpu, 16384 ram, 200000 iterations, object type, object 200000: 18.095ms
4.0 cpu, 16384 ram, 200000 iterations, array_ type, array_ 200000: 18.048ms
4.0 cpu, 16384 ram, 200000 iterations, map___ type, map___ 200000: 25.129ms
0.5 cpu, 128 ram, 300000 iterations, object type, object 300000: 41.87ms
0.5 cpu, 128 ram, 300000 iterations, array_ type, array_ 300000: 15.146ms
0.5 cpu, 128 ram, 300000 iterations, map___ type, map___ 300000: 123.573ms
1.0 cpu, 128 ram, 300000 iterations, object type, object 300000: 35.629ms
1.0 cpu, 128 ram, 300000 iterations, array_ type, array_ 300000: 15.609ms
1.0 cpu, 128 ram, 300000 iterations, map___ type, map___ 300000: 91.331ms
2.0 cpu, 128 ram, 300000 iterations, object type, object 300000: 37.7ms
2.0 cpu, 128 ram, 300000 iterations, array_ type, array_ 300000: 15.36ms
2.0 cpu, 128 ram, 300000 iterations, map___ type, map___ 300000: 65.353ms
3.0 cpu, 128 ram, 300000 iterations, object type, object 300000: 38.95ms
3.0 cpu, 128 ram, 300000 iterations, array_ type, array_ 300000: 15.575ms
3.0 cpu, 128 ram, 300000 iterations, map___ type, map___ 300000: 62.295ms
4.0 cpu, 128 ram, 300000 iterations, object type, object 300000: 37.757ms
4.0 cpu, 128 ram, 300000 iterations, array_ type, array_ 300000: 15.967ms
4.0 cpu, 128 ram, 300000 iterations, map___ type, map___ 300000: 63.004ms
0.5 cpu, 256 ram, 300000 iterations, object type, object 300000: 87.46ms
0.5 cpu, 256 ram, 300000 iterations, array_ type, array_ 300000: 15.217ms
0.5 cpu, 256 ram, 300000 iterations, map___ type, map___ 300000: 128.695ms
1.0 cpu, 256 ram, 300000 iterations, object type, object 300000: 38.066ms
1.0 cpu, 256 ram, 300000 iterations, array_ type, array_ 300000: 15.17ms
1.0 cpu, 256 ram, 300000 iterations, map___ type, map___ 300000: 70.303ms
2.0 cpu, 256 ram, 300000 iterations, object type, object 300000: 36.104ms
2.0 cpu, 256 ram, 300000 iterations, array_ type, array_ 300000: 15.586ms
2.0 cpu, 256 ram, 300000 iterations, map___ type, map___ 300000: 62.995ms
3.0 cpu, 256 ram, 300000 iterations, object type, object 300000: 36.282ms
3.0 cpu, 256 ram, 300000 iterations, array_ type, array_ 300000: 15.279ms
3.0 cpu, 256 ram, 300000 iterations, map___ type, map___ 300000: 69.805ms
4.0 cpu, 256 ram, 300000 iterations, object type, object 300000: 40.069ms
4.0 cpu, 256 ram, 300000 iterations, array_ type, array_ 300000: 15.517ms
4.0 cpu, 256 ram, 300000 iterations, map___ type, map___ 300000: 69.561ms
0.5 cpu, 512 ram, 300000 iterations, object type, object 300000: 36.95ms
0.5 cpu, 512 ram, 300000 iterations, array_ type, array_ 300000: 16.036ms
0.5 cpu, 512 ram, 300000 iterations, map___ type, map___ 300000: 209.346ms
1.0 cpu, 512 ram, 300000 iterations, object type, object 300000: 37.5ms
1.0 cpu, 512 ram, 300000 iterations, array_ type, array_ 300000: 16.354ms
1.0 cpu, 512 ram, 300000 iterations, map___ type, map___ 300000: 81.413ms
2.0 cpu, 512 ram, 300000 iterations, object type, object 300000: 38.465ms
2.0 cpu, 512 ram, 300000 iterations, array_ type, array_ 300000: 16.017ms
2.0 cpu, 512 ram, 300000 iterations, map___ type, map___ 300000: 64.734ms
3.0 cpu, 512 ram, 300000 iterations, object type, object 300000: 35.286ms
3.0 cpu, 512 ram, 300000 iterations, array_ type, array_ 300000: 15.593ms
3.0 cpu, 512 ram, 300000 iterations, map___ type, map___ 300000: 70.047ms
4.0 cpu, 512 ram, 300000 iterations, object type, object 300000: 47.196ms
4.0 cpu, 512 ram, 300000 iterations, array_ type, array_ 300000: 15.43ms
4.0 cpu, 512 ram, 300000 iterations, map___ type, map___ 300000: 70.609ms
0.5 cpu, 1024 ram, 300000 iterations, object type, object 300000: 28.127ms
0.5 cpu, 1024 ram, 300000 iterations, array_ type, array_ 300000: 16.519ms
0.5 cpu, 1024 ram, 300000 iterations, map___ type, map___ 300000: 116.531ms
1.0 cpu, 1024 ram, 300000 iterations, object type, object 300000: 27.738ms
1.0 cpu, 1024 ram, 300000 iterations, array_ type, array_ 300000: 16.12ms
1.0 cpu, 1024 ram, 300000 iterations, map___ type, map___ 300000: 62.498ms
2.0 cpu, 1024 ram, 300000 iterations, object type, object 300000: 28.118ms
2.0 cpu, 1024 ram, 300000 iterations, array_ type, array_ 300000: 15.67ms
2.0 cpu, 1024 ram, 300000 iterations, map___ type, map___ 300000: 65.158ms
3.0 cpu, 1024 ram, 300000 iterations, object type, object 300000: 28.48ms
3.0 cpu, 1024 ram, 300000 iterations, array_ type, array_ 300000: 16.315ms
3.0 cpu, 1024 ram, 300000 iterations, map___ type, map___ 300000: 71.491ms
4.0 cpu, 1024 ram, 300000 iterations, object type, object 300000: 28.485ms
4.0 cpu, 1024 ram, 300000 iterations, array_ type, array_ 300000: 17.349ms
4.0 cpu, 1024 ram, 300000 iterations, map___ type, map___ 300000: 67.308ms
0.5 cpu, 2048 ram, 300000 iterations, object type, object 300000: 78.268ms
0.5 cpu, 2048 ram, 300000 iterations, array_ type, array_ 300000: 15.883ms
0.5 cpu, 2048 ram, 300000 iterations, map___ type, map___ 300000: 108.415ms
1.0 cpu, 2048 ram, 300000 iterations, object type, object 300000: 27.085ms
1.0 cpu, 2048 ram, 300000 iterations, array_ type, array_ 300000: 15.612ms
1.0 cpu, 2048 ram, 300000 iterations, map___ type, map___ 300000: 53.924ms
2.0 cpu, 2048 ram, 300000 iterations, object type, object 300000: 28.223ms
2.0 cpu, 2048 ram, 300000 iterations, array_ type, array_ 300000: 17.541ms
2.0 cpu, 2048 ram, 300000 iterations, map___ type, map___ 300000: 45.944ms
3.0 cpu, 2048 ram, 300000 iterations, object type, object 300000: 27.457ms
3.0 cpu, 2048 ram, 300000 iterations, array_ type, array_ 300000: 16.13ms
3.0 cpu, 2048 ram, 300000 iterations, map___ type, map___ 300000: 53.528ms
4.0 cpu, 2048 ram, 300000 iterations, object type, object 300000: 27.491ms
4.0 cpu, 2048 ram, 300000 iterations, array_ type, array_ 300000: 15.736ms
4.0 cpu, 2048 ram, 300000 iterations, map___ type, map___ 300000: 54.347ms
0.5 cpu, 4096 ram, 300000 iterations, object type, object 300000: 72.276ms
0.5 cpu, 4096 ram, 300000 iterations, array_ type, array_ 300000: 19.589ms
0.5 cpu, 4096 ram, 300000 iterations, map___ type, map___ 300000: 104.951ms
1.0 cpu, 4096 ram, 300000 iterations, object type, object 300000: 27.853ms
1.0 cpu, 4096 ram, 300000 iterations, array_ type, array_ 300000: 16.256ms
1.0 cpu, 4096 ram, 300000 iterations, map___ type, map___ 300000: 53.338ms
2.0 cpu, 4096 ram, 300000 iterations, object type, object 300000: 28.3ms
2.0 cpu, 4096 ram, 300000 iterations, array_ type, array_ 300000: 16.798ms
2.0 cpu, 4096 ram, 300000 iterations, map___ type, map___ 300000: 50.774ms
3.0 cpu, 4096 ram, 300000 iterations, object type, object 300000: 27.451ms
3.0 cpu, 4096 ram, 300000 iterations, array_ type, array_ 300000: 15.957ms
3.0 cpu, 4096 ram, 300000 iterations, map___ type, map___ 300000: 52.859ms
4.0 cpu, 4096 ram, 300000 iterations, object type, object 300000: 28.021ms
4.0 cpu, 4096 ram, 300000 iterations, array_ type, array_ 300000: 15.346ms
4.0 cpu, 4096 ram, 300000 iterations, map___ type, map___ 300000: 52.065ms
0.5 cpu, 8192 ram, 300000 iterations, object type, object 300000: 27.817ms
0.5 cpu, 8192 ram, 300000 iterations, array_ type, array_ 300000: 16.143ms
0.5 cpu, 8192 ram, 300000 iterations, map___ type, map___ 300000: 49.483ms
1.0 cpu, 8192 ram, 300000 iterations, object type, object 300000: 27.624ms
1.0 cpu, 8192 ram, 300000 iterations, array_ type, array_ 300000: 15.868ms
1.0 cpu, 8192 ram, 300000 iterations, map___ type, map___ 300000: 52.082ms
2.0 cpu, 8192 ram, 300000 iterations, object type, object 300000: 27.451ms
2.0 cpu, 8192 ram, 300000 iterations, array_ type, array_ 300000: 15.403ms
2.0 cpu, 8192 ram, 300000 iterations, map___ type, map___ 300000: 51.479ms
3.0 cpu, 8192 ram, 300000 iterations, object type, object 300000: 27.929ms
3.0 cpu, 8192 ram, 300000 iterations, array_ type, array_ 300000: 16.357ms
3.0 cpu, 8192 ram, 300000 iterations, map___ type, map___ 300000: 48.644ms
4.0 cpu, 8192 ram, 300000 iterations, object type, object 300000: 27.627ms
4.0 cpu, 8192 ram, 300000 iterations, array_ type, array_ 300000: 17.405ms
4.0 cpu, 8192 ram, 300000 iterations, map___ type, map___ 300000: 53.443ms
0.5 cpu, 16384 ram, 300000 iterations, object type, object 300000: 44.601ms
0.5 cpu, 16384 ram, 300000 iterations, array_ type, array_ 300000: 16.055ms
0.5 cpu, 16384 ram, 300000 iterations, map___ type, map___ 300000: 105.365ms
1.0 cpu, 16384 ram, 300000 iterations, object type, object 300000: 27.983ms
1.0 cpu, 16384 ram, 300000 iterations, array_ type, array_ 300000: 16.038ms
1.0 cpu, 16384 ram, 300000 iterations, map___ type, map___ 300000: 50.773ms
2.0 cpu, 16384 ram, 300000 iterations, object type, object 300000: 27.505ms
2.0 cpu, 16384 ram, 300000 iterations, array_ type, array_ 300000: 15.844ms
2.0 cpu, 16384 ram, 300000 iterations, map___ type, map___ 300000: 51.55ms
3.0 cpu, 16384 ram, 300000 iterations, object type, object 300000: 29.149ms
3.0 cpu, 16384 ram, 300000 iterations, array_ type, array_ 300000: 15.721ms
3.0 cpu, 16384 ram, 300000 iterations, map___ type, map___ 300000: 48.336ms
4.0 cpu, 16384 ram, 300000 iterations, object type, object 300000: 26.814ms
4.0 cpu, 16384 ram, 300000 iterations, array_ type, array_ 300000: 15.799ms
4.0 cpu, 16384 ram, 300000 iterations, map___ type, map___ 300000: 51.999ms
0.5 cpu, 128 ram, 400000 iterations, object type, object 400000: 51.738ms
0.5 cpu, 128 ram, 400000 iterations, array_ type, array_ 400000: 65.054ms
0.5 cpu, 128 ram, 400000 iterations, map___ type, map___ 400000: 213.704ms
1.0 cpu, 128 ram, 400000 iterations, object type, object 400000: 47.875ms
1.0 cpu, 128 ram, 400000 iterations, array_ type, array_ 400000: 19.854ms
1.0 cpu, 128 ram, 400000 iterations, map___ type, map___ 400000: 87.866ms
2.0 cpu, 128 ram, 400000 iterations, object type, object 400000: 51.661ms
2.0 cpu, 128 ram, 400000 iterations, array_ type, array_ 400000: 20.5ms
2.0 cpu, 128 ram, 400000 iterations, map___ type, map___ 400000: 81.11ms
3.0 cpu, 128 ram, 400000 iterations, object type, object 400000: 47.461ms
3.0 cpu, 128 ram, 400000 iterations, array_ type, array_ 400000: 20.166ms
3.0 cpu, 128 ram, 400000 iterations, map___ type, map___ 400000: 80.134ms
4.0 cpu, 128 ram, 400000 iterations, object type, object 400000: 47.762ms
4.0 cpu, 128 ram, 400000 iterations, array_ type, array_ 400000: 20.053ms
4.0 cpu, 128 ram, 400000 iterations, map___ type, map___ 400000: 74.922ms
0.5 cpu, 256 ram, 400000 iterations, object type, object 400000: 103.249ms
0.5 cpu, 256 ram, 400000 iterations, array_ type, array_ 400000: 20.357ms
0.5 cpu, 256 ram, 400000 iterations, map___ type, map___ 400000: 210.496ms
1.0 cpu, 256 ram, 400000 iterations, object type, object 400000: 48.718ms
1.0 cpu, 256 ram, 400000 iterations, array_ type, array_ 400000: 21.716ms
1.0 cpu, 256 ram, 400000 iterations, map___ type, map___ 400000: 85.834ms
2.0 cpu, 256 ram, 400000 iterations, object type, object 400000: 45.607ms
2.0 cpu, 256 ram, 400000 iterations, array_ type, array_ 400000: 20.713ms
2.0 cpu, 256 ram, 400000 iterations, map___ type, map___ 400000: 91.917ms
3.0 cpu, 256 ram, 400000 iterations, object type, object 400000: 46.479ms
3.0 cpu, 256 ram, 400000 iterations, array_ type, array_ 400000: 20.203ms
3.0 cpu, 256 ram, 400000 iterations, map___ type, map___ 400000: 79.594ms
4.0 cpu, 256 ram, 400000 iterations, object type, object 400000: 47.926ms
4.0 cpu, 256 ram, 400000 iterations, array_ type, array_ 400000: 21.359ms
4.0 cpu, 256 ram, 400000 iterations, map___ type, map___ 400000: 84.899ms
0.5 cpu, 512 ram, 400000 iterations, object type, object 400000: 94.721ms
0.5 cpu, 512 ram, 400000 iterations, array_ type, array_ 400000: 20.754ms
0.5 cpu, 512 ram, 400000 iterations, map___ type, map___ 400000: 218.888ms
1.0 cpu, 512 ram, 400000 iterations, object type, object 400000: 45.819ms
1.0 cpu, 512 ram, 400000 iterations, array_ type, array_ 400000: 20.348ms
1.0 cpu, 512 ram, 400000 iterations, map___ type, map___ 400000: 77.16ms
2.0 cpu, 512 ram, 400000 iterations, object type, object 400000: 45.116ms
2.0 cpu, 512 ram, 400000 iterations, array_ type, array_ 400000: 23.944ms
2.0 cpu, 512 ram, 400000 iterations, map___ type, map___ 400000: 86.018ms
3.0 cpu, 512 ram, 400000 iterations, object type, object 400000: 45.588ms
3.0 cpu, 512 ram, 400000 iterations, array_ type, array_ 400000: 20.089ms
3.0 cpu, 512 ram, 400000 iterations, map___ type, map___ 400000: 85.766ms
4.0 cpu, 512 ram, 400000 iterations, object type, object 400000: 47.624ms
4.0 cpu, 512 ram, 400000 iterations, array_ type, array_ 400000: 20.361ms
4.0 cpu, 512 ram, 400000 iterations, map___ type, map___ 400000: 79.977ms
0.5 cpu, 1024 ram, 400000 iterations, object type, object 400000: 37.273ms
0.5 cpu, 1024 ram, 400000 iterations, array_ type, array_ 400000: 20.835ms
0.5 cpu, 1024 ram, 400000 iterations, map___ type, map___ 400000: 202.314ms
1.0 cpu, 1024 ram, 400000 iterations, object type, object 400000: 35.926ms
1.0 cpu, 1024 ram, 400000 iterations, array_ type, array_ 400000: 21.052ms
1.0 cpu, 1024 ram, 400000 iterations, map___ type, map___ 400000: 84.69ms
2.0 cpu, 1024 ram, 400000 iterations, object type, object 400000: 36.629ms
2.0 cpu, 1024 ram, 400000 iterations, array_ type, array_ 400000: 20.772ms
2.0 cpu, 1024 ram, 400000 iterations, map___ type, map___ 400000: 73.395ms
3.0 cpu, 1024 ram, 400000 iterations, object type, object 400000: 36.829ms
3.0 cpu, 1024 ram, 400000 iterations, array_ type, array_ 400000: 21.409ms
3.0 cpu, 1024 ram, 400000 iterations, map___ type, map___ 400000: 69.612ms
4.0 cpu, 1024 ram, 400000 iterations, object type, object 400000: 37.839ms
4.0 cpu, 1024 ram, 400000 iterations, array_ type, array_ 400000: 21.212ms
4.0 cpu, 1024 ram, 400000 iterations, map___ type, map___ 400000: 74.108ms
0.5 cpu, 2048 ram, 400000 iterations, object type, object 400000: 56.201ms
0.5 cpu, 2048 ram, 400000 iterations, array_ type, array_ 400000: 25.845ms
0.5 cpu, 2048 ram, 400000 iterations, map___ type, map___ 400000: 130.358ms
1.0 cpu, 2048 ram, 400000 iterations, object type, object 400000: 37.15ms
1.0 cpu, 2048 ram, 400000 iterations, array_ type, array_ 400000: 20.781ms
1.0 cpu, 2048 ram, 400000 iterations, map___ type, map___ 400000: 63.642ms
2.0 cpu, 2048 ram, 400000 iterations, object type, object 400000: 39.104ms
2.0 cpu, 2048 ram, 400000 iterations, array_ type, array_ 400000: 20.319ms
2.0 cpu, 2048 ram, 400000 iterations, map___ type, map___ 400000: 67.066ms
3.0 cpu, 2048 ram, 400000 iterations, object type, object 400000: 38.668ms
3.0 cpu, 2048 ram, 400000 iterations, array_ type, array_ 400000: 20.689ms
3.0 cpu, 2048 ram, 400000 iterations, map___ type, map___ 400000: 65.259ms
4.0 cpu, 2048 ram, 400000 iterations, object type, object 400000: 37.039ms
4.0 cpu, 2048 ram, 400000 iterations, array_ type, array_ 400000: 20.522ms
4.0 cpu, 2048 ram, 400000 iterations, map___ type, map___ 400000: 66.487ms
0.5 cpu, 4096 ram, 400000 iterations, object type, object 400000: 52.11ms
0.5 cpu, 4096 ram, 400000 iterations, array_ type, array_ 400000: 21.569ms
0.5 cpu, 4096 ram, 400000 iterations, map___ type, map___ 400000: 145.868ms
1.0 cpu, 4096 ram, 400000 iterations, object type, object 400000: 38.17ms
1.0 cpu, 4096 ram, 400000 iterations, array_ type, array_ 400000: 22.171ms
1.0 cpu, 4096 ram, 400000 iterations, map___ type, map___ 400000: 67.537ms
2.0 cpu, 4096 ram, 400000 iterations, object type, object 400000: 39.171ms
2.0 cpu, 4096 ram, 400000 iterations, array_ type, array_ 400000: 20.997ms
2.0 cpu, 4096 ram, 400000 iterations, map___ type, map___ 400000: 60.558ms
3.0 cpu, 4096 ram, 400000 iterations, object type, object 400000: 35.629ms
3.0 cpu, 4096 ram, 400000 iterations, array_ type, array_ 400000: 20.706ms
3.0 cpu, 4096 ram, 400000 iterations, map___ type, map___ 400000: 64.57ms
4.0 cpu, 4096 ram, 400000 iterations, object type, object 400000: 38.797ms
4.0 cpu, 4096 ram, 400000 iterations, array_ type, array_ 400000: 23.672ms
4.0 cpu, 4096 ram, 400000 iterations, map___ type, map___ 400000: 68.55ms
0.5 cpu, 8192 ram, 400000 iterations, object type, object 400000: 91.669ms
0.5 cpu, 8192 ram, 400000 iterations, array_ type, array_ 400000: 20.435ms
0.5 cpu, 8192 ram, 400000 iterations, map___ type, map___ 400000: 114.393ms
1.0 cpu, 8192 ram, 400000 iterations, object type, object 400000: 35.194ms
1.0 cpu, 8192 ram, 400000 iterations, array_ type, array_ 400000: 20.824ms
1.0 cpu, 8192 ram, 400000 iterations, map___ type, map___ 400000: 74.879ms
2.0 cpu, 8192 ram, 400000 iterations, object type, object 400000: 38.593ms
2.0 cpu, 8192 ram, 400000 iterations, array_ type, array_ 400000: 21.133ms
2.0 cpu, 8192 ram, 400000 iterations, map___ type, map___ 400000: 72.708ms
3.0 cpu, 8192 ram, 400000 iterations, object type, object 400000: 39.463ms
3.0 cpu, 8192 ram, 400000 iterations, array_ type, array_ 400000: 20.981ms
3.0 cpu, 8192 ram, 400000 iterations, map___ type, map___ 400000: 58.424ms
4.0 cpu, 8192 ram, 400000 iterations, object type, object 400000: 35.884ms
4.0 cpu, 8192 ram, 400000 iterations, array_ type, array_ 400000: 20.089ms
4.0 cpu, 8192 ram, 400000 iterations, map___ type, map___ 400000: 71.116ms
0.5 cpu, 16384 ram, 400000 iterations, object type, object 400000: 95.31ms
0.5 cpu, 16384 ram, 400000 iterations, array_ type, array_ 400000: 28.174ms
0.5 cpu, 16384 ram, 400000 iterations, map___ type, map___ 400000: 180.688ms
1.0 cpu, 16384 ram, 400000 iterations, object type, object 400000: 38.858ms
1.0 cpu, 16384 ram, 400000 iterations, array_ type, array_ 400000: 20.497ms
1.0 cpu, 16384 ram, 400000 iterations, map___ type, map___ 400000: 61.84ms
2.0 cpu, 16384 ram, 400000 iterations, object type, object 400000: 38.041ms
2.0 cpu, 16384 ram, 400000 iterations, array_ type, array_ 400000: 20.386ms
2.0 cpu, 16384 ram, 400000 iterations, map___ type, map___ 400000: 59.75ms
3.0 cpu, 16384 ram, 400000 iterations, object type, object 400000: 35.503ms
3.0 cpu, 16384 ram, 400000 iterations, array_ type, array_ 400000: 21.357ms
3.0 cpu, 16384 ram, 400000 iterations, map___ type, map___ 400000: 64.569ms
4.0 cpu, 16384 ram, 400000 iterations, object type, object 400000: 38.32ms
4.0 cpu, 16384 ram, 400000 iterations, array_ type, array_ 400000: 21.28ms
4.0 cpu, 16384 ram, 400000 iterations, map___ type, map___ 400000: 66.626ms
0.5 cpu, 128 ram, 500000 iterations, object type, object 500000: 58.351ms
0.5 cpu, 128 ram, 500000 iterations, array_ type, array_ 500000: 25.419ms
0.5 cpu, 128 ram, 500000 iterations, map___ type, map___ 500000: 234.49ms
1.0 cpu, 128 ram, 500000 iterations, object type, object 500000: 51.742ms
1.0 cpu, 128 ram, 500000 iterations, array_ type, array_ 500000: 24.612ms
1.0 cpu, 128 ram, 500000 iterations, map___ type, map___ 500000: 136.369ms
2.0 cpu, 128 ram, 500000 iterations, object type, object 500000: 58.663ms
2.0 cpu, 128 ram, 500000 iterations, array_ type, array_ 500000: 24.484ms
2.0 cpu, 128 ram, 500000 iterations, map___ type, map___ 500000: 100.248ms
3.0 cpu, 128 ram, 500000 iterations, object type, object 500000: 60.055ms
3.0 cpu, 128 ram, 500000 iterations, array_ type, array_ 500000: 25.171ms
3.0 cpu, 128 ram, 500000 iterations, map___ type, map___ 500000: 100.649ms
4.0 cpu, 128 ram, 500000 iterations, object type, object 500000: 56.636ms
4.0 cpu, 128 ram, 500000 iterations, array_ type, array_ 500000: 23.909ms
4.0 cpu, 128 ram, 500000 iterations, map___ type, map___ 500000: 102.116ms
0.5 cpu, 256 ram, 500000 iterations, object type, object 500000: 145.965ms
0.5 cpu, 256 ram, 500000 iterations, array_ type, array_ 500000: 24.068ms
0.5 cpu, 256 ram, 500000 iterations, map___ type, map___ 500000: 220.732ms
1.0 cpu, 256 ram, 500000 iterations, object type, object 500000: 52.175ms
1.0 cpu, 256 ram, 500000 iterations, array_ type, array_ 500000: 25.167ms
1.0 cpu, 256 ram, 500000 iterations, map___ type, map___ 500000: 108.178ms
2.0 cpu, 256 ram, 500000 iterations, object type, object 500000: 55.016ms
2.0 cpu, 256 ram, 500000 iterations, array_ type, array_ 500000: 25.965ms
2.0 cpu, 256 ram, 500000 iterations, map___ type, map___ 500000: 101.709ms
3.0 cpu, 256 ram, 500000 iterations, object type, object 500000: 56.195ms
3.0 cpu, 256 ram, 500000 iterations, array_ type, array_ 500000: 23.516ms
3.0 cpu, 256 ram, 500000 iterations, map___ type, map___ 500000: 96.871ms
4.0 cpu, 256 ram, 500000 iterations, object type, object 500000: 52.664ms
4.0 cpu, 256 ram, 500000 iterations, array_ type, array_ 500000: 24.198ms
4.0 cpu, 256 ram, 500000 iterations, map___ type, map___ 500000: 98.464ms
0.5 cpu, 512 ram, 500000 iterations, object type, object 500000: 163.43ms
0.5 cpu, 512 ram, 500000 iterations, array_ type, array_ 500000: 24.722ms
0.5 cpu, 512 ram, 500000 iterations, map___ type, map___ 500000: 262.409ms
1.0 cpu, 512 ram, 500000 iterations, object type, object 500000: 54.6ms
1.0 cpu, 512 ram, 500000 iterations, array_ type, array_ 500000: 23.824ms
1.0 cpu, 512 ram, 500000 iterations, map___ type, map___ 500000: 94.033ms
2.0 cpu, 512 ram, 500000 iterations, object type, object 500000: 53.893ms
2.0 cpu, 512 ram, 500000 iterations, array_ type, array_ 500000: 24.095ms
2.0 cpu, 512 ram, 500000 iterations, map___ type, map___ 500000: 96.963ms
3.0 cpu, 512 ram, 500000 iterations, object type, object 500000: 54.332ms
3.0 cpu, 512 ram, 500000 iterations, array_ type, array_ 500000: 25.413ms
3.0 cpu, 512 ram, 500000 iterations, map___ type, map___ 500000: 102.339ms
4.0 cpu, 512 ram, 500000 iterations, object type, object 500000: 55.116ms
4.0 cpu, 512 ram, 500000 iterations, array_ type, array_ 500000: 24.273ms
4.0 cpu, 512 ram, 500000 iterations, map___ type, map___ 500000: 99.644ms
0.5 cpu, 1024 ram, 500000 iterations, object type, object 500000: 132.079ms
0.5 cpu, 1024 ram, 500000 iterations, array_ type, array_ 500000: 25.976ms
0.5 cpu, 1024 ram, 500000 iterations, map___ type, map___ 500000: 295.575ms
1.0 cpu, 1024 ram, 500000 iterations, object type, object 500000: 67.086ms
1.0 cpu, 1024 ram, 500000 iterations, array_ type, array_ 500000: 27.643ms
1.0 cpu, 1024 ram, 500000 iterations, map___ type, map___ 500000: 142.133ms
2.0 cpu, 1024 ram, 500000 iterations, object type, object 500000: 59.768ms
2.0 cpu, 1024 ram, 500000 iterations, array_ type, array_ 500000: 25.864ms
2.0 cpu, 1024 ram, 500000 iterations, map___ type, map___ 500000: 97.494ms
3.0 cpu, 1024 ram, 500000 iterations, object type, object 500000: 60.746ms
3.0 cpu, 1024 ram, 500000 iterations, array_ type, array_ 500000: 26.186ms
3.0 cpu, 1024 ram, 500000 iterations, map___ type, map___ 500000: 88.878ms
4.0 cpu, 1024 ram, 500000 iterations, object type, object 500000: 56.709ms
4.0 cpu, 1024 ram, 500000 iterations, array_ type, array_ 500000: 25.888ms
4.0 cpu, 1024 ram, 500000 iterations, map___ type, map___ 500000: 96.701ms
0.5 cpu, 2048 ram, 500000 iterations, object type, object 500000: 105.523ms
0.5 cpu, 2048 ram, 500000 iterations, array_ type, array_ 500000: 25.996ms
0.5 cpu, 2048 ram, 500000 iterations, map___ type, map___ 500000: 193.146ms
1.0 cpu, 2048 ram, 500000 iterations, object type, object 500000: 43.218ms
1.0 cpu, 2048 ram, 500000 iterations, array_ type, array_ 500000: 25.998ms
1.0 cpu, 2048 ram, 500000 iterations, map___ type, map___ 500000: 81.835ms
2.0 cpu, 2048 ram, 500000 iterations, object type, object 500000: 44.087ms
2.0 cpu, 2048 ram, 500000 iterations, array_ type, array_ 500000: 25.606ms
2.0 cpu, 2048 ram, 500000 iterations, map___ type, map___ 500000: 80.229ms
3.0 cpu, 2048 ram, 500000 iterations, object type, object 500000: 40.308ms
3.0 cpu, 2048 ram, 500000 iterations, array_ type, array_ 500000: 26.692ms
3.0 cpu, 2048 ram, 500000 iterations, map___ type, map___ 500000: 77.984ms
4.0 cpu, 2048 ram, 500000 iterations, object type, object 500000: 43.551ms
4.0 cpu, 2048 ram, 500000 iterations, array_ type, array_ 500000: 25.71ms
4.0 cpu, 2048 ram, 500000 iterations, map___ type, map___ 500000: 76.576ms
0.5 cpu, 4096 ram, 500000 iterations, object type, object 500000: 92.332ms
0.5 cpu, 4096 ram, 500000 iterations, array_ type, array_ 500000: 85.884ms
0.5 cpu, 4096 ram, 500000 iterations, map___ type, map___ 500000: 143.357ms
1.0 cpu, 4096 ram, 500000 iterations, object type, object 500000: 44.387ms
1.0 cpu, 4096 ram, 500000 iterations, array_ type, array_ 500000: 25.245ms
1.0 cpu, 4096 ram, 500000 iterations, map___ type, map___ 500000: 89.02ms
2.0 cpu, 4096 ram, 500000 iterations, object type, object 500000: 40.698ms
2.0 cpu, 4096 ram, 500000 iterations, array_ type, array_ 500000: 25.287ms
2.0 cpu, 4096 ram, 500000 iterations, map___ type, map___ 500000: 72.006ms
3.0 cpu, 4096 ram, 500000 iterations, object type, object 500000: 40.236ms
3.0 cpu, 4096 ram, 500000 iterations, array_ type, array_ 500000: 26.136ms
3.0 cpu, 4096 ram, 500000 iterations, map___ type, map___ 500000: 82.249ms
4.0 cpu, 4096 ram, 500000 iterations, object type, object 500000: 43.233ms
4.0 cpu, 4096 ram, 500000 iterations, array_ type, array_ 500000: 26.429ms
4.0 cpu, 4096 ram, 500000 iterations, map___ type, map___ 500000: 86.242ms
0.5 cpu, 8192 ram, 500000 iterations, object type, object 500000: 78.757ms
0.5 cpu, 8192 ram, 500000 iterations, array_ type, array_ 500000: 39.127ms
0.5 cpu, 8192 ram, 500000 iterations, map___ type, map___ 500000: 142.118ms
1.0 cpu, 8192 ram, 500000 iterations, object type, object 500000: 42.766ms
1.0 cpu, 8192 ram, 500000 iterations, array_ type, array_ 500000: 27.402ms
1.0 cpu, 8192 ram, 500000 iterations, map___ type, map___ 500000: 81.064ms
2.0 cpu, 8192 ram, 500000 iterations, object type, object 500000: 42.331ms
2.0 cpu, 8192 ram, 500000 iterations, array_ type, array_ 500000: 25.486ms
2.0 cpu, 8192 ram, 500000 iterations, map___ type, map___ 500000: 70.165ms
3.0 cpu, 8192 ram, 500000 iterations, object type, object 500000: 40.986ms
3.0 cpu, 8192 ram, 500000 iterations, array_ type, array_ 500000: 25.23ms
3.0 cpu, 8192 ram, 500000 iterations, map___ type, map___ 500000: 82.578ms
4.0 cpu, 8192 ram, 500000 iterations, object type, object 500000: 44.065ms
4.0 cpu, 8192 ram, 500000 iterations, array_ type, array_ 500000: 26.203ms
4.0 cpu, 8192 ram, 500000 iterations, map___ type, map___ 500000: 80.298ms
0.5 cpu, 16384 ram, 500000 iterations, object type, object 500000: 96.6ms
0.5 cpu, 16384 ram, 500000 iterations, array_ type, array_ 500000: 25.562ms
0.5 cpu, 16384 ram, 500000 iterations, map___ type, map___ 500000: 137.038ms
1.0 cpu, 16384 ram, 500000 iterations, object type, object 500000: 41.264ms
1.0 cpu, 16384 ram, 500000 iterations, array_ type, array_ 500000: 24.912ms
1.0 cpu, 16384 ram, 500000 iterations, map___ type, map___ 500000: 86.133ms
2.0 cpu, 16384 ram, 500000 iterations, object type, object 500000: 42.893ms
2.0 cpu, 16384 ram, 500000 iterations, array_ type, array_ 500000: 28.366ms
2.0 cpu, 16384 ram, 500000 iterations, map___ type, map___ 500000: 81.26ms
3.0 cpu, 16384 ram, 500000 iterations, object type, object 500000: 41.471ms
3.0 cpu, 16384 ram, 500000 iterations, array_ type, array_ 500000: 25.311ms
3.0 cpu, 16384 ram, 500000 iterations, map___ type, map___ 500000: 83.578ms
4.0 cpu, 16384 ram, 500000 iterations, object type, object 500000: 42.227ms
4.0 cpu, 16384 ram, 500000 iterations, array_ type, array_ 500000: 25.156ms
4.0 cpu, 16384 ram, 500000 iterations, map___ type, map___ 500000: 88.334ms
0.5 cpu, 128 ram, 600000 iterations, object type, object 600000: 178.196ms
0.5 cpu, 128 ram, 600000 iterations, array_ type, array_ 600000: 76.817ms
0.5 cpu, 128 ram, 600000 iterations, map___ type, map___ 600000: 399.883ms
1.0 cpu, 128 ram, 600000 iterations, object type, object 600000: 81.231ms
1.0 cpu, 128 ram, 600000 iterations, array_ type, array_ 600000: 28.71ms
1.0 cpu, 128 ram, 600000 iterations, map___ type, map___ 600000: 199.145ms
2.0 cpu, 128 ram, 600000 iterations, object type, object 600000: 82.815ms
2.0 cpu, 128 ram, 600000 iterations, array_ type, array_ 600000: 29.552ms
2.0 cpu, 128 ram, 600000 iterations, map___ type, map___ 600000: 146.522ms
3.0 cpu, 128 ram, 600000 iterations, object type, object 600000: 67.022ms
3.0 cpu, 128 ram, 600000 iterations, array_ type, array_ 600000: 28.779ms
3.0 cpu, 128 ram, 600000 iterations, map___ type, map___ 600000: 155.06ms
4.0 cpu, 128 ram, 600000 iterations, object type, object 600000: 66.633ms
4.0 cpu, 128 ram, 600000 iterations, array_ type, array_ 600000: 30.161ms
4.0 cpu, 128 ram, 600000 iterations, map___ type, map___ 600000: 157.155ms
0.5 cpu, 256 ram, 600000 iterations, object type, object 600000: 167.805ms
0.5 cpu, 256 ram, 600000 iterations, array_ type, array_ 600000: 29.94ms
0.5 cpu, 256 ram, 600000 iterations, map___ type, map___ 600000: 429.177ms
1.0 cpu, 256 ram, 600000 iterations, object type, object 600000: 65.383ms
1.0 cpu, 256 ram, 600000 iterations, array_ type, array_ 600000: 28.356ms
1.0 cpu, 256 ram, 600000 iterations, map___ type, map___ 600000: 227.969ms
2.0 cpu, 256 ram, 600000 iterations, object type, object 600000: 64.858ms
2.0 cpu, 256 ram, 600000 iterations, array_ type, array_ 600000: 29.216ms
2.0 cpu, 256 ram, 600000 iterations, map___ type, map___ 600000: 143.377ms
3.0 cpu, 256 ram, 600000 iterations, object type, object 600000: 69.764ms
3.0 cpu, 256 ram, 600000 iterations, array_ type, array_ 600000: 29.639ms
3.0 cpu, 256 ram, 600000 iterations, map___ type, map___ 600000: 150.275ms
4.0 cpu, 256 ram, 600000 iterations, object type, object 600000: 65.897ms
4.0 cpu, 256 ram, 600000 iterations, array_ type, array_ 600000: 29.585ms
4.0 cpu, 256 ram, 600000 iterations, map___ type, map___ 600000: 155.936ms
0.5 cpu, 512 ram, 600000 iterations, object type, object 600000: 135.764ms
0.5 cpu, 512 ram, 600000 iterations, array_ type, array_ 600000: 28.902ms
0.5 cpu, 512 ram, 600000 iterations, map___ type, map___ 600000: 425.7ms
1.0 cpu, 512 ram, 600000 iterations, object type, object 600000: 113.98ms
1.0 cpu, 512 ram, 600000 iterations, array_ type, array_ 600000: 28.463ms
1.0 cpu, 512 ram, 600000 iterations, map___ type, map___ 600000: 198.12ms
2.0 cpu, 512 ram, 600000 iterations, object type, object 600000: 65.751ms
2.0 cpu, 512 ram, 600000 iterations, array_ type, array_ 600000: 28.847ms
2.0 cpu, 512 ram, 600000 iterations, map___ type, map___ 600000: 142.929ms
3.0 cpu, 512 ram, 600000 iterations, object type, object 600000: 65.01ms
3.0 cpu, 512 ram, 600000 iterations, array_ type, array_ 600000: 30.675ms
3.0 cpu, 512 ram, 600000 iterations, map___ type, map___ 600000: 157.548ms
4.0 cpu, 512 ram, 600000 iterations, object type, object 600000: 83.221ms
4.0 cpu, 512 ram, 600000 iterations, array_ type, array_ 600000: 29.069ms
4.0 cpu, 512 ram, 600000 iterations, map___ type, map___ 600000: 158.414ms
0.5 cpu, 1024 ram, 600000 iterations, object type, object 600000: 134.97ms
0.5 cpu, 1024 ram, 600000 iterations, array_ type, array_ 600000: 30.079ms
0.5 cpu, 1024 ram, 600000 iterations, map___ type, map___ 600000: 324.862ms
1.0 cpu, 1024 ram, 600000 iterations, object type, object 600000: 68.956ms
1.0 cpu, 1024 ram, 600000 iterations, array_ type, array_ 600000: 30.136ms
1.0 cpu, 1024 ram, 600000 iterations, map___ type, map___ 600000: 191.656ms
2.0 cpu, 1024 ram, 600000 iterations, object type, object 600000: 62.94ms
2.0 cpu, 1024 ram, 600000 iterations, array_ type, array_ 600000: 30.916ms
2.0 cpu, 1024 ram, 600000 iterations, map___ type, map___ 600000: 136.924ms
3.0 cpu, 1024 ram, 600000 iterations, object type, object 600000: 66.123ms
3.0 cpu, 1024 ram, 600000 iterations, array_ type, array_ 600000: 31.366ms
3.0 cpu, 1024 ram, 600000 iterations, map___ type, map___ 600000: 142.402ms
4.0 cpu, 1024 ram, 600000 iterations, object type, object 600000: 73.511ms
4.0 cpu, 1024 ram, 600000 iterations, array_ type, array_ 600000: 31.421ms
4.0 cpu, 1024 ram, 600000 iterations, map___ type, map___ 600000: 150.46ms
0.5 cpu, 2048 ram, 600000 iterations, object type, object 600000: 148.519ms
0.5 cpu, 2048 ram, 600000 iterations, array_ type, array_ 600000: 87.532ms
0.5 cpu, 2048 ram, 600000 iterations, map___ type, map___ 600000: 235.656ms
1.0 cpu, 2048 ram, 600000 iterations, object type, object 600000: 56.897ms
1.0 cpu, 2048 ram, 600000 iterations, array_ type, array_ 600000: 30.95ms
1.0 cpu, 2048 ram, 600000 iterations, map___ type, map___ 600000: 165.815ms
2.0 cpu, 2048 ram, 600000 iterations, object type, object 600000: 53.342ms
2.0 cpu, 2048 ram, 600000 iterations, array_ type, array_ 600000: 31.302ms
2.0 cpu, 2048 ram, 600000 iterations, map___ type, map___ 600000: 138.701ms
3.0 cpu, 2048 ram, 600000 iterations, object type, object 600000: 55.528ms
3.0 cpu, 2048 ram, 600000 iterations, array_ type, array_ 600000: 31.944ms
3.0 cpu, 2048 ram, 600000 iterations, map___ type, map___ 600000: 127.438ms
4.0 cpu, 2048 ram, 600000 iterations, object type, object 600000: 57.3ms
4.0 cpu, 2048 ram, 600000 iterations, array_ type, array_ 600000: 31.675ms
4.0 cpu, 2048 ram, 600000 iterations, map___ type, map___ 600000: 123.359ms
0.5 cpu, 4096 ram, 600000 iterations, object type, object 600000: 56.591ms
0.5 cpu, 4096 ram, 600000 iterations, array_ type, array_ 600000: 34.275ms
0.5 cpu, 4096 ram, 600000 iterations, map___ type, map___ 600000: 374.995ms
1.0 cpu, 4096 ram, 600000 iterations, object type, object 600000: 56.628ms
1.0 cpu, 4096 ram, 600000 iterations, array_ type, array_ 600000: 30.893ms
1.0 cpu, 4096 ram, 600000 iterations, map___ type, map___ 600000: 138.98ms
2.0 cpu, 4096 ram, 600000 iterations, object type, object 600000: 53.307ms
2.0 cpu, 4096 ram, 600000 iterations, array_ type, array_ 600000: 30.694ms
2.0 cpu, 4096 ram, 600000 iterations, map___ type, map___ 600000: 129.79ms
3.0 cpu, 4096 ram, 600000 iterations, object type, object 600000: 59.538ms
3.0 cpu, 4096 ram, 600000 iterations, array_ type, array_ 600000: 30.743ms
3.0 cpu, 4096 ram, 600000 iterations, map___ type, map___ 600000: 117.835ms
4.0 cpu, 4096 ram, 600000 iterations, object type, object 600000: 52.561ms
4.0 cpu, 4096 ram, 600000 iterations, array_ type, array_ 600000: 30.998ms
4.0 cpu, 4096 ram, 600000 iterations, map___ type, map___ 600000: 143.803ms
0.5 cpu, 8192 ram, 600000 iterations, object type, object 600000: 70.62ms
0.5 cpu, 8192 ram, 600000 iterations, array_ type, array_ 600000: 32.064ms
0.5 cpu, 8192 ram, 600000 iterations, map___ type, map___ 600000: 396.855ms
1.0 cpu, 8192 ram, 600000 iterations, object type, object 600000: 50.962ms
1.0 cpu, 8192 ram, 600000 iterations, array_ type, array_ 600000: 30.418ms
1.0 cpu, 8192 ram, 600000 iterations, map___ type, map___ 600000: 136.966ms
2.0 cpu, 8192 ram, 600000 iterations, object type, object 600000: 52.765ms
2.0 cpu, 8192 ram, 600000 iterations, array_ type, array_ 600000: 31.099ms
2.0 cpu, 8192 ram, 600000 iterations, map___ type, map___ 600000: 129.119ms
3.0 cpu, 8192 ram, 600000 iterations, object type, object 600000: 54.791ms
3.0 cpu, 8192 ram, 600000 iterations, array_ type, array_ 600000: 31.423ms
3.0 cpu, 8192 ram, 600000 iterations, map___ type, map___ 600000: 128.237ms
4.0 cpu, 8192 ram, 600000 iterations, object type, object 600000: 51.74ms
4.0 cpu, 8192 ram, 600000 iterations, array_ type, array_ 600000: 30.424ms
4.0 cpu, 8192 ram, 600000 iterations, map___ type, map___ 600000: 126.362ms
0.5 cpu, 16384 ram, 600000 iterations, object type, object 600000: 89.683ms
0.5 cpu, 16384 ram, 600000 iterations, array_ type, array_ 600000: 33.326ms
0.5 cpu, 16384 ram, 600000 iterations, map___ type, map___ 600000: 325.087ms
1.0 cpu, 16384 ram, 600000 iterations, object type, object 600000: 54.394ms
1.0 cpu, 16384 ram, 600000 iterations, array_ type, array_ 600000: 29.875ms
1.0 cpu, 16384 ram, 600000 iterations, map___ type, map___ 600000: 130.141ms
2.0 cpu, 16384 ram, 600000 iterations, object type, object 600000: 54.838ms
2.0 cpu, 16384 ram, 600000 iterations, array_ type, array_ 600000: 30.416ms
2.0 cpu, 16384 ram, 600000 iterations, map___ type, map___ 600000: 128.654ms
3.0 cpu, 16384 ram, 600000 iterations, object type, object 600000: 56.655ms
3.0 cpu, 16384 ram, 600000 iterations, array_ type, array_ 600000: 31.061ms
3.0 cpu, 16384 ram, 600000 iterations, map___ type, map___ 600000: 131.832ms
4.0 cpu, 16384 ram, 600000 iterations, object type, object 600000: 54.651ms
4.0 cpu, 16384 ram, 600000 iterations, array_ type, array_ 600000: 31.303ms
4.0 cpu, 16384 ram, 600000 iterations, map___ type, map___ 600000: 123.389ms
0.5 cpu, 128 ram, 700000 iterations, object type, object 700000: 259.656ms
0.5 cpu, 128 ram, 700000 iterations, array_ type, array_ 700000: 32.287ms
0.5 cpu, 128 ram, 700000 iterations, map___ type, map___ 700000: 516.607ms
1.0 cpu, 128 ram, 700000 iterations, object type, object 700000: 111.012ms
1.0 cpu, 128 ram, 700000 iterations, array_ type, array_ 700000: 32.803ms
1.0 cpu, 128 ram, 700000 iterations, map___ type, map___ 700000: 219.595ms
2.0 cpu, 128 ram, 700000 iterations, object type, object 700000: 88.397ms
2.0 cpu, 128 ram, 700000 iterations, array_ type, array_ 700000: 32.388ms
2.0 cpu, 128 ram, 700000 iterations, map___ type, map___ 700000: 162.039ms
3.0 cpu, 128 ram, 700000 iterations, object type, object 700000: 92.57ms
3.0 cpu, 128 ram, 700000 iterations, array_ type, array_ 700000: 34.353ms
3.0 cpu, 128 ram, 700000 iterations, map___ type, map___ 700000: 168.157ms
4.0 cpu, 128 ram, 700000 iterations, object type, object 700000: 86.359ms
4.0 cpu, 128 ram, 700000 iterations, array_ type, array_ 700000: 34.595ms
4.0 cpu, 128 ram, 700000 iterations, map___ type, map___ 700000: 174.975ms
0.5 cpu, 256 ram, 700000 iterations, object type, object 700000: 230.037ms
0.5 cpu, 256 ram, 700000 iterations, array_ type, array_ 700000: 32.515ms
0.5 cpu, 256 ram, 700000 iterations, map___ type, map___ 700000: 511.384ms
1.0 cpu, 256 ram, 700000 iterations, object type, object 700000: 116.906ms
1.0 cpu, 256 ram, 700000 iterations, array_ type, array_ 700000: 35.098ms
1.0 cpu, 256 ram, 700000 iterations, map___ type, map___ 700000: 254.85ms
2.0 cpu, 256 ram, 700000 iterations, object type, object 700000: 92.469ms
2.0 cpu, 256 ram, 700000 iterations, array_ type, array_ 700000: 32.318ms
2.0 cpu, 256 ram, 700000 iterations, map___ type, map___ 700000: 174.001ms
3.0 cpu, 256 ram, 700000 iterations, object type, object 700000: 96.274ms
3.0 cpu, 256 ram, 700000 iterations, array_ type, array_ 700000: 33.696ms
3.0 cpu, 256 ram, 700000 iterations, map___ type, map___ 700000: 182.412ms
4.0 cpu, 256 ram, 700000 iterations, object type, object 700000: 89.66ms
4.0 cpu, 256 ram, 700000 iterations, array_ type, array_ 700000: 33.584ms
4.0 cpu, 256 ram, 700000 iterations, map___ type, map___ 700000: 179.833ms
0.5 cpu, 512 ram, 700000 iterations, object type, object 700000: 298.821ms
0.5 cpu, 512 ram, 700000 iterations, array_ type, array_ 700000: 79.077ms
0.5 cpu, 512 ram, 700000 iterations, map___ type, map___ 700000: 443.662ms
1.0 cpu, 512 ram, 700000 iterations, object type, object 700000: 123.578ms
1.0 cpu, 512 ram, 700000 iterations, array_ type, array_ 700000: 32.096ms
1.0 cpu, 512 ram, 700000 iterations, map___ type, map___ 700000: 190.18ms
2.0 cpu, 512 ram, 700000 iterations, object type, object 700000: 88.956ms
2.0 cpu, 512 ram, 700000 iterations, array_ type, array_ 700000: 32.559ms
2.0 cpu, 512 ram, 700000 iterations, map___ type, map___ 700000: 175.299ms
3.0 cpu, 512 ram, 700000 iterations, object type, object 700000: 99.35ms
3.0 cpu, 512 ram, 700000 iterations, array_ type, array_ 700000: 33.234ms
3.0 cpu, 512 ram, 700000 iterations, map___ type, map___ 700000: 176.504ms
4.0 cpu, 512 ram, 700000 iterations, object type, object 700000: 90.305ms
4.0 cpu, 512 ram, 700000 iterations, array_ type, array_ 700000: 32.988ms
4.0 cpu, 512 ram, 700000 iterations, map___ type, map___ 700000: 180.246ms
0.5 cpu, 1024 ram, 700000 iterations, object type, object 700000: 187.653ms
0.5 cpu, 1024 ram, 700000 iterations, array_ type, array_ 700000: 82.443ms
0.5 cpu, 1024 ram, 700000 iterations, map___ type, map___ 700000: 478.799ms
1.0 cpu, 1024 ram, 700000 iterations, object type, object 700000: 106.229ms
1.0 cpu, 1024 ram, 700000 iterations, array_ type, array_ 700000: 33.148ms
1.0 cpu, 1024 ram, 700000 iterations, map___ type, map___ 700000: 212.182ms
2.0 cpu, 1024 ram, 700000 iterations, object type, object 700000: 71.81ms
2.0 cpu, 1024 ram, 700000 iterations, array_ type, array_ 700000: 32.78ms
2.0 cpu, 1024 ram, 700000 iterations, map___ type, map___ 700000: 156.227ms
3.0 cpu, 1024 ram, 700000 iterations, object type, object 700000: 72.027ms
3.0 cpu, 1024 ram, 700000 iterations, array_ type, array_ 700000: 33.534ms
3.0 cpu, 1024 ram, 700000 iterations, map___ type, map___ 700000: 157.549ms
4.0 cpu, 1024 ram, 700000 iterations, object type, object 700000: 77.984ms
4.0 cpu, 1024 ram, 700000 iterations, array_ type, array_ 700000: 33.522ms
4.0 cpu, 1024 ram, 700000 iterations, map___ type, map___ 700000: 162.312ms
0.5 cpu, 2048 ram, 700000 iterations, object type, object 700000: 205.298ms
0.5 cpu, 2048 ram, 700000 iterations, array_ type, array_ 700000: 34.019ms
0.5 cpu, 2048 ram, 700000 iterations, map___ type, map___ 700000: 326.946ms
1.0 cpu, 2048 ram, 700000 iterations, object type, object 700000: 117.538ms
1.0 cpu, 2048 ram, 700000 iterations, array_ type, array_ 700000: 33.101ms
1.0 cpu, 2048 ram, 700000 iterations, map___ type, map___ 700000: 160.432ms
2.0 cpu, 2048 ram, 700000 iterations, object type, object 700000: 80.523ms
2.0 cpu, 2048 ram, 700000 iterations, array_ type, array_ 700000: 34.484ms
2.0 cpu, 2048 ram, 700000 iterations, map___ type, map___ 700000: 144.916ms
3.0 cpu, 2048 ram, 700000 iterations, object type, object 700000: 85.402ms
3.0 cpu, 2048 ram, 700000 iterations, array_ type, array_ 700000: 36.325ms
3.0 cpu, 2048 ram, 700000 iterations, map___ type, map___ 700000: 150.052ms
4.0 cpu, 2048 ram, 700000 iterations, object type, object 700000: 90.95ms
4.0 cpu, 2048 ram, 700000 iterations, array_ type, array_ 700000: 35.604ms
4.0 cpu, 2048 ram, 700000 iterations, map___ type, map___ 700000: 147.864ms
0.5 cpu, 4096 ram, 700000 iterations, object type, object 700000: 258.282ms
0.5 cpu, 4096 ram, 700000 iterations, array_ type, array_ 700000: 34.406ms
0.5 cpu, 4096 ram, 700000 iterations, map___ type, map___ 700000: 420.616ms
1.0 cpu, 4096 ram, 700000 iterations, object type, object 700000: 111.08ms
1.0 cpu, 4096 ram, 700000 iterations, array_ type, array_ 700000: 34.035ms
1.0 cpu, 4096 ram, 700000 iterations, map___ type, map___ 700000: 193.794ms
2.0 cpu, 4096 ram, 700000 iterations, object type, object 700000: 84.033ms
2.0 cpu, 4096 ram, 700000 iterations, array_ type, array_ 700000: 33.955ms
2.0 cpu, 4096 ram, 700000 iterations, map___ type, map___ 700000: 134.056ms
3.0 cpu, 4096 ram, 700000 iterations, object type, object 700000: 82.528ms
3.0 cpu, 4096 ram, 700000 iterations, array_ type, array_ 700000: 34.245ms
3.0 cpu, 4096 ram, 700000 iterations, map___ type, map___ 700000: 143.147ms
4.0 cpu, 4096 ram, 700000 iterations, object type, object 700000: 83.799ms
4.0 cpu, 4096 ram, 700000 iterations, array_ type, array_ 700000: 33.945ms
4.0 cpu, 4096 ram, 700000 iterations, map___ type, map___ 700000: 145.738ms
0.5 cpu, 8192 ram, 700000 iterations, object type, object 700000: 302.467ms
0.5 cpu, 8192 ram, 700000 iterations, array_ type, array_ 700000: 34.536ms
0.5 cpu, 8192 ram, 700000 iterations, map___ type, map___ 700000: 384.788ms
1.0 cpu, 8192 ram, 700000 iterations, object type, object 700000: 120.984ms
1.0 cpu, 8192 ram, 700000 iterations, array_ type, array_ 700000: 35.038ms
1.0 cpu, 8192 ram, 700000 iterations, map___ type, map___ 700000: 182.499ms
2.0 cpu, 8192 ram, 700000 iterations, object type, object 700000: 85.34ms
2.0 cpu, 8192 ram, 700000 iterations, array_ type, array_ 700000: 34.235ms
2.0 cpu, 8192 ram, 700000 iterations, map___ type, map___ 700000: 130.133ms
3.0 cpu, 8192 ram, 700000 iterations, object type, object 700000: 82.643ms
3.0 cpu, 8192 ram, 700000 iterations, array_ type, array_ 700000: 32.628ms
3.0 cpu, 8192 ram, 700000 iterations, map___ type, map___ 700000: 138.082ms
4.0 cpu, 8192 ram, 700000 iterations, object type, object 700000: 86.397ms
4.0 cpu, 8192 ram, 700000 iterations, array_ type, array_ 700000: 34.562ms
4.0 cpu, 8192 ram, 700000 iterations, map___ type, map___ 700000: 147.113ms
0.5 cpu, 16384 ram, 700000 iterations, object type, object 700000: 210.627ms
0.5 cpu, 16384 ram, 700000 iterations, array_ type, array_ 700000: 34.749ms
0.5 cpu, 16384 ram, 700000 iterations, map___ type, map___ 700000: 383.331ms
1.0 cpu, 16384 ram, 700000 iterations, object type, object 700000: 116.222ms
1.0 cpu, 16384 ram, 700000 iterations, array_ type, array_ 700000: 33.499ms
1.0 cpu, 16384 ram, 700000 iterations, map___ type, map___ 700000: 166.995ms
2.0 cpu, 16384 ram, 700000 iterations, object type, object 700000: 87.985ms
2.0 cpu, 16384 ram, 700000 iterations, array_ type, array_ 700000: 34.141ms
2.0 cpu, 16384 ram, 700000 iterations, map___ type, map___ 700000: 144.43ms
3.0 cpu, 16384 ram, 700000 iterations, object type, object 700000: 80.925ms
3.0 cpu, 16384 ram, 700000 iterations, array_ type, array_ 700000: 34.092ms
3.0 cpu, 16384 ram, 700000 iterations, map___ type, map___ 700000: 138.279ms
4.0 cpu, 16384 ram, 700000 iterations, object type, object 700000: 84.946ms
4.0 cpu, 16384 ram, 700000 iterations, array_ type, array_ 700000: 34.471ms
4.0 cpu, 16384 ram, 700000 iterations, map___ type, map___ 700000: 146.123ms
0.5 cpu, 128 ram, 800000 iterations, object type, object 800000: 304.996ms
0.5 cpu, 128 ram, 800000 iterations, array_ type, array_ 800000: 85.948ms
0.5 cpu, 128 ram, 800000 iterations, map___ type, map___ 800000: 616.04ms
1.0 cpu, 128 ram, 800000 iterations, object type, object 800000: 107.95ms
1.0 cpu, 128 ram, 800000 iterations, array_ type, array_ 800000: 36.513ms
1.0 cpu, 128 ram, 800000 iterations, map___ type, map___ 800000: 266.703ms
2.0 cpu, 128 ram, 800000 iterations, object type, object 800000: 97.699ms
2.0 cpu, 128 ram, 800000 iterations, array_ type, array_ 800000: 36.135ms
2.0 cpu, 128 ram, 800000 iterations, map___ type, map___ 800000: 185.806ms
3.0 cpu, 128 ram, 800000 iterations, object type, object 800000: 97.703ms
3.0 cpu, 128 ram, 800000 iterations, array_ type, array_ 800000: 35.822ms
3.0 cpu, 128 ram, 800000 iterations, map___ type, map___ 800000: 188.058ms
4.0 cpu, 128 ram, 800000 iterations, object type, object 800000: 95.081ms
4.0 cpu, 128 ram, 800000 iterations, array_ type, array_ 800000: 35.63ms
4.0 cpu, 128 ram, 800000 iterations, map___ type, map___ 800000: 190.53ms
0.5 cpu, 256 ram, 800000 iterations, object type, object 800000: 231.995ms
0.5 cpu, 256 ram, 800000 iterations, array_ type, array_ 800000: 35.703ms
0.5 cpu, 256 ram, 800000 iterations, map___ type, map___ 800000: 553.201ms
1.0 cpu, 256 ram, 800000 iterations, object type, object 800000: 131.103ms
1.0 cpu, 256 ram, 800000 iterations, array_ type, array_ 800000: 35.364ms
1.0 cpu, 256 ram, 800000 iterations, map___ type, map___ 800000: 273.54ms
2.0 cpu, 256 ram, 800000 iterations, object type, object 800000: 97.86ms
2.0 cpu, 256 ram, 800000 iterations, array_ type, array_ 800000: 35.457ms
2.0 cpu, 256 ram, 800000 iterations, map___ type, map___ 800000: 291.513ms
3.0 cpu, 256 ram, 800000 iterations, object type, object 800000: 108.662ms
3.0 cpu, 256 ram, 800000 iterations, array_ type, array_ 800000: 37.456ms
3.0 cpu, 256 ram, 800000 iterations, map___ type, map___ 800000: 210.338ms
4.0 cpu, 256 ram, 800000 iterations, object type, object 800000: 98.981ms
4.0 cpu, 256 ram, 800000 iterations, array_ type, array_ 800000: 35.67ms
4.0 cpu, 256 ram, 800000 iterations, map___ type, map___ 800000: 196.17ms
0.5 cpu, 512 ram, 800000 iterations, object type, object 800000: 226.583ms
0.5 cpu, 512 ram, 800000 iterations, array_ type, array_ 800000: 35.284ms
0.5 cpu, 512 ram, 800000 iterations, map___ type, map___ 800000: 626.375ms
1.0 cpu, 512 ram, 800000 iterations, object type, object 800000: 119.043ms
1.0 cpu, 512 ram, 800000 iterations, array_ type, array_ 800000: 37.681ms
1.0 cpu, 512 ram, 800000 iterations, map___ type, map___ 800000: 283.559ms
2.0 cpu, 512 ram, 800000 iterations, object type, object 800000: 96.903ms
2.0 cpu, 512 ram, 800000 iterations, array_ type, array_ 800000: 40.076ms
2.0 cpu, 512 ram, 800000 iterations, map___ type, map___ 800000: 205.544ms
3.0 cpu, 512 ram, 800000 iterations, object type, object 800000: 99.75ms
3.0 cpu, 512 ram, 800000 iterations, array_ type, array_ 800000: 36.174ms
3.0 cpu, 512 ram, 800000 iterations, map___ type, map___ 800000: 208.825ms
4.0 cpu, 512 ram, 800000 iterations, object type, object 800000: 91.292ms
4.0 cpu, 512 ram, 800000 iterations, array_ type, array_ 800000: 39.513ms
4.0 cpu, 512 ram, 800000 iterations, map___ type, map___ 800000: 191.932ms
0.5 cpu, 1024 ram, 800000 iterations, object type, object 800000: 224.317ms
0.5 cpu, 1024 ram, 800000 iterations, array_ type, array_ 800000: 36.946ms
0.5 cpu, 1024 ram, 800000 iterations, map___ type, map___ 800000: 475.498ms
1.0 cpu, 1024 ram, 800000 iterations, object type, object 800000: 115.818ms
1.0 cpu, 1024 ram, 800000 iterations, array_ type, array_ 800000: 36.626ms
1.0 cpu, 1024 ram, 800000 iterations, map___ type, map___ 800000: 224.32ms
2.0 cpu, 1024 ram, 800000 iterations, object type, object 800000: 82.351ms
2.0 cpu, 1024 ram, 800000 iterations, array_ type, array_ 800000: 37.074ms
2.0 cpu, 1024 ram, 800000 iterations, map___ type, map___ 800000: 163.055ms
3.0 cpu, 1024 ram, 800000 iterations, object type, object 800000: 81.302ms
3.0 cpu, 1024 ram, 800000 iterations, array_ type, array_ 800000: 44.108ms
3.0 cpu, 1024 ram, 800000 iterations, map___ type, map___ 800000: 183.591ms
4.0 cpu, 1024 ram, 800000 iterations, object type, object 800000: 82.265ms
4.0 cpu, 1024 ram, 800000 iterations, array_ type, array_ 800000: 36.899ms
4.0 cpu, 1024 ram, 800000 iterations, map___ type, map___ 800000: 171.254ms
0.5 cpu, 2048 ram, 800000 iterations, object type, object 800000: 214.314ms
0.5 cpu, 2048 ram, 800000 iterations, array_ type, array_ 800000: 38.604ms
0.5 cpu, 2048 ram, 800000 iterations, map___ type, map___ 800000: 399.986ms
1.0 cpu, 2048 ram, 800000 iterations, object type, object 800000: 102.226ms
1.0 cpu, 2048 ram, 800000 iterations, array_ type, array_ 800000: 38.537ms
1.0 cpu, 2048 ram, 800000 iterations, map___ type, map___ 800000: 186.158ms
2.0 cpu, 2048 ram, 800000 iterations, object type, object 800000: 84.082ms
2.0 cpu, 2048 ram, 800000 iterations, array_ type, array_ 800000: 41.386ms
2.0 cpu, 2048 ram, 800000 iterations, map___ type, map___ 800000: 159.222ms
3.0 cpu, 2048 ram, 800000 iterations, object type, object 800000: 86.322ms
3.0 cpu, 2048 ram, 800000 iterations, array_ type, array_ 800000: 37.926ms
3.0 cpu, 2048 ram, 800000 iterations, map___ type, map___ 800000: 163.685ms
4.0 cpu, 2048 ram, 800000 iterations, object type, object 800000: 90.363ms
4.0 cpu, 2048 ram, 800000 iterations, array_ type, array_ 800000: 42.544ms
4.0 cpu, 2048 ram, 800000 iterations, map___ type, map___ 800000: 156.725ms
0.5 cpu, 4096 ram, 800000 iterations, object type, object 800000: 222.896ms
0.5 cpu, 4096 ram, 800000 iterations, array_ type, array_ 800000: 37.35ms
0.5 cpu, 4096 ram, 800000 iterations, map___ type, map___ 800000: 407.565ms
1.0 cpu, 4096 ram, 800000 iterations, object type, object 800000: 116.343ms
1.0 cpu, 4096 ram, 800000 iterations, array_ type, array_ 800000: 42.907ms
1.0 cpu, 4096 ram, 800000 iterations, map___ type, map___ 800000: 182.561ms
2.0 cpu, 4096 ram, 800000 iterations, object type, object 800000: 91.413ms
2.0 cpu, 4096 ram, 800000 iterations, array_ type, array_ 800000: 36.511ms
2.0 cpu, 4096 ram, 800000 iterations, map___ type, map___ 800000: 176.053ms
3.0 cpu, 4096 ram, 800000 iterations, object type, object 800000: 92.438ms
3.0 cpu, 4096 ram, 800000 iterations, array_ type, array_ 800000: 38.657ms
3.0 cpu, 4096 ram, 800000 iterations, map___ type, map___ 800000: 162.771ms
4.0 cpu, 4096 ram, 800000 iterations, object type, object 800000: 97.174ms
4.0 cpu, 4096 ram, 800000 iterations, array_ type, array_ 800000: 38.796ms
4.0 cpu, 4096 ram, 800000 iterations, map___ type, map___ 800000: 148.26ms
0.5 cpu, 8192 ram, 800000 iterations, object type, object 800000: 222.758ms
0.5 cpu, 8192 ram, 800000 iterations, array_ type, array_ 800000: 88.771ms
0.5 cpu, 8192 ram, 800000 iterations, map___ type, map___ 800000: 438.244ms
1.0 cpu, 8192 ram, 800000 iterations, object type, object 800000: 133.922ms
1.0 cpu, 8192 ram, 800000 iterations, array_ type, array_ 800000: 37.673ms
1.0 cpu, 8192 ram, 800000 iterations, map___ type, map___ 800000: 199.673ms
2.0 cpu, 8192 ram, 800000 iterations, object type, object 800000: 82.968ms
2.0 cpu, 8192 ram, 800000 iterations, array_ type, array_ 800000: 37.712ms
2.0 cpu, 8192 ram, 800000 iterations, map___ type, map___ 800000: 177.179ms
3.0 cpu, 8192 ram, 800000 iterations, object type, object 800000: 88.711ms
3.0 cpu, 8192 ram, 800000 iterations, array_ type, array_ 800000: 41.569ms
3.0 cpu, 8192 ram, 800000 iterations, map___ type, map___ 800000: 159.238ms
4.0 cpu, 8192 ram, 800000 iterations, object type, object 800000: 93.135ms
4.0 cpu, 8192 ram, 800000 iterations, array_ type, array_ 800000: 37.918ms
4.0 cpu, 8192 ram, 800000 iterations, map___ type, map___ 800000: 161.127ms
0.5 cpu, 16384 ram, 800000 iterations, object type, object 800000: 252.95ms
0.5 cpu, 16384 ram, 800000 iterations, array_ type, array_ 800000: 37.844ms
0.5 cpu, 16384 ram, 800000 iterations, map___ type, map___ 800000: 429.279ms
1.0 cpu, 16384 ram, 800000 iterations, object type, object 800000: 89.066ms
1.0 cpu, 16384 ram, 800000 iterations, array_ type, array_ 800000: 38.742ms
1.0 cpu, 16384 ram, 800000 iterations, map___ type, map___ 800000: 159.737ms
2.0 cpu, 16384 ram, 800000 iterations, object type, object 800000: 87.888ms
2.0 cpu, 16384 ram, 800000 iterations, array_ type, array_ 800000: 38.051ms
2.0 cpu, 16384 ram, 800000 iterations, map___ type, map___ 800000: 162.775ms
3.0 cpu, 16384 ram, 800000 iterations, object type, object 800000: 94.765ms
3.0 cpu, 16384 ram, 800000 iterations, array_ type, array_ 800000: 38.301ms
3.0 cpu, 16384 ram, 800000 iterations, map___ type, map___ 800000: 169.651ms
4.0 cpu, 16384 ram, 800000 iterations, object type, object 800000: 88.196ms
4.0 cpu, 16384 ram, 800000 iterations, array_ type, array_ 800000: 38.054ms
4.0 cpu, 16384 ram, 800000 iterations, map___ type, map___ 800000: 157.084ms
0.5 cpu, 128 ram, 900000 iterations, object type, object 900000: 405.981ms
0.5 cpu, 128 ram, 900000 iterations, array_ type, array_ 900000: 44.541ms
0.5 cpu, 128 ram, 900000 iterations, map___ type, map___ 900000: 647.314ms
1.0 cpu, 128 ram, 900000 iterations, object type, object 900000: 193.498ms
1.0 cpu, 128 ram, 900000 iterations, array_ type, array_ 900000: 42.298ms
1.0 cpu, 128 ram, 900000 iterations, map___ type, map___ 900000: 239.706ms
2.0 cpu, 128 ram, 900000 iterations, object type, object 900000: 127.035ms
2.0 cpu, 128 ram, 900000 iterations, array_ type, array_ 900000: 43.13ms
2.0 cpu, 128 ram, 900000 iterations, map___ type, map___ 900000: 196.275ms
3.0 cpu, 128 ram, 900000 iterations, object type, object 900000: 127.654ms
3.0 cpu, 128 ram, 900000 iterations, array_ type, array_ 900000: 42.648ms
3.0 cpu, 128 ram, 900000 iterations, map___ type, map___ 900000: 196.914ms
4.0 cpu, 128 ram, 900000 iterations, object type, object 900000: 127.634ms
4.0 cpu, 128 ram, 900000 iterations, array_ type, array_ 900000: 40.545ms
4.0 cpu, 128 ram, 900000 iterations, map___ type, map___ 900000: 203.676ms
0.5 cpu, 256 ram, 900000 iterations, object type, object 900000: 363.048ms
0.5 cpu, 256 ram, 900000 iterations, array_ type, array_ 900000: 43.735ms
0.5 cpu, 256 ram, 900000 iterations, map___ type, map___ 900000: 605.273ms
1.0 cpu, 256 ram, 900000 iterations, object type, object 900000: 181.182ms
1.0 cpu, 256 ram, 900000 iterations, array_ type, array_ 900000: 43.801ms
1.0 cpu, 256 ram, 900000 iterations, map___ type, map___ 900000: 259.152ms
2.0 cpu, 256 ram, 900000 iterations, object type, object 900000: 131.487ms
2.0 cpu, 256 ram, 900000 iterations, array_ type, array_ 900000: 40.785ms
2.0 cpu, 256 ram, 900000 iterations, map___ type, map___ 900000: 204.254ms
3.0 cpu, 256 ram, 900000 iterations, object type, object 900000: 128.99ms
3.0 cpu, 256 ram, 900000 iterations, array_ type, array_ 900000: 41.766ms
3.0 cpu, 256 ram, 900000 iterations, map___ type, map___ 900000: 198.38ms
4.0 cpu, 256 ram, 900000 iterations, object type, object 900000: 126.611ms
4.0 cpu, 256 ram, 900000 iterations, array_ type, array_ 900000: 41.746ms
4.0 cpu, 256 ram, 900000 iterations, map___ type, map___ 900000: 208.832ms
0.5 cpu, 512 ram, 900000 iterations, object type, object 900000: 449.539ms
0.5 cpu, 512 ram, 900000 iterations, array_ type, array_ 900000: 42.765ms
0.5 cpu, 512 ram, 900000 iterations, map___ type, map___ 900000: 659.531ms
1.0 cpu, 512 ram, 900000 iterations, object type, object 900000: 161.107ms
1.0 cpu, 512 ram, 900000 iterations, array_ type, array_ 900000: 41.314ms
1.0 cpu, 512 ram, 900000 iterations, map___ type, map___ 900000: 285.784ms
2.0 cpu, 512 ram, 900000 iterations, object type, object 900000: 171.384ms
2.0 cpu, 512 ram, 900000 iterations, array_ type, array_ 900000: 41.169ms
2.0 cpu, 512 ram, 900000 iterations, map___ type, map___ 900000: 193.061ms
3.0 cpu, 512 ram, 900000 iterations, object type, object 900000: 128.376ms
3.0 cpu, 512 ram, 900000 iterations, array_ type, array_ 900000: 41.378ms
3.0 cpu, 512 ram, 900000 iterations, map___ type, map___ 900000: 253.044ms
4.0 cpu, 512 ram, 900000 iterations, object type, object 900000: 124.678ms
4.0 cpu, 512 ram, 900000 iterations, array_ type, array_ 900000: 41.216ms
4.0 cpu, 512 ram, 900000 iterations, map___ type, map___ 900000: 192.804ms
0.5 cpu, 1024 ram, 900000 iterations, object type, object 900000: 295.986ms
0.5 cpu, 1024 ram, 900000 iterations, array_ type, array_ 900000: 46.751ms
0.5 cpu, 1024 ram, 900000 iterations, map___ type, map___ 900000: 610.153ms
1.0 cpu, 1024 ram, 900000 iterations, object type, object 900000: 137.489ms
1.0 cpu, 1024 ram, 900000 iterations, array_ type, array_ 900000: 43.469ms
1.0 cpu, 1024 ram, 900000 iterations, map___ type, map___ 900000: 251.038ms
2.0 cpu, 1024 ram, 900000 iterations, object type, object 900000: 109.074ms
2.0 cpu, 1024 ram, 900000 iterations, array_ type, array_ 900000: 44.587ms
2.0 cpu, 1024 ram, 900000 iterations, map___ type, map___ 900000: 232.145ms
3.0 cpu, 1024 ram, 900000 iterations, object type, object 900000: 127.494ms
3.0 cpu, 1024 ram, 900000 iterations, array_ type, array_ 900000: 45.648ms
3.0 cpu, 1024 ram, 900000 iterations, map___ type, map___ 900000: 192.634ms
4.0 cpu, 1024 ram, 900000 iterations, object type, object 900000: 115.675ms
4.0 cpu, 1024 ram, 900000 iterations, array_ type, array_ 900000: 42.481ms
4.0 cpu, 1024 ram, 900000 iterations, map___ type, map___ 900000: 196.435ms
0.5 cpu, 2048 ram, 900000 iterations, object type, object 900000: 236.877ms
0.5 cpu, 2048 ram, 900000 iterations, array_ type, array_ 900000: 100.215ms
0.5 cpu, 2048 ram, 900000 iterations, map___ type, map___ 900000: 457.761ms
1.0 cpu, 2048 ram, 900000 iterations, object type, object 900000: 115.01ms
1.0 cpu, 2048 ram, 900000 iterations, array_ type, array_ 900000: 44.131ms
1.0 cpu, 2048 ram, 900000 iterations, map___ type, map___ 900000: 229.048ms
2.0 cpu, 2048 ram, 900000 iterations, object type, object 900000: 99.576ms
2.0 cpu, 2048 ram, 900000 iterations, array_ type, array_ 900000: 44.096ms
2.0 cpu, 2048 ram, 900000 iterations, map___ type, map___ 900000: 200.038ms
3.0 cpu, 2048 ram, 900000 iterations, object type, object 900000: 97.349ms
3.0 cpu, 2048 ram, 900000 iterations, array_ type, array_ 900000: 56.618ms
3.0 cpu, 2048 ram, 900000 iterations, map___ type, map___ 900000: 177.216ms
4.0 cpu, 2048 ram, 900000 iterations, object type, object 900000: 98.292ms
4.0 cpu, 2048 ram, 900000 iterations, array_ type, array_ 900000: 43.977ms
4.0 cpu, 2048 ram, 900000 iterations, map___ type, map___ 900000: 182.372ms
0.5 cpu, 4096 ram, 900000 iterations, object type, object 900000: 305.433ms
0.5 cpu, 4096 ram, 900000 iterations, array_ type, array_ 900000: 42.992ms
0.5 cpu, 4096 ram, 900000 iterations, map___ type, map___ 900000: 466.44ms
1.0 cpu, 4096 ram, 900000 iterations, object type, object 900000: 159.592ms
1.0 cpu, 4096 ram, 900000 iterations, array_ type, array_ 900000: 42.053ms
1.0 cpu, 4096 ram, 900000 iterations, map___ type, map___ 900000: 229.868ms
2.0 cpu, 4096 ram, 900000 iterations, object type, object 900000: 92.258ms
2.0 cpu, 4096 ram, 900000 iterations, array_ type, array_ 900000: 44.033ms
2.0 cpu, 4096 ram, 900000 iterations, map___ type, map___ 900000: 162.906ms
3.0 cpu, 4096 ram, 900000 iterations, object type, object 900000: 92.047ms
3.0 cpu, 4096 ram, 900000 iterations, array_ type, array_ 900000: 45.262ms
3.0 cpu, 4096 ram, 900000 iterations, map___ type, map___ 900000: 189.663ms
4.0 cpu, 4096 ram, 900000 iterations, object type, object 900000: 93.4ms
4.0 cpu, 4096 ram, 900000 iterations, array_ type, array_ 900000: 43.574ms
4.0 cpu, 4096 ram, 900000 iterations, map___ type, map___ 900000: 182.441ms
0.5 cpu, 8192 ram, 900000 iterations, object type, object 900000: 256.151ms
0.5 cpu, 8192 ram, 900000 iterations, array_ type, array_ 900000: 43.077ms
0.5 cpu, 8192 ram, 900000 iterations, map___ type, map___ 900000: 486.759ms
1.0 cpu, 8192 ram, 900000 iterations, object type, object 900000: 119.223ms
1.0 cpu, 8192 ram, 900000 iterations, array_ type, array_ 900000: 45.571ms
1.0 cpu, 8192 ram, 900000 iterations, map___ type, map___ 900000: 226.205ms
2.0 cpu, 8192 ram, 900000 iterations, object type, object 900000: 92.847ms
2.0 cpu, 8192 ram, 900000 iterations, array_ type, array_ 900000: 41.665ms
2.0 cpu, 8192 ram, 900000 iterations, map___ type, map___ 900000: 166.421ms
3.0 cpu, 8192 ram, 900000 iterations, object type, object 900000: 96.272ms
3.0 cpu, 8192 ram, 900000 iterations, array_ type, array_ 900000: 42.744ms
3.0 cpu, 8192 ram, 900000 iterations, map___ type, map___ 900000: 192.618ms
4.0 cpu, 8192 ram, 900000 iterations, object type, object 900000: 100.597ms
4.0 cpu, 8192 ram, 900000 iterations, array_ type, array_ 900000: 43.797ms
4.0 cpu, 8192 ram, 900000 iterations, map___ type, map___ 900000: 187.772ms
0.5 cpu, 16384 ram, 900000 iterations, object type, object 900000: 269.509ms
0.5 cpu, 16384 ram, 900000 iterations, array_ type, array_ 900000: 97.828ms
0.5 cpu, 16384 ram, 900000 iterations, map___ type, map___ 900000: 438.903ms
1.0 cpu, 16384 ram, 900000 iterations, object type, object 900000: 139.677ms
1.0 cpu, 16384 ram, 900000 iterations, array_ type, array_ 900000: 43.989ms
1.0 cpu, 16384 ram, 900000 iterations, map___ type, map___ 900000: 210.83ms
2.0 cpu, 16384 ram, 900000 iterations, object type, object 900000: 92.26ms
2.0 cpu, 16384 ram, 900000 iterations, array_ type, array_ 900000: 43.022ms
2.0 cpu, 16384 ram, 900000 iterations, map___ type, map___ 900000: 169.262ms
3.0 cpu, 16384 ram, 900000 iterations, object type, object 900000: 95.751ms
3.0 cpu, 16384 ram, 900000 iterations, array_ type, array_ 900000: 43.04ms
3.0 cpu, 16384 ram, 900000 iterations, map___ type, map___ 900000: 171.201ms
4.0 cpu, 16384 ram, 900000 iterations, object type, object 900000: 91.063ms
4.0 cpu, 16384 ram, 900000 iterations, array_ type, array_ 900000: 44.134ms
4.0 cpu, 16384 ram, 900000 iterations, map___ type, map___ 900000: 181.613ms
0.5 cpu, 128 ram, 1000000 iterations, object type, object 1000000: 346.04ms
0.5 cpu, 128 ram, 1000000 iterations, array_ type, array_ 1000000: 47.185ms
0.5 cpu, 128 ram, 1000000 iterations, map___ type, map___ 1000000: 617.197ms
1.0 cpu, 128 ram, 1000000 iterations, object type, object 1000000: 165.967ms
1.0 cpu, 128 ram, 1000000 iterations, array_ type, array_ 1000000: 45.209ms
1.0 cpu, 128 ram, 1000000 iterations, map___ type, map___ 1000000: 351.217ms
2.0 cpu, 128 ram, 1000000 iterations, object type, object 1000000: 147.975ms
2.0 cpu, 128 ram, 1000000 iterations, array_ type, array_ 1000000: 45.879ms
2.0 cpu, 128 ram, 1000000 iterations, map___ type, map___ 1000000: 235.512ms
3.0 cpu, 128 ram, 1000000 iterations, object type, object 1000000: 139.454ms
3.0 cpu, 128 ram, 1000000 iterations, array_ type, array_ 1000000: 47.124ms
3.0 cpu, 128 ram, 1000000 iterations, map___ type, map___ 1000000: 231.58ms
4.0 cpu, 128 ram, 1000000 iterations, object type, object 1000000: 137.703ms
4.0 cpu, 128 ram, 1000000 iterations, array_ type, array_ 1000000: 45.966ms
4.0 cpu, 128 ram, 1000000 iterations, map___ type, map___ 1000000: 239.988ms
0.5 cpu, 256 ram, 1000000 iterations, object type, object 1000000: 418.265ms
0.5 cpu, 256 ram, 1000000 iterations, array_ type, array_ 1000000: 110.511ms
0.5 cpu, 256 ram, 1000000 iterations, map___ type, map___ 1000000: 642.749ms
1.0 cpu, 256 ram, 1000000 iterations, object type, object 1000000: 215.836ms
1.0 cpu, 256 ram, 1000000 iterations, array_ type, array_ 1000000: 46.868ms
1.0 cpu, 256 ram, 1000000 iterations, map___ type, map___ 1000000: 324.08ms
2.0 cpu, 256 ram, 1000000 iterations, object type, object 1000000: 139.404ms
2.0 cpu, 256 ram, 1000000 iterations, array_ type, array_ 1000000: 46.167ms
2.0 cpu, 256 ram, 1000000 iterations, map___ type, map___ 1000000: 236.971ms
3.0 cpu, 256 ram, 1000000 iterations, object type, object 1000000: 147.527ms
3.0 cpu, 256 ram, 1000000 iterations, array_ type, array_ 1000000: 47.2ms
3.0 cpu, 256 ram, 1000000 iterations, map___ type, map___ 1000000: 252.066ms
4.0 cpu, 256 ram, 1000000 iterations, object type, object 1000000: 142.519ms
4.0 cpu, 256 ram, 1000000 iterations, array_ type, array_ 1000000: 46.533ms
4.0 cpu, 256 ram, 1000000 iterations, map___ type, map___ 1000000: 229.26ms
0.5 cpu, 512 ram, 1000000 iterations, object type, object 1000000: 383.037ms
0.5 cpu, 512 ram, 1000000 iterations, array_ type, array_ 1000000: 46.298ms
0.5 cpu, 512 ram, 1000000 iterations, map___ type, map___ 1000000: 653.753ms
1.0 cpu, 512 ram, 1000000 iterations, object type, object 1000000: 179.566ms
1.0 cpu, 512 ram, 1000000 iterations, array_ type, array_ 1000000: 45.956ms
1.0 cpu, 512 ram, 1000000 iterations, map___ type, map___ 1000000: 277.597ms
2.0 cpu, 512 ram, 1000000 iterations, object type, object 1000000: 145.748ms
2.0 cpu, 512 ram, 1000000 iterations, array_ type, array_ 1000000: 45.264ms
2.0 cpu, 512 ram, 1000000 iterations, map___ type, map___ 1000000: 281.573ms
3.0 cpu, 512 ram, 1000000 iterations, object type, object 1000000: 142.152ms
3.0 cpu, 512 ram, 1000000 iterations, array_ type, array_ 1000000: 45.19ms
3.0 cpu, 512 ram, 1000000 iterations, map___ type, map___ 1000000: 227.453ms
4.0 cpu, 512 ram, 1000000 iterations, object type, object 1000000: 136.758ms
4.0 cpu, 512 ram, 1000000 iterations, array_ type, array_ 1000000: 45.932ms
4.0 cpu, 512 ram, 1000000 iterations, map___ type, map___ 1000000: 217.487ms
0.5 cpu, 1024 ram, 1000000 iterations, object type, object 1000000: 502.566ms
0.5 cpu, 1024 ram, 1000000 iterations, array_ type, array_ 1000000: 102.708ms
0.5 cpu, 1024 ram, 1000000 iterations, map___ type, map___ 1000000: 515.282ms
1.0 cpu, 1024 ram, 1000000 iterations, object type, object 1000000: 216.453ms
1.0 cpu, 1024 ram, 1000000 iterations, array_ type, array_ 1000000: 60.884ms
1.0 cpu, 1024 ram, 1000000 iterations, map___ type, map___ 1000000: 238.334ms
2.0 cpu, 1024 ram, 1000000 iterations, object type, object 1000000: 134.114ms
2.0 cpu, 1024 ram, 1000000 iterations, array_ type, array_ 1000000: 45.742ms
2.0 cpu, 1024 ram, 1000000 iterations, map___ type, map___ 1000000: 206.746ms
3.0 cpu, 1024 ram, 1000000 iterations, object type, object 1000000: 126.213ms
3.0 cpu, 1024 ram, 1000000 iterations, array_ type, array_ 1000000: 46.015ms
3.0 cpu, 1024 ram, 1000000 iterations, map___ type, map___ 1000000: 215.641ms
4.0 cpu, 1024 ram, 1000000 iterations, object type, object 1000000: 120.686ms
4.0 cpu, 1024 ram, 1000000 iterations, array_ type, array_ 1000000: 46.215ms
4.0 cpu, 1024 ram, 1000000 iterations, map___ type, map___ 1000000: 221.287ms
0.5 cpu, 2048 ram, 1000000 iterations, object type, object 1000000: 247.828ms
0.5 cpu, 2048 ram, 1000000 iterations, array_ type, array_ 1000000: 75.432ms
0.5 cpu, 2048 ram, 1000000 iterations, map___ type, map___ 1000000: 434.328ms
1.0 cpu, 2048 ram, 1000000 iterations, object type, object 1000000: 140.09ms
1.0 cpu, 2048 ram, 1000000 iterations, array_ type, array_ 1000000: 47.266ms
1.0 cpu, 2048 ram, 1000000 iterations, map___ type, map___ 1000000: 214.007ms
2.0 cpu, 2048 ram, 1000000 iterations, object type, object 1000000: 106.092ms
2.0 cpu, 2048 ram, 1000000 iterations, array_ type, array_ 1000000: 45.517ms
2.0 cpu, 2048 ram, 1000000 iterations, map___ type, map___ 1000000: 207.59ms
3.0 cpu, 2048 ram, 1000000 iterations, object type, object 1000000: 100.584ms
3.0 cpu, 2048 ram, 1000000 iterations, array_ type, array_ 1000000: 45.632ms
3.0 cpu, 2048 ram, 1000000 iterations, map___ type, map___ 1000000: 189.45ms
4.0 cpu, 2048 ram, 1000000 iterations, object type, object 1000000: 106.269ms
4.0 cpu, 2048 ram, 1000000 iterations, array_ type, array_ 1000000: 48.936ms
4.0 cpu, 2048 ram, 1000000 iterations, map___ type, map___ 1000000: 199.531ms
0.5 cpu, 4096 ram, 1000000 iterations, object type, object 1000000: 262.989ms
0.5 cpu, 4096 ram, 1000000 iterations, array_ type, array_ 1000000: 111.399ms
0.5 cpu, 4096 ram, 1000000 iterations, map___ type, map___ 1000000: 525.628ms
1.0 cpu, 4096 ram, 1000000 iterations, object type, object 1000000: 126.935ms
1.0 cpu, 4096 ram, 1000000 iterations, array_ type, array_ 1000000: 47.415ms
1.0 cpu, 4096 ram, 1000000 iterations, map___ type, map___ 1000000: 229.096ms
2.0 cpu, 4096 ram, 1000000 iterations, object type, object 1000000: 98.004ms
2.0 cpu, 4096 ram, 1000000 iterations, array_ type, array_ 1000000: 49.409ms
2.0 cpu, 4096 ram, 1000000 iterations, map___ type, map___ 1000000: 188.767ms
3.0 cpu, 4096 ram, 1000000 iterations, object type, object 1000000: 97.27ms
3.0 cpu, 4096 ram, 1000000 iterations, array_ type, array_ 1000000: 46.138ms
3.0 cpu, 4096 ram, 1000000 iterations, map___ type, map___ 1000000: 220.794ms
4.0 cpu, 4096 ram, 1000000 iterations, object type, object 1000000: 95.776ms
4.0 cpu, 4096 ram, 1000000 iterations, array_ type, array_ 1000000: 47.266ms
4.0 cpu, 4096 ram, 1000000 iterations, map___ type, map___ 1000000: 185.383ms
0.5 cpu, 8192 ram, 1000000 iterations, object type, object 1000000: 276.422ms
0.5 cpu, 8192 ram, 1000000 iterations, array_ type, array_ 1000000: 99.84ms
0.5 cpu, 8192 ram, 1000000 iterations, map___ type, map___ 1000000: 525.703ms
1.0 cpu, 8192 ram, 1000000 iterations, object type, object 1000000: 119.25ms
1.0 cpu, 8192 ram, 1000000 iterations, array_ type, array_ 1000000: 46.557ms
1.0 cpu, 8192 ram, 1000000 iterations, map___ type, map___ 1000000: 261.801ms
2.0 cpu, 8192 ram, 1000000 iterations, object type, object 1000000: 98.615ms
2.0 cpu, 8192 ram, 1000000 iterations, array_ type, array_ 1000000: 47.054ms
2.0 cpu, 8192 ram, 1000000 iterations, map___ type, map___ 1000000: 197.773ms
3.0 cpu, 8192 ram, 1000000 iterations, object type, object 1000000: 114.478ms
3.0 cpu, 8192 ram, 1000000 iterations, array_ type, array_ 1000000: 46.595ms
3.0 cpu, 8192 ram, 1000000 iterations, map___ type, map___ 1000000: 256.149ms
4.0 cpu, 8192 ram, 1000000 iterations, object type, object 1000000: 105.168ms
4.0 cpu, 8192 ram, 1000000 iterations, array_ type, array_ 1000000: 48.851ms
4.0 cpu, 8192 ram, 1000000 iterations, map___ type, map___ 1000000: 204.947ms
0.5 cpu, 16384 ram, 1000000 iterations, object type, object 1000000: 311.34ms
0.5 cpu, 16384 ram, 1000000 iterations, array_ type, array_ 1000000: 110.49ms
0.5 cpu, 16384 ram, 1000000 iterations, map___ type, map___ 1000000: 521.187ms
1.0 cpu, 16384 ram, 1000000 iterations, object type, object 1000000: 133.867ms
1.0 cpu, 16384 ram, 1000000 iterations, array_ type, array_ 1000000: 46.262ms
1.0 cpu, 16384 ram, 1000000 iterations, map___ type, map___ 1000000: 300.723ms
2.0 cpu, 16384 ram, 1000000 iterations, object type, object 1000000: 104.052ms
2.0 cpu, 16384 ram, 1000000 iterations, array_ type, array_ 1000000: 46.284ms
2.0 cpu, 16384 ram, 1000000 iterations, map___ type, map___ 1000000: 191.349ms
3.0 cpu, 16384 ram, 1000000 iterations, object type, object 1000000: 97.417ms
3.0 cpu, 16384 ram, 1000000 iterations, array_ type, array_ 1000000: 52.783ms
3.0 cpu, 16384 ram, 1000000 iterations, map___ type, map___ 1000000: 208.854ms
4.0 cpu, 16384 ram, 1000000 iterations, object type, object 1000000: 97.613ms
4.0 cpu, 16384 ram, 1000000 iterations, array_ type, array_ 1000000: 46.34ms
4.0 cpu, 16384 ram, 1000000 iterations, map___ type, map___ 1000000: 189.633ms
0.5 cpu, 128 ram, 2000000 iterations, object type, object 2000000: 1.082s
0.5 cpu, 128 ram, 2000000 iterations, array_ type, array_ 2000000: 204.848ms
0.5 cpu, 128 ram, 2000000 iterations, map___ type, map___ 2000000: 1.800s
1.0 cpu, 128 ram, 2000000 iterations, object type, object 2000000: 414.288ms
1.0 cpu, 128 ram, 2000000 iterations, array_ type, array_ 2000000: 91.127ms
1.0 cpu, 128 ram, 2000000 iterations, map___ type, map___ 2000000: 755.539ms
2.0 cpu, 128 ram, 2000000 iterations, object type, object 2000000: 391.987ms
2.0 cpu, 128 ram, 2000000 iterations, array_ type, array_ 2000000: 91.07ms
2.0 cpu, 128 ram, 2000000 iterations, map___ type, map___ 2000000: 566.795ms
3.0 cpu, 128 ram, 2000000 iterations, object type, object 2000000: 314.583ms
3.0 cpu, 128 ram, 2000000 iterations, array_ type, array_ 2000000: 92.336ms
3.0 cpu, 128 ram, 2000000 iterations, map___ type, map___ 2000000: 546.47ms
4.0 cpu, 128 ram, 2000000 iterations, object type, object 2000000: 390.242ms
4.0 cpu, 128 ram, 2000000 iterations, array_ type, array_ 2000000: 92.067ms
4.0 cpu, 128 ram, 2000000 iterations, map___ type, map___ 2000000: 553.984ms
0.5 cpu, 256 ram, 2000000 iterations, object type, object 2000000: 1.028s
0.5 cpu, 256 ram, 2000000 iterations, array_ type, array_ 2000000: 203.871ms
0.5 cpu, 256 ram, 2000000 iterations, map___ type, map___ 2000000: 1.744s
1.0 cpu, 256 ram, 2000000 iterations, object type, object 2000000: 436.672ms
1.0 cpu, 256 ram, 2000000 iterations, array_ type, array_ 2000000: 102.64ms
1.0 cpu, 256 ram, 2000000 iterations, map___ type, map___ 2000000: 727.406ms
2.0 cpu, 256 ram, 2000000 iterations, object type, object 2000000: 316.073ms
2.0 cpu, 256 ram, 2000000 iterations, array_ type, array_ 2000000: 91.143ms
2.0 cpu, 256 ram, 2000000 iterations, map___ type, map___ 2000000: 552.373ms
3.0 cpu, 256 ram, 2000000 iterations, object type, object 2000000: 321.712ms
3.0 cpu, 256 ram, 2000000 iterations, array_ type, array_ 2000000: 91.529ms
3.0 cpu, 256 ram, 2000000 iterations, map___ type, map___ 2000000: 520.317ms
4.0 cpu, 256 ram, 2000000 iterations, object type, object 2000000: 317.016ms
4.0 cpu, 256 ram, 2000000 iterations, array_ type, array_ 2000000: 91.54ms
4.0 cpu, 256 ram, 2000000 iterations, map___ type, map___ 2000000: 598.154ms
0.5 cpu, 512 ram, 2000000 iterations, object type, object 2000000: 1.154s
0.5 cpu, 512 ram, 2000000 iterations, array_ type, array_ 2000000: 199.828ms
0.5 cpu, 512 ram, 2000000 iterations, map___ type, map___ 2000000: 1.524s
1.0 cpu, 512 ram, 2000000 iterations, object type, object 2000000: 475.365ms
1.0 cpu, 512 ram, 2000000 iterations, array_ type, array_ 2000000: 104.29ms
1.0 cpu, 512 ram, 2000000 iterations, map___ type, map___ 2000000: 732.272ms
2.0 cpu, 512 ram, 2000000 iterations, object type, object 2000000: 318.365ms
2.0 cpu, 512 ram, 2000000 iterations, array_ type, array_ 2000000: 90.695ms
2.0 cpu, 512 ram, 2000000 iterations, map___ type, map___ 2000000: 542.719ms
3.0 cpu, 512 ram, 2000000 iterations, object type, object 2000000: 322.469ms
3.0 cpu, 512 ram, 2000000 iterations, array_ type, array_ 2000000: 91.294ms
3.0 cpu, 512 ram, 2000000 iterations, map___ type, map___ 2000000: 548.217ms
4.0 cpu, 512 ram, 2000000 iterations, object type, object 2000000: 318.663ms
4.0 cpu, 512 ram, 2000000 iterations, array_ type, array_ 2000000: 101.088ms
4.0 cpu, 512 ram, 2000000 iterations, map___ type, map___ 2000000: 519.079ms
0.5 cpu, 1024 ram, 2000000 iterations, object type, object 2000000: 931.231ms
0.5 cpu, 1024 ram, 2000000 iterations, array_ type, array_ 2000000: 145.35ms
0.5 cpu, 1024 ram, 2000000 iterations, map___ type, map___ 2000000: 1.651s
1.0 cpu, 1024 ram, 2000000 iterations, object type, object 2000000: 417.127ms
1.0 cpu, 1024 ram, 2000000 iterations, array_ type, array_ 2000000: 90.573ms
1.0 cpu, 1024 ram, 2000000 iterations, map___ type, map___ 2000000: 1.137s
2.0 cpu, 1024 ram, 2000000 iterations, object type, object 2000000: 258.969ms
2.0 cpu, 1024 ram, 2000000 iterations, array_ type, array_ 2000000: 88.995ms
2.0 cpu, 1024 ram, 2000000 iterations, map___ type, map___ 2000000: 547.254ms
3.0 cpu, 1024 ram, 2000000 iterations, object type, object 2000000: 265.238ms
3.0 cpu, 1024 ram, 2000000 iterations, array_ type, array_ 2000000: 90.715ms
3.0 cpu, 1024 ram, 2000000 iterations, map___ type, map___ 2000000: 629.524ms
4.0 cpu, 1024 ram, 2000000 iterations, object type, object 2000000: 269.4ms
4.0 cpu, 1024 ram, 2000000 iterations, array_ type, array_ 2000000: 93.55ms
4.0 cpu, 1024 ram, 2000000 iterations, map___ type, map___ 2000000: 523.906ms
0.5 cpu, 2048 ram, 2000000 iterations, object type, object 2000000: 626.678ms
0.5 cpu, 2048 ram, 2000000 iterations, array_ type, array_ 2000000: 202.163ms
0.5 cpu, 2048 ram, 2000000 iterations, map___ type, map___ 2000000: 1.430s
1.0 cpu, 2048 ram, 2000000 iterations, object type, object 2000000: 353.207ms
1.0 cpu, 2048 ram, 2000000 iterations, array_ type, array_ 2000000: 90.498ms
1.0 cpu, 2048 ram, 2000000 iterations, map___ type, map___ 2000000: 696.478ms
2.0 cpu, 2048 ram, 2000000 iterations, object type, object 2000000: 240.941ms
2.0 cpu, 2048 ram, 2000000 iterations, array_ type, array_ 2000000: 89.115ms
2.0 cpu, 2048 ram, 2000000 iterations, map___ type, map___ 2000000: 532.552ms
3.0 cpu, 2048 ram, 2000000 iterations, object type, object 2000000: 234.458ms
3.0 cpu, 2048 ram, 2000000 iterations, array_ type, array_ 2000000: 92.336ms
3.0 cpu, 2048 ram, 2000000 iterations, map___ type, map___ 2000000: 540.54ms
4.0 cpu, 2048 ram, 2000000 iterations, object type, object 2000000: 241.369ms
4.0 cpu, 2048 ram, 2000000 iterations, array_ type, array_ 2000000: 91.858ms
4.0 cpu, 2048 ram, 2000000 iterations, map___ type, map___ 2000000: 522.24ms
0.5 cpu, 4096 ram, 2000000 iterations, object type, object 2000000: 524.109ms
0.5 cpu, 4096 ram, 2000000 iterations, array_ type, array_ 2000000: 213.234ms
0.5 cpu, 4096 ram, 2000000 iterations, map___ type, map___ 2000000: 1.035s
1.0 cpu, 4096 ram, 2000000 iterations, object type, object 2000000: 248.243ms
1.0 cpu, 4096 ram, 2000000 iterations, array_ type, array_ 2000000: 93.545ms
1.0 cpu, 4096 ram, 2000000 iterations, map___ type, map___ 2000000: 528.043ms
2.0 cpu, 4096 ram, 2000000 iterations, object type, object 2000000: 187.287ms
2.0 cpu, 4096 ram, 2000000 iterations, array_ type, array_ 2000000: 93.772ms
2.0 cpu, 4096 ram, 2000000 iterations, map___ type, map___ 2000000: 513.269ms
3.0 cpu, 4096 ram, 2000000 iterations, object type, object 2000000: 195.717ms
3.0 cpu, 4096 ram, 2000000 iterations, array_ type, array_ 2000000: 92.016ms
3.0 cpu, 4096 ram, 2000000 iterations, map___ type, map___ 2000000: 458.542ms
4.0 cpu, 4096 ram, 2000000 iterations, object type, object 2000000: 196.486ms
4.0 cpu, 4096 ram, 2000000 iterations, array_ type, array_ 2000000: 91.383ms
4.0 cpu, 4096 ram, 2000000 iterations, map___ type, map___ 2000000: 486.178ms
0.5 cpu, 8192 ram, 2000000 iterations, object type, object 2000000: 498.653ms
0.5 cpu, 8192 ram, 2000000 iterations, array_ type, array_ 2000000: 200.115ms
0.5 cpu, 8192 ram, 2000000 iterations, map___ type, map___ 2000000: 1.218s
1.0 cpu, 8192 ram, 2000000 iterations, object type, object 2000000: 246.09ms
1.0 cpu, 8192 ram, 2000000 iterations, array_ type, array_ 2000000: 91.196ms
1.0 cpu, 8192 ram, 2000000 iterations, map___ type, map___ 2000000: 586.509ms
2.0 cpu, 8192 ram, 2000000 iterations, object type, object 2000000: 189.8ms
2.0 cpu, 8192 ram, 2000000 iterations, array_ type, array_ 2000000: 94.079ms
2.0 cpu, 8192 ram, 2000000 iterations, map___ type, map___ 2000000: 476.34ms
3.0 cpu, 8192 ram, 2000000 iterations, object type, object 2000000: 197.219ms
3.0 cpu, 8192 ram, 2000000 iterations, array_ type, array_ 2000000: 100.168ms
3.0 cpu, 8192 ram, 2000000 iterations, map___ type, map___ 2000000: 461.876ms
4.0 cpu, 8192 ram, 2000000 iterations, object type, object 2000000: 195.808ms
4.0 cpu, 8192 ram, 2000000 iterations, array_ type, array_ 2000000: 92.539ms
4.0 cpu, 8192 ram, 2000000 iterations, map___ type, map___ 2000000: 480.817ms
0.5 cpu, 16384 ram, 2000000 iterations, object type, object 2000000: 500.352ms
0.5 cpu, 16384 ram, 2000000 iterations, array_ type, array_ 2000000: 206.207ms
0.5 cpu, 16384 ram, 2000000 iterations, map___ type, map___ 2000000: 1.140s
1.0 cpu, 16384 ram, 2000000 iterations, object type, object 2000000: 252.456ms
1.0 cpu, 16384 ram, 2000000 iterations, array_ type, array_ 2000000: 93.999ms
1.0 cpu, 16384 ram, 2000000 iterations, map___ type, map___ 2000000: 532.521ms
2.0 cpu, 16384 ram, 2000000 iterations, object type, object 2000000: 188.853ms
2.0 cpu, 16384 ram, 2000000 iterations, array_ type, array_ 2000000: 93.762ms
2.0 cpu, 16384 ram, 2000000 iterations, map___ type, map___ 2000000: 469.561ms
3.0 cpu, 16384 ram, 2000000 iterations, object type, object 2000000: 220.095ms
3.0 cpu, 16384 ram, 2000000 iterations, array_ type, array_ 2000000: 92.915ms
3.0 cpu, 16384 ram, 2000000 iterations, map___ type, map___ 2000000: 496.566ms
4.0 cpu, 16384 ram, 2000000 iterations, object type, object 2000000: 193.981ms
4.0 cpu, 16384 ram, 2000000 iterations, array_ type, array_ 2000000: 91.588ms
4.0 cpu, 16384 ram, 2000000 iterations, map___ type, map___ 2000000: 508.588ms
0.5 cpu, 128 ram, 3000000 iterations, object type, object 3000000: 2.461s
0.5 cpu, 128 ram, 3000000 iterations, array_ type, array_ 3000000: 294.368ms
0.5 cpu, 128 ram, 3000000 iterations, map___ type,
1.0 cpu, 128 ram, 3000000 iterations, object type,
1.0 cpu, 128 ram, 3000000 iterations, array_ type, array_ 3000000: 152.918ms
1.0 cpu, 128 ram, 3000000 iterations, map___ type,
2.0 cpu, 128 ram, 3000000 iterations, object type, object 3000000: 565.967ms
2.0 cpu, 128 ram, 3000000 iterations, array_ type, array_ 3000000: 135.177ms
2.0 cpu, 128 ram, 3000000 iterations, map___ type,
3.0 cpu, 128 ram, 3000000 iterations, object type, object 3000000: 500.391ms
3.0 cpu, 128 ram, 3000000 iterations, array_ type, array_ 3000000: 135.862ms
3.0 cpu, 128 ram, 3000000 iterations, map___ type,
4.0 cpu, 128 ram, 3000000 iterations, object type, object 3000000: 510.767ms
4.0 cpu, 128 ram, 3000000 iterations, array_ type, array_ 3000000: 134.962ms
4.0 cpu, 128 ram, 3000000 iterations, map___ type,
0.5 cpu, 256 ram, 3000000 iterations, object type, object 3000000: 1.161s
0.5 cpu, 256 ram, 3000000 iterations, array_ type, array_ 3000000: 253.212ms
0.5 cpu, 256 ram, 3000000 iterations, map___ type, map___ 3000000: 3.358s
1.0 cpu, 256 ram, 3000000 iterations, object type, object 3000000: 709.311ms
1.0 cpu, 256 ram, 3000000 iterations, array_ type, array_ 3000000: 176.894ms
1.0 cpu, 256 ram, 3000000 iterations, map___ type, map___ 3000000: 1.402s
2.0 cpu, 256 ram, 3000000 iterations, object type, object 3000000: 523.881ms
2.0 cpu, 256 ram, 3000000 iterations, array_ type, array_ 3000000: 134.215ms
2.0 cpu, 256 ram, 3000000 iterations, map___ type, map___ 3000000: 1.093s
3.0 cpu, 256 ram, 3000000 iterations, object type, object 3000000: 491.463ms
3.0 cpu, 256 ram, 3000000 iterations, array_ type, array_ 3000000: 211.439ms
3.0 cpu, 256 ram, 3000000 iterations, map___ type, map___ 3000000: 939.227ms
4.0 cpu, 256 ram, 3000000 iterations, object type, object 3000000: 514.895ms
4.0 cpu, 256 ram, 3000000 iterations, array_ type, array_ 3000000: 134.056ms
4.0 cpu, 256 ram, 3000000 iterations, map___ type, map___ 3000000: 967.745ms
0.5 cpu, 512 ram, 3000000 iterations, object type, object 3000000: 1.541s
0.5 cpu, 512 ram, 3000000 iterations, array_ type, array_ 3000000: 288.298ms
0.5 cpu, 512 ram, 3000000 iterations, map___ type, map___ 3000000: 3.181s
1.0 cpu, 512 ram, 3000000 iterations, object type, object 3000000: 738.567ms
1.0 cpu, 512 ram, 3000000 iterations, array_ type, array_ 3000000: 141.965ms
1.0 cpu, 512 ram, 3000000 iterations, map___ type, map___ 3000000: 1.310s
2.0 cpu, 512 ram, 3000000 iterations, object type, object 3000000: 505.29ms
2.0 cpu, 512 ram, 3000000 iterations, array_ type, array_ 3000000: 137.349ms
2.0 cpu, 512 ram, 3000000 iterations, map___ type, map___ 3000000: 1.011s
3.0 cpu, 512 ram, 3000000 iterations, object type, object 3000000: 492.031ms
3.0 cpu, 512 ram, 3000000 iterations, array_ type, array_ 3000000: 135.593ms
3.0 cpu, 512 ram, 3000000 iterations, map___ type, map___ 3000000: 1.033s
4.0 cpu, 512 ram, 3000000 iterations, object type, object 3000000: 521.517ms
4.0 cpu, 512 ram, 3000000 iterations, array_ type, array_ 3000000: 135.491ms
4.0 cpu, 512 ram, 3000000 iterations, map___ type, map___ 3000000: 1.062s
0.5 cpu, 1024 ram, 3000000 iterations, object type, object 3000000: 1.725s
0.5 cpu, 1024 ram, 3000000 iterations, array_ type, array_ 3000000: 308.676ms
0.5 cpu, 1024 ram, 3000000 iterations, map___ type, map___ 3000000: 2.878s
1.0 cpu, 1024 ram, 3000000 iterations, object type, object 3000000: 803.041ms
1.0 cpu, 1024 ram, 3000000 iterations, array_ type, array_ 3000000: 142.423ms
1.0 cpu, 1024 ram, 3000000 iterations, map___ type, map___ 3000000: 1.340s
2.0 cpu, 1024 ram, 3000000 iterations, object type, object 3000000: 416.918ms
2.0 cpu, 1024 ram, 3000000 iterations, array_ type, array_ 3000000: 134.15ms
2.0 cpu, 1024 ram, 3000000 iterations, map___ type, map___ 3000000: 1.165s
3.0 cpu, 1024 ram, 3000000 iterations, object type, object 3000000: 492.762ms
3.0 cpu, 1024 ram, 3000000 iterations, array_ type, array_ 3000000: 136.673ms
3.0 cpu, 1024 ram, 3000000 iterations, map___ type, map___ 3000000: 990.866ms
4.0 cpu, 1024 ram, 3000000 iterations, object type, object 3000000: 499.962ms
4.0 cpu, 1024 ram, 3000000 iterations, array_ type, array_ 3000000: 137.086ms
4.0 cpu, 1024 ram, 3000000 iterations, map___ type, map___ 3000000: 988.026ms
0.5 cpu, 2048 ram, 3000000 iterations, object type, object 3000000: 1.107s
0.5 cpu, 2048 ram, 3000000 iterations, array_ type, array_ 3000000: 296.309ms
0.5 cpu, 2048 ram, 3000000 iterations, map___ type, map___ 3000000: 2.579s
1.0 cpu, 2048 ram, 3000000 iterations, object type, object 3000000: 474.179ms
1.0 cpu, 2048 ram, 3000000 iterations, array_ type, array_ 3000000: 143.855ms
1.0 cpu, 2048 ram, 3000000 iterations, map___ type, map___ 3000000: 1.304s
2.0 cpu, 2048 ram, 3000000 iterations, object type, object 3000000: 381.718ms
2.0 cpu, 2048 ram, 3000000 iterations, array_ type, array_ 3000000: 133.454ms
2.0 cpu, 2048 ram, 3000000 iterations, map___ type, map___ 3000000: 1.040s
3.0 cpu, 2048 ram, 3000000 iterations, object type, object 3000000: 390.484ms
3.0 cpu, 2048 ram, 3000000 iterations, array_ type, array_ 3000000: 134.7ms
3.0 cpu, 2048 ram, 3000000 iterations, map___ type, map___ 3000000: 960.498ms
4.0 cpu, 2048 ram, 3000000 iterations, object type, object 3000000: 387.429ms
4.0 cpu, 2048 ram, 3000000 iterations, array_ type, array_ 3000000: 131.962ms
4.0 cpu, 2048 ram, 3000000 iterations, map___ type, map___ 3000000: 1.094s
0.5 cpu, 4096 ram, 3000000 iterations, object type, object 3000000: 899.164ms
0.5 cpu, 4096 ram, 3000000 iterations, array_ type, array_ 3000000: 252.497ms
0.5 cpu, 4096 ram, 3000000 iterations, map___ type, map___ 3000000: 2.717s
1.0 cpu, 4096 ram, 3000000 iterations, object type, object 3000000: 435.604ms
1.0 cpu, 4096 ram, 3000000 iterations, array_ type, array_ 3000000: 135.256ms
1.0 cpu, 4096 ram, 3000000 iterations, map___ type, map___ 3000000: 1.122s
2.0 cpu, 4096 ram, 3000000 iterations, object type, object 3000000: 381.501ms
2.0 cpu, 4096 ram, 3000000 iterations, array_ type, array_ 3000000: 156.002ms
2.0 cpu, 4096 ram, 3000000 iterations, map___ type, map___ 3000000: 1.008s
3.0 cpu, 4096 ram, 3000000 iterations, object type, object 3000000: 367.859ms
3.0 cpu, 4096 ram, 3000000 iterations, array_ type, array_ 3000000: 134.49ms
3.0 cpu, 4096 ram, 3000000 iterations, map___ type, map___ 3000000: 1.577s
4.0 cpu, 4096 ram, 3000000 iterations, object type, object 3000000: 383.639ms
4.0 cpu, 4096 ram, 3000000 iterations, array_ type, array_ 3000000: 133.811ms
4.0 cpu, 4096 ram, 3000000 iterations, map___ type, map___ 3000000: 898.557ms
0.5 cpu, 8192 ram, 3000000 iterations, object type, object 3000000: 894.48ms
0.5 cpu, 8192 ram, 3000000 iterations, array_ type, array_ 3000000: 244.497ms
0.5 cpu, 8192 ram, 3000000 iterations, map___ type, map___ 3000000: 2.567s
1.0 cpu, 8192 ram, 3000000 iterations, object type, object 3000000: 537.056ms
1.0 cpu, 8192 ram, 3000000 iterations, array_ type, array_ 3000000: 147.763ms
1.0 cpu, 8192 ram, 3000000 iterations, map___ type, map___ 3000000: 1.148s
2.0 cpu, 8192 ram, 3000000 iterations, object type, object 3000000: 378.015ms
2.0 cpu, 8192 ram, 3000000 iterations, array_ type, array_ 3000000: 134.85ms
2.0 cpu, 8192 ram, 3000000 iterations, map___ type, map___ 3000000: 884.508ms
3.0 cpu, 8192 ram, 3000000 iterations, object type, object 3000000: 373.428ms
3.0 cpu, 8192 ram, 3000000 iterations, array_ type, array_ 3000000: 134.419ms
3.0 cpu, 8192 ram, 3000000 iterations, map___ type, map___ 3000000: 923.629ms
4.0 cpu, 8192 ram, 3000000 iterations, object type, object 3000000: 367.583ms
4.0 cpu, 8192 ram, 3000000 iterations, array_ type, array_ 3000000: 134.48ms
4.0 cpu, 8192 ram, 3000000 iterations, map___ type, map___ 3000000: 862.459ms
0.5 cpu, 16384 ram, 3000000 iterations, object type, object 3000000: 1.081s
0.5 cpu, 16384 ram, 3000000 iterations, array_ type, array_ 3000000: 243.068ms
0.5 cpu, 16384 ram, 3000000 iterations, map___ type, map___ 3000000: 2.649s
1.0 cpu, 16384 ram, 3000000 iterations, object type, object 3000000: 534.667ms
1.0 cpu, 16384 ram, 3000000 iterations, array_ type, array_ 3000000: 145.732ms
1.0 cpu, 16384 ram, 3000000 iterations, map___ type, map___ 3000000: 1.154s
2.0 cpu, 16384 ram, 3000000 iterations, object type, object 3000000: 357.673ms
2.0 cpu, 16384 ram, 3000000 iterations, array_ type, array_ 3000000: 135.307ms
2.0 cpu, 16384 ram, 3000000 iterations, map___ type, map___ 3000000: 904.606ms
3.0 cpu, 16384 ram, 3000000 iterations, object type, object 3000000: 362.333ms
3.0 cpu, 16384 ram, 3000000 iterations, array_ type, array_ 3000000: 135.367ms
3.0 cpu, 16384 ram, 3000000 iterations, map___ type, map___ 3000000: 890.354ms
4.0 cpu, 16384 ram, 3000000 iterations, object type, object 3000000: 358.344ms
4.0 cpu, 16384 ram, 3000000 iterations, array_ type, array_ 3000000: 134.587ms
4.0 cpu, 16384 ram, 3000000 iterations, map___ type, map___ 3000000: 885.757ms
0.5 cpu, 128 ram, 4000000 iterations, object type, object 4000000: 1.611s
0.5 cpu, 128 ram, 4000000 iterations, array_ type, array_ 4000000: 331.536ms
0.5 cpu, 128 ram, 4000000 iterations, map___ type,
1.0 cpu, 128 ram, 4000000 iterations, object type,
1.0 cpu, 128 ram, 4000000 iterations, array_ type, array_ 4000000: 180.747ms
1.0 cpu, 128 ram, 4000000 iterations, map___ type,
2.0 cpu, 128 ram, 4000000 iterations, object type,
2.0 cpu, 128 ram, 4000000 iterations, array_ type, array_ 4000000: 165.793ms
2.0 cpu, 128 ram, 4000000 iterations, map___ type,
3.0 cpu, 128 ram, 4000000 iterations, object type,
3.0 cpu, 128 ram, 4000000 iterations, array_ type, array_ 4000000: 169.53ms
3.0 cpu, 128 ram, 4000000 iterations, map___ type,
4.0 cpu, 128 ram, 4000000 iterations, object type,
4.0 cpu, 128 ram, 4000000 iterations, array_ type, array_ 4000000: 166.868ms
4.0 cpu, 128 ram, 4000000 iterations, map___ type,
0.5 cpu, 256 ram, 4000000 iterations, object type, object 4000000: 1.998s
0.5 cpu, 256 ram, 4000000 iterations, array_ type, array_ 4000000: 336.507ms
0.5 cpu, 256 ram, 4000000 iterations, map___ type, map___ 4000000: 3.737s
1.0 cpu, 256 ram, 4000000 iterations, object type, object 4000000: 890.269ms
1.0 cpu, 256 ram, 4000000 iterations, array_ type, array_ 4000000: 178.829ms
1.0 cpu, 256 ram, 4000000 iterations, map___ type, map___ 4000000: 1.582s
2.0 cpu, 256 ram, 4000000 iterations, object type, object 4000000: 579.427ms
2.0 cpu, 256 ram, 4000000 iterations, array_ type, array_ 4000000: 167.182ms
2.0 cpu, 256 ram, 4000000 iterations, map___ type, map___ 4000000: 1.273s
3.0 cpu, 256 ram, 4000000 iterations, object type, object 4000000: 598.795ms
3.0 cpu, 256 ram, 4000000 iterations, array_ type, array_ 4000000: 168.733ms
3.0 cpu, 256 ram, 4000000 iterations, map___ type, map___ 4000000: 1.298s
4.0 cpu, 256 ram, 4000000 iterations, object type, object 4000000: 573.104ms
4.0 cpu, 256 ram, 4000000 iterations, array_ type, array_ 4000000: 167.379ms
4.0 cpu, 256 ram, 4000000 iterations, map___ type, map___ 4000000: 1.275s
0.5 cpu, 512 ram, 4000000 iterations, object type, object 4000000: 1.586s
0.5 cpu, 512 ram, 4000000 iterations, array_ type, array_ 4000000: 387.251ms
0.5 cpu, 512 ram, 4000000 iterations, map___ type, map___ 4000000: 3.810s
1.0 cpu, 512 ram, 4000000 iterations, object type, object 4000000: 786.257ms
1.0 cpu, 512 ram, 4000000 iterations, array_ type, array_ 4000000: 183.312ms
1.0 cpu, 512 ram, 4000000 iterations, map___ type, map___ 4000000: 1.583s
2.0 cpu, 512 ram, 4000000 iterations, object type, object 4000000: 584.696ms
2.0 cpu, 512 ram, 4000000 iterations, array_ type, array_ 4000000: 168.147ms
2.0 cpu, 512 ram, 4000000 iterations, map___ type, map___ 4000000: 1.271s
3.0 cpu, 512 ram, 4000000 iterations, object type, object 4000000: 578.336ms
3.0 cpu, 512 ram, 4000000 iterations, array_ type, array_ 4000000: 167.513ms
3.0 cpu, 512 ram, 4000000 iterations, map___ type, map___ 4000000: 1.326s
4.0 cpu, 512 ram, 4000000 iterations, object type, object 4000000: 578.29ms
4.0 cpu, 512 ram, 4000000 iterations, array_ type, array_ 4000000: 186.225ms
4.0 cpu, 512 ram, 4000000 iterations, map___ type, map___ 4000000: 1.276s
0.5 cpu, 1024 ram, 4000000 iterations, object type, object 4000000: 2.920s
0.5 cpu, 1024 ram, 4000000 iterations, array_ type, array_ 4000000: 388.721ms
0.5 cpu, 1024 ram, 4000000 iterations, map___ type, map___ 4000000: 4.105s
1.0 cpu, 1024 ram, 4000000 iterations, object type, object 4000000: 931.796ms
1.0 cpu, 1024 ram, 4000000 iterations, array_ type, array_ 4000000: 176.977ms
1.0 cpu, 1024 ram, 4000000 iterations, map___ type, map___ 4000000: 1.539s
2.0 cpu, 1024 ram, 4000000 iterations, object type, object 4000000: 555.361ms
2.0 cpu, 1024 ram, 4000000 iterations, array_ type, array_ 4000000: 168.705ms
2.0 cpu, 1024 ram, 4000000 iterations, map___ type, map___ 4000000: 1.250s
3.0 cpu, 1024 ram, 4000000 iterations, object type, object 4000000: 545.411ms
3.0 cpu, 1024 ram, 4000000 iterations, array_ type, array_ 4000000: 165.465ms
3.0 cpu, 1024 ram, 4000000 iterations, map___ type, map___ 4000000: 1.219s
4.0 cpu, 1024 ram, 4000000 iterations, object type, object 4000000: 565.263ms
4.0 cpu, 1024 ram, 4000000 iterations, array_ type, array_ 4000000: 167.302ms
4.0 cpu, 1024 ram, 4000000 iterations, map___ type, map___ 4000000: 1.240s
0.5 cpu, 2048 ram, 4000000 iterations, object type, object 4000000: 2.370s
0.5 cpu, 2048 ram, 4000000 iterations, array_ type, array_ 4000000: 328.921ms
0.5 cpu, 2048 ram, 4000000 iterations, map___ type, map___ 4000000: 3.911s
1.0 cpu, 2048 ram, 4000000 iterations, object type, object 4000000: 794.039ms
1.0 cpu, 2048 ram, 4000000 iterations, array_ type, array_ 4000000: 173.974ms
1.0 cpu, 2048 ram, 4000000 iterations, map___ type, map___ 4000000: 1.613s
2.0 cpu, 2048 ram, 4000000 iterations, object type, object 4000000: 578.54ms
2.0 cpu, 2048 ram, 4000000 iterations, array_ type, array_ 4000000: 167.034ms
2.0 cpu, 2048 ram, 4000000 iterations, map___ type, map___ 4000000: 1.352s
3.0 cpu, 2048 ram, 4000000 iterations, object type, object 4000000: 540.379ms
3.0 cpu, 2048 ram, 4000000 iterations, array_ type, array_ 4000000: 165.571ms
3.0 cpu, 2048 ram, 4000000 iterations, map___ type, map___ 4000000: 1.208s
4.0 cpu, 2048 ram, 4000000 iterations, object type, object 4000000: 545.306ms
4.0 cpu, 2048 ram, 4000000 iterations, array_ type, array_ 4000000: 167.136ms
4.0 cpu, 2048 ram, 4000000 iterations, map___ type, map___ 4000000: 1.197s
0.5 cpu, 4096 ram, 4000000 iterations, object type, object 4000000: 1.479s
0.5 cpu, 4096 ram, 4000000 iterations, array_ type, array_ 4000000: 379.334ms
0.5 cpu, 4096 ram, 4000000 iterations, map___ type, map___ 4000000: 3.219s
1.0 cpu, 4096 ram, 4000000 iterations, object type, object 4000000: 558.341ms
1.0 cpu, 4096 ram, 4000000 iterations, array_ type, array_ 4000000: 169.908ms
1.0 cpu, 4096 ram, 4000000 iterations, map___ type, map___ 4000000: 1.383s
2.0 cpu, 4096 ram, 4000000 iterations, object type, object 4000000: 440.634ms
2.0 cpu, 4096 ram, 4000000 iterations, array_ type, array_ 4000000: 165.134ms
2.0 cpu, 4096 ram, 4000000 iterations, map___ type, map___ 4000000: 1.181s
3.0 cpu, 4096 ram, 4000000 iterations, object type, object 4000000: 435.666ms
3.0 cpu, 4096 ram, 4000000 iterations, array_ type, array_ 4000000: 166.424ms
3.0 cpu, 4096 ram, 4000000 iterations, map___ type, map___ 4000000: 1.198s
4.0 cpu, 4096 ram, 4000000 iterations, object type, object 4000000: 441.506ms
4.0 cpu, 4096 ram, 4000000 iterations, array_ type, array_ 4000000: 166.727ms
4.0 cpu, 4096 ram, 4000000 iterations, map___ type, map___ 4000000: 1.133s
0.5 cpu, 8192 ram, 4000000 iterations, object type, object 4000000: 1.397s
0.5 cpu, 8192 ram, 4000000 iterations, array_ type, array_ 4000000: 344.939ms
0.5 cpu, 8192 ram, 4000000 iterations, map___ type, map___ 4000000: 3.237s
1.0 cpu, 8192 ram, 4000000 iterations, object type, object 4000000: 597.114ms
1.0 cpu, 8192 ram, 4000000 iterations, array_ type, array_ 4000000: 166.692ms
1.0 cpu, 8192 ram, 4000000 iterations, map___ type, map___ 4000000: 1.380s
2.0 cpu, 8192 ram, 4000000 iterations, object type, object 4000000: 428.909ms
2.0 cpu, 8192 ram, 4000000 iterations, array_ type, array_ 4000000: 166.667ms
2.0 cpu, 8192 ram, 4000000 iterations, map___ type, map___ 4000000: 1.176s
3.0 cpu, 8192 ram, 4000000 iterations, object type, object 4000000: 452.425ms
3.0 cpu, 8192 ram, 4000000 iterations, array_ type, array_ 4000000: 167.067ms
3.0 cpu, 8192 ram, 4000000 iterations, map___ type, map___ 4000000: 1.134s
4.0 cpu, 8192 ram, 4000000 iterations, object type, object 4000000: 464.656ms
4.0 cpu, 8192 ram, 4000000 iterations, array_ type, array_ 4000000: 167.982ms
4.0 cpu, 8192 ram, 4000000 iterations, map___ type, map___ 4000000: 1.344s
0.5 cpu, 16384 ram, 4000000 iterations, object type, object 4000000: 1.251s
0.5 cpu, 16384 ram, 4000000 iterations, array_ type, array_ 4000000: 328.872ms
0.5 cpu, 16384 ram, 4000000 iterations, map___ type, map___ 4000000: 3.423s
1.0 cpu, 16384 ram, 4000000 iterations, object type, object 4000000: 527.029ms
1.0 cpu, 16384 ram, 4000000 iterations, array_ type, array_ 4000000: 165.924ms
1.0 cpu, 16384 ram, 4000000 iterations, map___ type, map___ 4000000: 1.497s
2.0 cpu, 16384 ram, 4000000 iterations, object type, object 4000000: 433.863ms
2.0 cpu, 16384 ram, 4000000 iterations, array_ type, array_ 4000000: 166.457ms
2.0 cpu, 16384 ram, 4000000 iterations, map___ type, map___ 4000000: 1.161s
3.0 cpu, 16384 ram, 4000000 iterations, object type, object 4000000: 442.561ms
3.0 cpu, 16384 ram, 4000000 iterations, array_ type, array_ 4000000: 168.258ms
3.0 cpu, 16384 ram, 4000000 iterations, map___ type, map___ 4000000: 1.159s
4.0 cpu, 16384 ram, 4000000 iterations, object type, object 4000000: 436.12ms
4.0 cpu, 16384 ram, 4000000 iterations, array_ type, array_ 4000000: 166.676ms
4.0 cpu, 16384 ram, 4000000 iterations, map___ type, map___ 4000000: 1.160s
0.5 cpu, 128 ram, 5000000 iterations, object type,
0.5 cpu, 128 ram, 5000000 iterations, array_ type, array_ 5000000: 489.403ms
0.5 cpu, 128 ram, 5000000 iterations, map___ type,
1.0 cpu, 128 ram, 5000000 iterations, object type,
1.0 cpu, 128 ram, 5000000 iterations, array_ type, array_ 5000000: 238.215ms
1.0 cpu, 128 ram, 5000000 iterations, map___ type,
2.0 cpu, 128 ram, 5000000 iterations, object type,
2.0 cpu, 128 ram, 5000000 iterations, array_ type, array_ 5000000: 216.47ms
2.0 cpu, 128 ram, 5000000 iterations, map___ type,
3.0 cpu, 128 ram, 5000000 iterations, object type,
3.0 cpu, 128 ram, 5000000 iterations, array_ type, array_ 5000000: 215.204ms
3.0 cpu, 128 ram, 5000000 iterations, map___ type,
4.0 cpu, 128 ram, 5000000 iterations, object type,
4.0 cpu, 128 ram, 5000000 iterations, array_ type, array_ 5000000: 324.629ms
4.0 cpu, 128 ram, 5000000 iterations, map___ type,
0.5 cpu, 256 ram, 5000000 iterations, object type, object 5000000: 2.574s
0.5 cpu, 256 ram, 5000000 iterations, array_ type, array_ 5000000: 439.423ms
0.5 cpu, 256 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9a6f0470] 4728 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 287.06 / 0.00 ms (average mu = 0.509, current mu = 0.000) last resort; GC in old space requested [1:0xffff9a6f0470] 5033 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 305.03 / 0.00 ms (average mu = 0.328, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 5000000 iterations, object type, object 5000000: 1.305s
1.0 cpu, 256 ram, 5000000 iterations, array_ type, array_ 5000000: 255.719ms
1.0 cpu, 256 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb6346470] 1985 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 132.96 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested [1:0xffffb6346470] 2123 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 137.24 / 0.00 ms (average mu = 0.301, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 5000000 iterations, object type, object 5000000: 770.607ms
2.0 cpu, 256 ram, 5000000 iterations, array_ type, array_ 5000000: 214.358ms
2.0 cpu, 256 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff87c71470] 1627 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.54 / 0.00 ms (average mu = 0.532, current mu = 0.000) last resort; GC in old space requested [1:0xffff87c71470] 1730 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.23 / 0.00 ms (average mu = 0.348, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 5000000 iterations, object type, object 5000000: 767.753ms
3.0 cpu, 256 ram, 5000000 iterations, array_ type, array_ 5000000: 214.469ms
3.0 cpu, 256 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9a799470] 1631 ms: Mark-Compact (reduce) 177.9 (182.0) -> 177.9 (180.7) MB, 104.86 / 0.00 ms (average mu = 0.528, current mu = 0.000) last resort; GC in old space requested [1:0xffff9a799470] 1734 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.5) MB, 102.93 / 0.00 ms (average mu = 0.346, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 5000000 iterations, object type, object 5000000: 788.913ms
4.0 cpu, 256 ram, 5000000 iterations, array_ type, array_ 5000000: 216.312ms
4.0 cpu, 256 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7fa64470] 2109 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.86 / 0.00 ms (average mu = 0.562, current mu = 0.000) last resort; GC in old space requested [1:0xffff7fa64470] 2222 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 113.29 / 0.00 ms (average mu = 0.382, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 5000000 iterations, object type, object 5000000: 3.602s
0.5 cpu, 512 ram, 5000000 iterations, array_ type, array_ 5000000: 437.843ms
0.5 cpu, 512 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8c256470] 4674 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 322.99 / 0.00 ms (average mu = 0.500, current mu = 0.000) last resort; GC in old space requested [1:0xffff8c256470] 4971 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 296.86 / 0.00 ms (average mu = 0.328, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 5000000 iterations, object type, object 5000000: 1.236s
1.0 cpu, 512 ram, 5000000 iterations, array_ type, array_ 5000000: 225.941ms
1.0 cpu, 512 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff91911470] 2118 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 149.25 / 0.00 ms (average mu = 0.499, current mu = 0.000) last resort; GC in old space requested [1:0xffff91911470] 2236 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 118.66 / 0.00 ms (average mu = 0.339, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 5000000 iterations, object type, object 5000000: 772.767ms
2.0 cpu, 512 ram, 5000000 iterations, array_ type, array_ 5000000: 219.915ms
2.0 cpu, 512 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff917c3470] 1651 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 101.51 / 0.00 ms (average mu = 0.529, current mu = 0.000) last resort; GC in old space requested [1:0xffff917c3470] 1752 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 101.17 / 0.00 ms (average mu = 0.350, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 5000000 iterations, object type, object 5000000: 772.836ms
3.0 cpu, 512 ram, 5000000 iterations, array_ type, array_ 5000000: 215.22ms
3.0 cpu, 512 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8297c470] 1647 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.57 / 0.00 ms (average mu = 0.510, current mu = 0.000) last resort; GC in old space requested [1:0xffff8297c470] 1749 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 101.67 / 0.00 ms (average mu = 0.336, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 5000000 iterations, object type, object 5000000: 772.13ms
4.0 cpu, 512 ram, 5000000 iterations, array_ type, array_ 5000000: 216.397ms
4.0 cpu, 512 ram, 5000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8a289470] 1644 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 105.77 / 0.00 ms (average mu = 0.523, current mu = 0.000) last resort; GC in old space requested [1:0xffff8a289470] 1755 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 111.13 / 0.00 ms (average mu = 0.335, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 5000000 iterations, object type, object 5000000: 3.796s
0.5 cpu, 1024 ram, 5000000 iterations, array_ type, array_ 5000000: 432.414ms
0.5 cpu, 1024 ram, 5000000 iterations, map___ type, map___ 5000000: 6.846s
1.0 cpu, 1024 ram, 5000000 iterations, object type, object 5000000: 1.308s
1.0 cpu, 1024 ram, 5000000 iterations, array_ type, array_ 5000000: 237.42ms
1.0 cpu, 1024 ram, 5000000 iterations, map___ type, map___ 5000000: 2.729s
2.0 cpu, 1024 ram, 5000000 iterations, object type, object 5000000: 754.906ms
2.0 cpu, 1024 ram, 5000000 iterations, array_ type, array_ 5000000: 212.793ms
2.0 cpu, 1024 ram, 5000000 iterations, map___ type, map___ 5000000: 1.922s
3.0 cpu, 1024 ram, 5000000 iterations, object type, object 5000000: 764.115ms
3.0 cpu, 1024 ram, 5000000 iterations, array_ type, array_ 5000000: 212.238ms
3.0 cpu, 1024 ram, 5000000 iterations, map___ type, map___ 5000000: 1.845s
4.0 cpu, 1024 ram, 5000000 iterations, object type, object 5000000: 736.828ms
4.0 cpu, 1024 ram, 5000000 iterations, array_ type, array_ 5000000: 212.058ms
4.0 cpu, 1024 ram, 5000000 iterations, map___ type, map___ 5000000: 1.830s
0.5 cpu, 2048 ram, 5000000 iterations, object type, object 5000000: 3.398s
0.5 cpu, 2048 ram, 5000000 iterations, array_ type, array_ 5000000: 482.226ms
0.5 cpu, 2048 ram, 5000000 iterations, map___ type, map___ 5000000: 7.064s
1.0 cpu, 2048 ram, 5000000 iterations, object type, object 5000000: 1.130s
1.0 cpu, 2048 ram, 5000000 iterations, array_ type, array_ 5000000: 222.967ms
1.0 cpu, 2048 ram, 5000000 iterations, map___ type, map___ 5000000: 2.618s
2.0 cpu, 2048 ram, 5000000 iterations, object type, object 5000000: 760.181ms
2.0 cpu, 2048 ram, 5000000 iterations, array_ type, array_ 5000000: 210.729ms
2.0 cpu, 2048 ram, 5000000 iterations, map___ type, map___ 5000000: 1.928s
3.0 cpu, 2048 ram, 5000000 iterations, object type, object 5000000: 745.831ms
3.0 cpu, 2048 ram, 5000000 iterations, array_ type, array_ 5000000: 211.676ms
3.0 cpu, 2048 ram, 5000000 iterations, map___ type, map___ 5000000: 1.792s
4.0 cpu, 2048 ram, 5000000 iterations, object type, object 5000000: 764.604ms
4.0 cpu, 2048 ram, 5000000 iterations, array_ type, array_ 5000000: 215.003ms
4.0 cpu, 2048 ram, 5000000 iterations, map___ type, map___ 5000000: 1.847s
0.5 cpu, 4096 ram, 5000000 iterations, object type, object 5000000: 1.314s
0.5 cpu, 4096 ram, 5000000 iterations, array_ type, array_ 5000000: 421.7ms
0.5 cpu, 4096 ram, 5000000 iterations, map___ type, map___ 5000000: 4.494s
1.0 cpu, 4096 ram, 5000000 iterations, object type, object 5000000: 786.376ms
1.0 cpu, 4096 ram, 5000000 iterations, array_ type, array_ 5000000: 227.148ms
1.0 cpu, 4096 ram, 5000000 iterations, map___ type, map___ 5000000: 1.855s
2.0 cpu, 4096 ram, 5000000 iterations, object type, object 5000000: 532.081ms
2.0 cpu, 4096 ram, 5000000 iterations, array_ type, array_ 5000000: 223.362ms
2.0 cpu, 4096 ram, 5000000 iterations, map___ type, map___ 5000000: 1.598s
3.0 cpu, 4096 ram, 5000000 iterations, object type, object 5000000: 539.379ms
3.0 cpu, 4096 ram, 5000000 iterations, array_ type, array_ 5000000: 211.859ms
3.0 cpu, 4096 ram, 5000000 iterations, map___ type, map___ 5000000: 1.709s
4.0 cpu, 4096 ram, 5000000 iterations, object type, object 5000000: 635.003ms
4.0 cpu, 4096 ram, 5000000 iterations, array_ type, array_ 5000000: 235.823ms
4.0 cpu, 4096 ram, 5000000 iterations, map___ type, map___ 5000000: 1.590s
0.5 cpu, 8192 ram, 5000000 iterations, object type, object 5000000: 1.548s
0.5 cpu, 8192 ram, 5000000 iterations, array_ type, array_ 5000000: 432.94ms
0.5 cpu, 8192 ram, 5000000 iterations, map___ type, map___ 5000000: 4.857s
1.0 cpu, 8192 ram, 5000000 iterations, object type, object 5000000: 623.009ms
1.0 cpu, 8192 ram, 5000000 iterations, array_ type, array_ 5000000: 216.439ms
1.0 cpu, 8192 ram, 5000000 iterations, map___ type, map___ 5000000: 1.927s
2.0 cpu, 8192 ram, 5000000 iterations, object type, object 5000000: 537.205ms
2.0 cpu, 8192 ram, 5000000 iterations, array_ type, array_ 5000000: 212.503ms
2.0 cpu, 8192 ram, 5000000 iterations, map___ type, map___ 5000000: 1.611s
3.0 cpu, 8192 ram, 5000000 iterations, object type, object 5000000: 532.431ms
3.0 cpu, 8192 ram, 5000000 iterations, array_ type, array_ 5000000: 210.743ms
3.0 cpu, 8192 ram, 5000000 iterations, map___ type, map___ 5000000: 1.566s
4.0 cpu, 8192 ram, 5000000 iterations, object type, object 5000000: 551.21ms
4.0 cpu, 8192 ram, 5000000 iterations, array_ type, array_ 5000000: 212.501ms
4.0 cpu, 8192 ram, 5000000 iterations, map___ type, map___ 5000000: 1.600s
0.5 cpu, 16384 ram, 5000000 iterations, object type, object 5000000: 1.723s
0.5 cpu, 16384 ram, 5000000 iterations, array_ type, array_ 5000000: 479.291ms
0.5 cpu, 16384 ram, 5000000 iterations, map___ type, map___ 5000000: 4.535s
1.0 cpu, 16384 ram, 5000000 iterations, object type, object 5000000: 739.468ms
1.0 cpu, 16384 ram, 5000000 iterations, array_ type, array_ 5000000: 225.52ms
1.0 cpu, 16384 ram, 5000000 iterations, map___ type, map___ 5000000: 1.857s
2.0 cpu, 16384 ram, 5000000 iterations, object type, object 5000000: 544.77ms
2.0 cpu, 16384 ram, 5000000 iterations, array_ type, array_ 5000000: 210.121ms
2.0 cpu, 16384 ram, 5000000 iterations, map___ type, map___ 5000000: 1.679s
3.0 cpu, 16384 ram, 5000000 iterations, object type, object 5000000: 531.816ms
3.0 cpu, 16384 ram, 5000000 iterations, array_ type, array_ 5000000: 211.387ms
3.0 cpu, 16384 ram, 5000000 iterations, map___ type, map___ 5000000: 1.566s
4.0 cpu, 16384 ram, 5000000 iterations, object type, object 5000000: 543.301ms
4.0 cpu, 16384 ram, 5000000 iterations, array_ type, array_ 5000000: 215.769ms
4.0 cpu, 16384 ram, 5000000 iterations, map___ type, map___ 5000000: 1.810s
0.5 cpu, 128 ram, 6000000 iterations, object type,
0.5 cpu, 128 ram, 6000000 iterations, array_ type, array_ 6000000: 534.649ms
0.5 cpu, 128 ram, 6000000 iterations, map___ type,
1.0 cpu, 128 ram, 6000000 iterations, object type,
1.0 cpu, 128 ram, 6000000 iterations, array_ type, array_ 6000000: 263.802ms
1.0 cpu, 128 ram, 6000000 iterations, map___ type,
2.0 cpu, 128 ram, 6000000 iterations, object type,
2.0 cpu, 128 ram, 6000000 iterations, array_ type, array_ 6000000: 564.113ms
2.0 cpu, 128 ram, 6000000 iterations, map___ type,
3.0 cpu, 128 ram, 6000000 iterations, object type,
3.0 cpu, 128 ram, 6000000 iterations, array_ type, array_ 6000000: 248.454ms
3.0 cpu, 128 ram, 6000000 iterations, map___ type,
4.0 cpu, 128 ram, 6000000 iterations, object type,
4.0 cpu, 128 ram, 6000000 iterations, array_ type, array_ 6000000: 249.277ms
4.0 cpu, 128 ram, 6000000 iterations, map___ type,
0.5 cpu, 256 ram, 6000000 iterations, object type, object 6000000: 4.766s
0.5 cpu, 256 ram, 6000000 iterations, array_ type, array_ 6000000: 542.246ms
0.5 cpu, 256 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb9729470] 5449 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 227.39 / 0.00 ms (average mu = 0.419, current mu = 0.000) last resort; GC in old space requested [1:0xffffb9729470] 5757 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 307.07 / 0.00 ms (average mu = 0.287, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 6000000 iterations, object type, object 6000000: 1.323s
1.0 cpu, 256 ram, 6000000 iterations, array_ type, array_ 6000000: 273.917ms
1.0 cpu, 256 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff89535470] 1951 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 127.29 / 0.00 ms (average mu = 0.496, current mu = 0.000) last resort; GC in old space requested [1:0xffff89535470] 2085 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 134.59 / 0.00 ms (average mu = 0.313, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 6000000 iterations, object type, object 6000000: 842.702ms
2.0 cpu, 256 ram, 6000000 iterations, array_ type, array_ 6000000: 251.897ms
2.0 cpu, 256 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9af44470] 1619 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 101.28 / 0.00 ms (average mu = 0.530, current mu = 0.000) last resort; GC in old space requested [1:0xffff9af44470] 1721 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 102.19 / 0.00 ms (average mu = 0.347, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 6000000 iterations, object type, object 6000000: 870.941ms
3.0 cpu, 256 ram, 6000000 iterations, array_ type, array_ 6000000: 248.771ms
3.0 cpu, 256 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9f6dc470] 1623 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 103.12 / 0.00 ms (average mu = 0.524, current mu = 0.000) last resort; GC in old space requested [1:0xffff9f6dc470] 1727 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 104.13 / 0.00 ms (average mu = 0.342, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 6000000 iterations, object type, object 6000000: 867.61ms
4.0 cpu, 256 ram, 6000000 iterations, array_ type, array_ 6000000: 247.991ms
4.0 cpu, 256 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffad257470] 1613 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 112.29 / 0.00 ms (average mu = 0.504, current mu = 0.000) last resort; GC in old space requested [1:0xffffad257470] 1715 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 101.99 / 0.00 ms (average mu = 0.332, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 6000000 iterations, object type, object 6000000: 3.439s
0.5 cpu, 512 ram, 6000000 iterations, array_ type, array_ 6000000: 531.23ms
0.5 cpu, 512 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff98f0c470] 5331 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 295.03 / 0.00 ms (average mu = 0.524, current mu = 0.000) last resort; GC in old space requested [1:0xffff98f0c470] 5631 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 299.64 / 0.00 ms (average mu = 0.346, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 6000000 iterations, object type, object 6000000: 1.178s
1.0 cpu, 512 ram, 6000000 iterations, array_ type, array_ 6000000: 258.78ms
1.0 cpu, 512 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb0037470] 2900 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 140.54 / 0.00 ms (average mu = 0.550, current mu = 0.000) last resort; GC in old space requested [1:0xffffb0037470] 3049 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 149.38 / 0.00 ms (average mu = 0.365, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 6000000 iterations, object type, object 6000000: 1.153s
2.0 cpu, 512 ram, 6000000 iterations, array_ type, array_ 6000000: 252.036ms
2.0 cpu, 512 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9194a470] 1702 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 114.15 / 0.00 ms (average mu = 0.515, current mu = 0.000) last resort; GC in old space requested [1:0xffff9194a470] 1812 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 110.11 / 0.00 ms (average mu = 0.335, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 6000000 iterations, object type, object 6000000: 877.268ms
3.0 cpu, 512 ram, 6000000 iterations, array_ type, array_ 6000000: 257.427ms
3.0 cpu, 512 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9c7f5470] 1690 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 102.96 / 0.00 ms (average mu = 0.534, current mu = 0.000) last resort; GC in old space requested [1:0xffff9c7f5470] 1795 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.41 / 0.00 ms (average mu = 0.351, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 6000000 iterations, object type, object 6000000: 868.816ms
4.0 cpu, 512 ram, 6000000 iterations, array_ type, array_ 6000000: 251.989ms
4.0 cpu, 512 ram, 6000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9ce11470] 1728 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.56 / 0.00 ms (average mu = 0.541, current mu = 0.000) last resort; GC in old space requested [1:0xffff9ce11470] 1840 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 111.50 / 0.00 ms (average mu = 0.351, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 6000000 iterations, object type, object 6000000: 3.188s
0.5 cpu, 1024 ram, 6000000 iterations, array_ type, array_ 6000000: 530.964ms
0.5 cpu, 1024 ram, 6000000 iterations, map___ type, map___ 6000000: 7.054s
1.0 cpu, 1024 ram, 6000000 iterations, object type, object 6000000: 1.385s
1.0 cpu, 1024 ram, 6000000 iterations, array_ type, array_ 6000000: 269.938ms
1.0 cpu, 1024 ram, 6000000 iterations, map___ type, map___ 6000000: 3.002s
2.0 cpu, 1024 ram, 6000000 iterations, object type, object 6000000: 820.891ms
2.0 cpu, 1024 ram, 6000000 iterations, array_ type, array_ 6000000: 245.949ms
2.0 cpu, 1024 ram, 6000000 iterations, map___ type, map___ 6000000: 2.266s
3.0 cpu, 1024 ram, 6000000 iterations, object type, object 6000000: 843.228ms
3.0 cpu, 1024 ram, 6000000 iterations, array_ type, array_ 6000000: 245.666ms
3.0 cpu, 1024 ram, 6000000 iterations, map___ type, map___ 6000000: 2.127s
4.0 cpu, 1024 ram, 6000000 iterations, object type, object 6000000: 840.595ms
4.0 cpu, 1024 ram, 6000000 iterations, array_ type, array_ 6000000: 243.221ms
4.0 cpu, 1024 ram, 6000000 iterations, map___ type, map___ 6000000: 2.150s
0.5 cpu, 2048 ram, 6000000 iterations, object type, object 6000000: 2.776s
0.5 cpu, 2048 ram, 6000000 iterations, array_ type, array_ 6000000: 518.454ms
0.5 cpu, 2048 ram, 6000000 iterations, map___ type, map___ 6000000: 8.033s
1.0 cpu, 2048 ram, 6000000 iterations, object type, object 6000000: 1.316s
1.0 cpu, 2048 ram, 6000000 iterations, array_ type, array_ 6000000: 283.315ms
1.0 cpu, 2048 ram, 6000000 iterations, map___ type, map___ 6000000: 3.068s
2.0 cpu, 2048 ram, 6000000 iterations, object type, object 6000000: 913.656ms
2.0 cpu, 2048 ram, 6000000 iterations, array_ type, array_ 6000000: 257.464ms
2.0 cpu, 2048 ram, 6000000 iterations, map___ type, map___ 6000000: 2.321s
3.0 cpu, 2048 ram, 6000000 iterations, object type, object 6000000: 860.902ms
3.0 cpu, 2048 ram, 6000000 iterations, array_ type, array_ 6000000: 272.27ms
3.0 cpu, 2048 ram, 6000000 iterations, map___ type, map___ 6000000: 2.345s
4.0 cpu, 2048 ram, 6000000 iterations, object type, object 6000000: 845.924ms
4.0 cpu, 2048 ram, 6000000 iterations, array_ type, array_ 6000000: 249.368ms
4.0 cpu, 2048 ram, 6000000 iterations, map___ type, map___ 6000000: 2.166s
0.5 cpu, 4096 ram, 6000000 iterations, object type, object 6000000: 1.579s
0.5 cpu, 4096 ram, 6000000 iterations, array_ type, array_ 6000000: 522.802ms
0.5 cpu, 4096 ram, 6000000 iterations, map___ type, map___ 6000000: 4.416s
1.0 cpu, 4096 ram, 6000000 iterations, object type, object 6000000: 763.005ms
1.0 cpu, 4096 ram, 6000000 iterations, array_ type, array_ 6000000: 260.091ms
1.0 cpu, 4096 ram, 6000000 iterations, map___ type, map___ 6000000: 2.215s
2.0 cpu, 4096 ram, 6000000 iterations, object type, object 6000000: 606.374ms
2.0 cpu, 4096 ram, 6000000 iterations, array_ type, array_ 6000000: 246.175ms
2.0 cpu, 4096 ram, 6000000 iterations, map___ type, map___ 6000000: 1.943s
3.0 cpu, 4096 ram, 6000000 iterations, object type, object 6000000: 601.327ms
3.0 cpu, 4096 ram, 6000000 iterations, array_ type, array_ 6000000: 244.961ms
3.0 cpu, 4096 ram, 6000000 iterations, map___ type, map___ 6000000: 1.828s
4.0 cpu, 4096 ram, 6000000 iterations, object type, object 6000000: 603.624ms
4.0 cpu, 4096 ram, 6000000 iterations, array_ type, array_ 6000000: 242.638ms
4.0 cpu, 4096 ram, 6000000 iterations, map___ type, map___ 6000000: 1.868s
0.5 cpu, 8192 ram, 6000000 iterations, object type, object 6000000: 2.128s
0.5 cpu, 8192 ram, 6000000 iterations, array_ type, array_ 6000000: 506.842ms
0.5 cpu, 8192 ram, 6000000 iterations, map___ type, map___ 6000000: 4.819s
1.0 cpu, 8192 ram, 6000000 iterations, object type, object 6000000: 765.245ms
1.0 cpu, 8192 ram, 6000000 iterations, array_ type, array_ 6000000: 254.694ms
1.0 cpu, 8192 ram, 6000000 iterations, map___ type, map___ 6000000: 2.630s
2.0 cpu, 8192 ram, 6000000 iterations, object type, object 6000000: 612.442ms
2.0 cpu, 8192 ram, 6000000 iterations, array_ type, array_ 6000000: 245.441ms
2.0 cpu, 8192 ram, 6000000 iterations, map___ type, map___ 6000000: 1.945s
3.0 cpu, 8192 ram, 6000000 iterations, object type, object 6000000: 609.578ms
3.0 cpu, 8192 ram, 6000000 iterations, array_ type, array_ 6000000: 246.422ms
3.0 cpu, 8192 ram, 6000000 iterations, map___ type, map___ 6000000: 1.842s
4.0 cpu, 8192 ram, 6000000 iterations, object type, object 6000000: 610.471ms
4.0 cpu, 8192 ram, 6000000 iterations, array_ type, array_ 6000000: 244.841ms
4.0 cpu, 8192 ram, 6000000 iterations, map___ type, map___ 6000000: 1.844s
0.5 cpu, 16384 ram, 6000000 iterations, object type, object 6000000: 1.809s
0.5 cpu, 16384 ram, 6000000 iterations, array_ type, array_ 6000000: 529.766ms
0.5 cpu, 16384 ram, 6000000 iterations, map___ type, map___ 6000000: 5.269s
1.0 cpu, 16384 ram, 6000000 iterations, object type, object 6000000: 710.384ms
1.0 cpu, 16384 ram, 6000000 iterations, array_ type, array_ 6000000: 254.378ms
1.0 cpu, 16384 ram, 6000000 iterations, map___ type, map___ 6000000: 2.220s
2.0 cpu, 16384 ram, 6000000 iterations, object type, object 6000000: 770.462ms
2.0 cpu, 16384 ram, 6000000 iterations, array_ type, array_ 6000000: 251.267ms
2.0 cpu, 16384 ram, 6000000 iterations, map___ type, map___ 6000000: 2.039s
3.0 cpu, 16384 ram, 6000000 iterations, object type, object 6000000: 616.013ms
3.0 cpu, 16384 ram, 6000000 iterations, array_ type, array_ 6000000: 245.444ms
3.0 cpu, 16384 ram, 6000000 iterations, map___ type, map___ 6000000: 1.816s
4.0 cpu, 16384 ram, 6000000 iterations, object type, object 6000000: 613.379ms
4.0 cpu, 16384 ram, 6000000 iterations, array_ type, array_ 6000000: 246.485ms
4.0 cpu, 16384 ram, 6000000 iterations, map___ type, map___ 6000000: 1.848s
0.5 cpu, 128 ram, 7000000 iterations, object type,
0.5 cpu, 128 ram, 7000000 iterations, array_ type,
0.5 cpu, 128 ram, 7000000 iterations, map___ type,
1.0 cpu, 128 ram, 7000000 iterations, object type,
1.0 cpu, 128 ram, 7000000 iterations, array_ type,
1.0 cpu, 128 ram, 7000000 iterations, map___ type,
2.0 cpu, 128 ram, 7000000 iterations, object type,
2.0 cpu, 128 ram, 7000000 iterations, array_ type,
2.0 cpu, 128 ram, 7000000 iterations, map___ type,
3.0 cpu, 128 ram, 7000000 iterations, object type,
3.0 cpu, 128 ram, 7000000 iterations, array_ type,
3.0 cpu, 128 ram, 7000000 iterations, map___ type,
4.0 cpu, 128 ram, 7000000 iterations, object type,
4.0 cpu, 128 ram, 7000000 iterations, array_ type,
4.0 cpu, 128 ram, 7000000 iterations, map___ type,
0.5 cpu, 256 ram, 7000000 iterations, object type,
0.5 cpu, 256 ram, 7000000 iterations, array_ type, array_ 7000000: 631.822ms
0.5 cpu, 256 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff93a07470] 4659 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 327.29 / 0.00 ms (average mu = 0.479, current mu = 0.000) last resort; GC in old space requested [1:0xffff93a07470] 4967 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 307.56 / 0.00 ms (average mu = 0.312, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 7000000 iterations, object type,
1.0 cpu, 256 ram, 7000000 iterations, array_ type, array_ 7000000: 332.172ms
1.0 cpu, 256 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa8fd0470] 1977 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 126.76 / 0.00 ms (average mu = 0.499, current mu = 0.000) last resort; GC in old space requested [1:0xffffa8fd0470] 2121 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 144.30 / 0.00 ms (average mu = 0.307, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 7000000 iterations, object type,
2.0 cpu, 256 ram, 7000000 iterations, array_ type, array_ 7000000: 303.019ms
2.0 cpu, 256 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9ccca470] 1619 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.88 / 0.00 ms (average mu = 0.495, current mu = 0.000) last resort; GC in old space requested [1:0xffff9ccca470] 1723 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.77 / 0.00 ms (average mu = 0.326, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 7000000 iterations, object type,
3.0 cpu, 256 ram, 7000000 iterations, array_ type, array_ 7000000: 302.477ms
3.0 cpu, 256 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbc8be470] 1613 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.44 / 0.00 ms (average mu = 0.507, current mu = 0.000) last resort; GC in old space requested [1:0xffffbc8be470] 1717 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.97 / 0.00 ms (average mu = 0.331, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 7000000 iterations, object type,
4.0 cpu, 256 ram, 7000000 iterations, array_ type, array_ 7000000: 304.369ms
4.0 cpu, 256 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8bb3e470] 1638 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.08 / 0.00 ms (average mu = 0.514, current mu = 0.000) last resort; GC in old space requested [1:0xffff8bb3e470] 1741 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.55 / 0.00 ms (average mu = 0.338, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 7000000 iterations, object type, object 7000000: 3.638s
0.5 cpu, 512 ram, 7000000 iterations, array_ type, array_ 7000000: 646.086ms
0.5 cpu, 512 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7cb83470] 4837 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 299.03 / 0.00 ms (average mu = 0.502, current mu = 0.000) last resort; GC in old space requested [1:0xffff7cb83470] 5127 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 290.20 / 0.00 ms (average mu = 0.332, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 7000000 iterations, object type, object 7000000: 1.515s
1.0 cpu, 512 ram, 7000000 iterations, array_ type, array_ 7000000: 324.819ms
1.0 cpu, 512 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3765470] 1968 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 142.04 / 0.00 ms (average mu = 0.468, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3765470] 2096 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 127.88 / 0.00 ms (average mu = 0.303, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 7000000 iterations, object type, object 7000000: 1.985s
2.0 cpu, 512 ram, 7000000 iterations, array_ type, array_ 7000000: 311.212ms
2.0 cpu, 512 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff86e72470] 1641 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.35 / 0.00 ms (average mu = 0.512, current mu = 0.000) last resort; GC in old space requested [1:0xffff86e72470] 1735 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 94.67 / 0.00 ms (average mu = 0.348, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 7000000 iterations, object type, object 7000000: 1.133s
3.0 cpu, 512 ram, 7000000 iterations, array_ type, array_ 7000000: 305.069ms
3.0 cpu, 512 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb8988470] 1598 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.77 / 0.00 ms (average mu = 0.518, current mu = 0.000) last resort; GC in old space requested [1:0xffffb8988470] 1701 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.27 / 0.00 ms (average mu = 0.337, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 7000000 iterations, object type, object 7000000: 1.117s
4.0 cpu, 512 ram, 7000000 iterations, array_ type, array_ 7000000: 305.367ms
4.0 cpu, 512 ram, 7000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff98b2b470] 1600 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 105.14 / 0.00 ms (average mu = 0.513, current mu = 0.000) last resort; GC in old space requested [1:0xffff98b2b470] 1715 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 114.08 / 0.00 ms (average mu = 0.322, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 7000000 iterations, object type, object 7000000: 4.774s
0.5 cpu, 1024 ram, 7000000 iterations, array_ type, array_ 7000000: 630.679ms
0.5 cpu, 1024 ram, 7000000 iterations, map___ type, map___ 7000000: 8.130s
1.0 cpu, 1024 ram, 7000000 iterations, object type, object 7000000: 1.484s
1.0 cpu, 1024 ram, 7000000 iterations, array_ type, array_ 7000000: 323.219ms
1.0 cpu, 1024 ram, 7000000 iterations, map___ type, map___ 7000000: 3.165s
2.0 cpu, 1024 ram, 7000000 iterations, object type, object 7000000: 1.121s
2.0 cpu, 1024 ram, 7000000 iterations, array_ type, array_ 7000000: 297.129ms
2.0 cpu, 1024 ram, 7000000 iterations, map___ type, map___ 7000000: 2.513s
3.0 cpu, 1024 ram, 7000000 iterations, object type, object 7000000: 1.093s
3.0 cpu, 1024 ram, 7000000 iterations, array_ type, array_ 7000000: 296.344ms
3.0 cpu, 1024 ram, 7000000 iterations, map___ type, map___ 7000000: 2.405s
4.0 cpu, 1024 ram, 7000000 iterations, object type, object 7000000: 1.100s
4.0 cpu, 1024 ram, 7000000 iterations, array_ type, array_ 7000000: 296.977ms
4.0 cpu, 1024 ram, 7000000 iterations, map___ type, map___ 7000000: 2.418s
0.5 cpu, 2048 ram, 7000000 iterations, object type, object 7000000: 5.170s
0.5 cpu, 2048 ram, 7000000 iterations, array_ type, array_ 7000000: 675.595ms
0.5 cpu, 2048 ram, 7000000 iterations, map___ type, map___ 7000000: 7.910s
1.0 cpu, 2048 ram, 7000000 iterations, object type, object 7000000: 1.541s
1.0 cpu, 2048 ram, 7000000 iterations, array_ type, array_ 7000000: 329.594ms
1.0 cpu, 2048 ram, 7000000 iterations, map___ type, map___ 7000000: 3.069s
2.0 cpu, 2048 ram, 7000000 iterations, object type, object 7000000: 1.116s
2.0 cpu, 2048 ram, 7000000 iterations, array_ type, array_ 7000000: 298.642ms
2.0 cpu, 2048 ram, 7000000 iterations, map___ type, map___ 7000000: 2.449s
3.0 cpu, 2048 ram, 7000000 iterations, object type, object 7000000: 1.248s
3.0 cpu, 2048 ram, 7000000 iterations, array_ type, array_ 7000000: 298.728ms
3.0 cpu, 2048 ram, 7000000 iterations, map___ type, map___ 7000000: 2.400s
4.0 cpu, 2048 ram, 7000000 iterations, object type, object 7000000: 1.076s
4.0 cpu, 2048 ram, 7000000 iterations, array_ type, array_ 7000000: 297.166ms
4.0 cpu, 2048 ram, 7000000 iterations, map___ type, map___ 7000000: 2.395s
0.5 cpu, 4096 ram, 7000000 iterations, object type, object 7000000: 2.519s
0.5 cpu, 4096 ram, 7000000 iterations, array_ type, array_ 7000000: 643.106ms
0.5 cpu, 4096 ram, 7000000 iterations, map___ type, map___ 7000000: 5.818s
1.0 cpu, 4096 ram, 7000000 iterations, object type, object 7000000: 1.265s
1.0 cpu, 4096 ram, 7000000 iterations, array_ type, array_ 7000000: 306.731ms
1.0 cpu, 4096 ram, 7000000 iterations, map___ type, map___ 7000000: 2.458s
2.0 cpu, 4096 ram, 7000000 iterations, object type, object 7000000: 703.688ms
2.0 cpu, 4096 ram, 7000000 iterations, array_ type, array_ 7000000: 293.136ms
2.0 cpu, 4096 ram, 7000000 iterations, map___ type, map___ 7000000: 2.152s
3.0 cpu, 4096 ram, 7000000 iterations, object type, object 7000000: 842.694ms
3.0 cpu, 4096 ram, 7000000 iterations, array_ type, array_ 7000000: 293.046ms
3.0 cpu, 4096 ram, 7000000 iterations, map___ type, map___ 7000000: 2.151s
4.0 cpu, 4096 ram, 7000000 iterations, object type, object 7000000: 702.183ms
4.0 cpu, 4096 ram, 7000000 iterations, array_ type, array_ 7000000: 297.458ms
4.0 cpu, 4096 ram, 7000000 iterations, map___ type, map___ 7000000: 2.184s
0.5 cpu, 8192 ram, 7000000 iterations, object type, object 7000000: 2.924s
0.5 cpu, 8192 ram, 7000000 iterations, array_ type, array_ 7000000: 613.903ms
0.5 cpu, 8192 ram, 7000000 iterations, map___ type, map___ 7000000: 5.555s
1.0 cpu, 8192 ram, 7000000 iterations, object type, object 7000000: 1.118s
1.0 cpu, 8192 ram, 7000000 iterations, array_ type, array_ 7000000: 299.027ms
1.0 cpu, 8192 ram, 7000000 iterations, map___ type, map___ 7000000: 2.337s
2.0 cpu, 8192 ram, 7000000 iterations, object type, object 7000000: 890.513ms
2.0 cpu, 8192 ram, 7000000 iterations, array_ type, array_ 7000000: 293.886ms
2.0 cpu, 8192 ram, 7000000 iterations, map___ type, map___ 7000000: 2.188s
3.0 cpu, 8192 ram, 7000000 iterations, object type, object 7000000: 710.069ms
3.0 cpu, 8192 ram, 7000000 iterations, array_ type, array_ 7000000: 297.594ms
3.0 cpu, 8192 ram, 7000000 iterations, map___ type, map___ 7000000: 2.162s
4.0 cpu, 8192 ram, 7000000 iterations, object type, object 7000000: 1.155s
4.0 cpu, 8192 ram, 7000000 iterations, array_ type, array_ 7000000: 294.985ms
4.0 cpu, 8192 ram, 7000000 iterations, map___ type, map___ 7000000: 2.123s
0.5 cpu, 16384 ram, 7000000 iterations, object type, object 7000000: 3.202s
0.5 cpu, 16384 ram, 7000000 iterations, array_ type, array_ 7000000: 610.108ms
0.5 cpu, 16384 ram, 7000000 iterations, map___ type, map___ 7000000: 5.539s
1.0 cpu, 16384 ram, 7000000 iterations, object type, object 7000000: 1.161s
1.0 cpu, 16384 ram, 7000000 iterations, array_ type, array_ 7000000: 311.109ms
1.0 cpu, 16384 ram, 7000000 iterations, map___ type, map___ 7000000: 2.568s
2.0 cpu, 16384 ram, 7000000 iterations, object type, object 7000000: 881.756ms
2.0 cpu, 16384 ram, 7000000 iterations, array_ type, array_ 7000000: 291.251ms
2.0 cpu, 16384 ram, 7000000 iterations, map___ type, map___ 7000000: 2.171s
3.0 cpu, 16384 ram, 7000000 iterations, object type, object 7000000: 884.304ms
3.0 cpu, 16384 ram, 7000000 iterations, array_ type, array_ 7000000: 454.645ms
3.0 cpu, 16384 ram, 7000000 iterations, map___ type, map___ 7000000: 2.171s
4.0 cpu, 16384 ram, 7000000 iterations, object type, object 7000000: 860.2ms
4.0 cpu, 16384 ram, 7000000 iterations, array_ type, array_ 7000000: 295.095ms
4.0 cpu, 16384 ram, 7000000 iterations, map___ type, map___ 7000000: 2.189s
0.5 cpu, 128 ram, 8000000 iterations, object type,
0.5 cpu, 128 ram, 8000000 iterations, array_ type,
0.5 cpu, 128 ram, 8000000 iterations, map___ type,
1.0 cpu, 128 ram, 8000000 iterations, object type,
1.0 cpu, 128 ram, 8000000 iterations, array_ type,
1.0 cpu, 128 ram, 8000000 iterations, map___ type,
2.0 cpu, 128 ram, 8000000 iterations, object type,
2.0 cpu, 128 ram, 8000000 iterations, array_ type,
2.0 cpu, 128 ram, 8000000 iterations, map___ type,
3.0 cpu, 128 ram, 8000000 iterations, object type,
3.0 cpu, 128 ram, 8000000 iterations, array_ type,
3.0 cpu, 128 ram, 8000000 iterations, map___ type,
4.0 cpu, 128 ram, 8000000 iterations, object type,
4.0 cpu, 128 ram, 8000000 iterations, array_ type,
4.0 cpu, 128 ram, 8000000 iterations, map___ type,
0.5 cpu, 256 ram, 8000000 iterations, object type,
0.5 cpu, 256 ram, 8000000 iterations, array_ type, array_ 8000000: 672.85ms
0.5 cpu, 256 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb1f6e470] 4857 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 371.49 / 0.00 ms (average mu = 0.476, current mu = 0.000) last resort; GC in old space requested [1:0xffffb1f6e470] 5150 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 292.33 / 0.00 ms (average mu = 0.320, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 8000000 iterations, object type,
1.0 cpu, 256 ram, 8000000 iterations, array_ type, array_ 8000000: 360.725ms
1.0 cpu, 256 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9a2fb470] 1948 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 137.90 / 0.00 ms (average mu = 0.473, current mu = 0.000) last resort; GC in old space requested [1:0xffff9a2fb470] 2071 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 122.67 / 0.00 ms (average mu = 0.310, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 8000000 iterations, object type,
2.0 cpu, 256 ram, 8000000 iterations, array_ type, array_ 8000000: 336.717ms
2.0 cpu, 256 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff95cc5470] 1604 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.57 / 0.00 ms (average mu = 0.522, current mu = 0.000) last resort; GC in old space requested [1:0xffff95cc5470] 1706 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 102.14 / 0.00 ms (average mu = 0.341, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 8000000 iterations, object type,
3.0 cpu, 256 ram, 8000000 iterations, array_ type, array_ 8000000: 337.754ms
3.0 cpu, 256 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbb29b470] 1624 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 101.79 / 0.00 ms (average mu = 0.527, current mu = 0.000) last resort; GC in old space requested [1:0xffffbb29b470] 1727 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.03 / 0.00 ms (average mu = 0.344, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 8000000 iterations, object type,
4.0 cpu, 256 ram, 8000000 iterations, array_ type, array_ 8000000: 336.754ms
4.0 cpu, 256 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff83e92470] 1606 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.57 / 0.00 ms (average mu = 0.517, current mu = 0.000) last resort; GC in old space requested [1:0xffff83e92470] 1709 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 102.11 / 0.00 ms (average mu = 0.339, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 8000000 iterations, object type, object 8000000: 6.573s
0.5 cpu, 512 ram, 8000000 iterations, array_ type, array_ 8000000: 687.497ms
0.5 cpu, 512 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb526e470] 4552 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 304.91 / 0.00 ms (average mu = 0.486, current mu = 0.000) last resort; GC in old space requested [1:0xffffb526e470] 4851 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 298.08 / 0.00 ms (average mu = 0.313, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 8000000 iterations, object type, object 8000000: 2.063s
1.0 cpu, 512 ram, 8000000 iterations, array_ type, array_ 8000000: 361.817ms
1.0 cpu, 512 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa708d470] 2290 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 160.99 / 0.00 ms (average mu = 0.420, current mu = 0.000) last resort; GC in old space requested [1:0xffffa708d470] 2423 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 132.47 / 0.00 ms (average mu = 0.283, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 8000000 iterations, object type, object 8000000: 1.207s
2.0 cpu, 512 ram, 8000000 iterations, array_ type, array_ 8000000: 337.586ms
2.0 cpu, 512 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb688f470] 1673 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 103.41 / 0.00 ms (average mu = 0.543, current mu = 0.000) last resort; GC in old space requested [1:0xffffb688f470] 1784 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 110.64 / 0.00 ms (average mu = 0.352, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 8000000 iterations, object type, object 8000000: 1.220s
3.0 cpu, 512 ram, 8000000 iterations, array_ type, array_ 8000000: 332.894ms
3.0 cpu, 512 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9c8e1470] 1958 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 122.19 / 0.00 ms (average mu = 0.513, current mu = 0.000) last resort; GC in old space requested [1:0xffff9c8e1470] 2082 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 123.31 / 0.00 ms (average mu = 0.330, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 8000000 iterations, object type, object 8000000: 1.421s
4.0 cpu, 512 ram, 8000000 iterations, array_ type, array_ 8000000: 337.041ms
4.0 cpu, 512 ram, 8000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9538b470] 1604 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 103.55 / 0.00 ms (average mu = 0.517, current mu = 0.000) last resort; GC in old space requested [1:0xffff9538b470] 1707 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 102.49 / 0.00 ms (average mu = 0.338, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 8000000 iterations, object type, object 8000000: 6.151s
0.5 cpu, 1024 ram, 8000000 iterations, array_ type, array_ 8000000: 730.471ms
0.5 cpu, 1024 ram, 8000000 iterations, map___ type, map___ 8000000: 8.406s
1.0 cpu, 1024 ram, 8000000 iterations, object type, object 8000000: 1.992s
1.0 cpu, 1024 ram, 8000000 iterations, array_ type, array_ 8000000: 355.159ms
1.0 cpu, 1024 ram, 8000000 iterations, map___ type, map___ 8000000: 3.641s
2.0 cpu, 1024 ram, 8000000 iterations, object type, object 8000000: 1.279s
2.0 cpu, 1024 ram, 8000000 iterations, array_ type, array_ 8000000: 331.126ms
2.0 cpu, 1024 ram, 8000000 iterations, map___ type, map___ 8000000: 2.853s
3.0 cpu, 1024 ram, 8000000 iterations, object type, object 8000000: 1.170s
3.0 cpu, 1024 ram, 8000000 iterations, array_ type, array_ 8000000: 327.954ms
3.0 cpu, 1024 ram, 8000000 iterations, map___ type, map___ 8000000: 2.738s
4.0 cpu, 1024 ram, 8000000 iterations, object type, object 8000000: 1.207s
4.0 cpu, 1024 ram, 8000000 iterations, array_ type, array_ 8000000: 330.482ms
4.0 cpu, 1024 ram, 8000000 iterations, map___ type, map___ 8000000: 2.710s
0.5 cpu, 2048 ram, 8000000 iterations, object type, object 8000000: 6.075s
0.5 cpu, 2048 ram, 8000000 iterations, array_ type, array_ 8000000: 707.472ms
0.5 cpu, 2048 ram, 8000000 iterations, map___ type, map___ 8000000: 9.195s
1.0 cpu, 2048 ram, 8000000 iterations, object type, object 8000000: 1.978s
1.0 cpu, 2048 ram, 8000000 iterations, array_ type, array_ 8000000: 349.012ms
1.0 cpu, 2048 ram, 8000000 iterations, map___ type, map___ 8000000: 3.609s
2.0 cpu, 2048 ram, 8000000 iterations, object type, object 8000000: 1.214s
2.0 cpu, 2048 ram, 8000000 iterations, array_ type, array_ 8000000: 327.804ms
2.0 cpu, 2048 ram, 8000000 iterations, map___ type, map___ 8000000: 2.796s
3.0 cpu, 2048 ram, 8000000 iterations, object type, object 8000000: 1.135s
3.0 cpu, 2048 ram, 8000000 iterations, array_ type, array_ 8000000: 327.096ms
3.0 cpu, 2048 ram, 8000000 iterations, map___ type, map___ 8000000: 2.642s
4.0 cpu, 2048 ram, 8000000 iterations, object type, object 8000000: 1.131s
4.0 cpu, 2048 ram, 8000000 iterations, array_ type, array_ 8000000: 328.605ms
4.0 cpu, 2048 ram, 8000000 iterations, map___ type, map___ 8000000: 2.667s
0.5 cpu, 4096 ram, 8000000 iterations, object type, object 8000000: 2.387s
0.5 cpu, 4096 ram, 8000000 iterations, array_ type, array_ 8000000: 664.475ms
0.5 cpu, 4096 ram, 8000000 iterations, map___ type, map___ 8000000: 6.452s
1.0 cpu, 4096 ram, 8000000 iterations, object type, object 8000000: 1.175s
1.0 cpu, 4096 ram, 8000000 iterations, array_ type, array_ 8000000: 343.002ms
1.0 cpu, 4096 ram, 8000000 iterations, map___ type, map___ 8000000: 3.402s
2.0 cpu, 4096 ram, 8000000 iterations, object type, object 8000000: 954.708ms
2.0 cpu, 4096 ram, 8000000 iterations, array_ type, array_ 8000000: 328.639ms
2.0 cpu, 4096 ram, 8000000 iterations, map___ type, map___ 8000000: 2.486s
3.0 cpu, 4096 ram, 8000000 iterations, object type, object 8000000: 945.46ms
3.0 cpu, 4096 ram, 8000000 iterations, array_ type, array_ 8000000: 326.996ms
3.0 cpu, 4096 ram, 8000000 iterations, map___ type, map___ 8000000: 2.535s
4.0 cpu, 4096 ram, 8000000 iterations, object type, object 8000000: 1.151s
4.0 cpu, 4096 ram, 8000000 iterations, array_ type, array_ 8000000: 328.816ms
4.0 cpu, 4096 ram, 8000000 iterations, map___ type, map___ 8000000: 2.464s
0.5 cpu, 8192 ram, 8000000 iterations, object type, object 8000000: 4.416s
0.5 cpu, 8192 ram, 8000000 iterations, array_ type, array_ 8000000: 652.268ms
0.5 cpu, 8192 ram, 8000000 iterations, map___ type, map___ 8000000: 6.328s
1.0 cpu, 8192 ram, 8000000 iterations, object type, object 8000000: 1.457s
1.0 cpu, 8192 ram, 8000000 iterations, array_ type, array_ 8000000: 346.807ms
1.0 cpu, 8192 ram, 8000000 iterations, map___ type, map___ 8000000: 2.697s
2.0 cpu, 8192 ram, 8000000 iterations, object type, object 8000000: 937.78ms
2.0 cpu, 8192 ram, 8000000 iterations, array_ type, array_ 8000000: 326.794ms
2.0 cpu, 8192 ram, 8000000 iterations, map___ type, map___ 8000000: 2.498s
3.0 cpu, 8192 ram, 8000000 iterations, object type, object 8000000: 947.106ms
3.0 cpu, 8192 ram, 8000000 iterations, array_ type, array_ 8000000: 325.368ms
3.0 cpu, 8192 ram, 8000000 iterations, map___ type, map___ 8000000: 2.479s
4.0 cpu, 8192 ram, 8000000 iterations, object type, object 8000000: 923.396ms
4.0 cpu, 8192 ram, 8000000 iterations, array_ type, array_ 8000000: 329.084ms
4.0 cpu, 8192 ram, 8000000 iterations, map___ type, map___ 8000000: 4.411s
0.5 cpu, 16384 ram, 8000000 iterations, object type, object 8000000: 3.705s
0.5 cpu, 16384 ram, 8000000 iterations, array_ type, array_ 8000000: 689.118ms
0.5 cpu, 16384 ram, 8000000 iterations, map___ type, map___ 8000000: 6.763s
1.0 cpu, 16384 ram, 8000000 iterations, object type, object 8000000: 1.423s
1.0 cpu, 16384 ram, 8000000 iterations, array_ type, array_ 8000000: 339.982ms
1.0 cpu, 16384 ram, 8000000 iterations, map___ type, map___ 8000000: 2.826s
2.0 cpu, 16384 ram, 8000000 iterations, object type, object 8000000: 1.081s
2.0 cpu, 16384 ram, 8000000 iterations, array_ type, array_ 8000000: 333.818ms
2.0 cpu, 16384 ram, 8000000 iterations, map___ type, map___ 8000000: 2.666s
3.0 cpu, 16384 ram, 8000000 iterations, object type, object 8000000: 949.534ms
3.0 cpu, 16384 ram, 8000000 iterations, array_ type, array_ 8000000: 342.924ms
3.0 cpu, 16384 ram, 8000000 iterations, map___ type, map___ 8000000: 2.821s
4.0 cpu, 16384 ram, 8000000 iterations, object type, object 8000000: 1.030s
4.0 cpu, 16384 ram, 8000000 iterations, array_ type, array_ 8000000: 340.066ms
4.0 cpu, 16384 ram, 8000000 iterations, map___ type, map___ 8000000: 2.783s
0.5 cpu, 128 ram, 9000000 iterations, object type,
0.5 cpu, 128 ram, 9000000 iterations, array_ type,
0.5 cpu, 128 ram, 9000000 iterations, map___ type,
1.0 cpu, 128 ram, 9000000 iterations, object type,
1.0 cpu, 128 ram, 9000000 iterations, array_ type,
1.0 cpu, 128 ram, 9000000 iterations, map___ type,
2.0 cpu, 128 ram, 9000000 iterations, object type,
2.0 cpu, 128 ram, 9000000 iterations, array_ type,
2.0 cpu, 128 ram, 9000000 iterations, map___ type,
3.0 cpu, 128 ram, 9000000 iterations, object type,
3.0 cpu, 128 ram, 9000000 iterations, array_ type,
3.0 cpu, 128 ram, 9000000 iterations, map___ type,
4.0 cpu, 128 ram, 9000000 iterations, object type,
4.0 cpu, 128 ram, 9000000 iterations, array_ type,
4.0 cpu, 128 ram, 9000000 iterations, map___ type,
0.5 cpu, 256 ram, 9000000 iterations, object type,
0.5 cpu, 256 ram, 9000000 iterations, array_ type, array_ 9000000: 824.626ms
0.5 cpu, 256 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9e59d470] 5008 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 312.37 / 0.00 ms (average mu = 0.505, current mu = 0.000) last resort; GC in old space requested [1:0xffff9e59d470] 5314 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 305.58 / 0.00 ms (average mu = 0.330, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 9000000 iterations, object type,
1.0 cpu, 256 ram, 9000000 iterations, array_ type, array_ 9000000: 399.598ms
1.0 cpu, 256 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7e5b3470] 2096 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 138.97 / 0.00 ms (average mu = 0.498, current mu = 0.000) last resort; GC in old space requested [1:0xffff7e5b3470] 2228 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 132.80 / 0.00 ms (average mu = 0.323, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 9000000 iterations, object type,
2.0 cpu, 256 ram, 9000000 iterations, array_ type, array_ 9000000: 382.83ms
2.0 cpu, 256 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9c1d0470] 1867 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.36 / 0.00 ms (average mu = 0.548, current mu = 0.000) last resort; GC in old space requested [1:0xffff9c1d0470] 1987 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 120.61 / 0.00 ms (average mu = 0.353, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 9000000 iterations, object type,
3.0 cpu, 256 ram, 9000000 iterations, array_ type, array_ 9000000: 383.63ms
3.0 cpu, 256 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff890ee470] 1813 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.00 / 0.00 ms (average mu = 0.550, current mu = 0.000) last resort; GC in old space requested [1:0xffff890ee470] 1933 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 119.77 / 0.00 ms (average mu = 0.352, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 9000000 iterations, object type,
4.0 cpu, 256 ram, 9000000 iterations, array_ type, array_ 9000000: 386.34ms
4.0 cpu, 256 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffaa3c1470] 1937 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 119.54 / 0.00 ms (average mu = 0.513, current mu = 0.000) last resort; GC in old space requested [1:0xffffaa3c1470] 2045 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.35 / 0.00 ms (average mu = 0.349, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 9000000 iterations, object type, object 9000000: 5.473s
0.5 cpu, 512 ram, 9000000 iterations, array_ type, array_ 9000000: 796.551ms
0.5 cpu, 512 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa8a2f470] 4517 ms: Mark-Compact (reduce) 177.9 (182.0) -> 177.9 (180.7) MB, 307.14 / 0.00 ms (average mu = 0.486, current mu = 0.000) last resort; GC in old space requested [1:0xffffa8a2f470] 4818 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.5) MB, 301.20 / 0.00 ms (average mu = 0.310, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 9000000 iterations, object type, object 9000000: 2.009s
1.0 cpu, 512 ram, 9000000 iterations, array_ type, array_ 9000000: 451.017ms
1.0 cpu, 512 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffaa5a3470] 2333 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 141.75 / 0.00 ms (average mu = 0.520, current mu = 0.000) last resort; GC in old space requested [1:0xffffaa5a3470] 2472 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 138.43 / 0.00 ms (average mu = 0.339, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 9000000 iterations, object type, object 9000000: 1.385s
2.0 cpu, 512 ram, 9000000 iterations, array_ type, array_ 9000000: 377.618ms
2.0 cpu, 512 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9db99470] 1851 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.29 / 0.00 ms (average mu = 0.558, current mu = 0.000) last resort; GC in old space requested [1:0xffff9db99470] 1957 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.12 / 0.00 ms (average mu = 0.374, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 9000000 iterations, object type, object 9000000: 1.366s
3.0 cpu, 512 ram, 9000000 iterations, array_ type, array_ 9000000: 392.086ms
3.0 cpu, 512 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff88683470] 1841 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 114.90 / 0.00 ms (average mu = 0.537, current mu = 0.000) last resort; GC in old space requested [1:0xffff88683470] 1956 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 114.78 / 0.00 ms (average mu = 0.350, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 9000000 iterations, object type, object 9000000: 1.322s
4.0 cpu, 512 ram, 9000000 iterations, array_ type, array_ 9000000: 415.504ms
4.0 cpu, 512 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff93c5a470] 1799 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.22 / 0.00 ms (average mu = 0.547, current mu = 0.000) last resort; GC in old space requested [1:0xffff93c5a470] 1907 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.89 / 0.00 ms (average mu = 0.362, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 9000000 iterations, object type, object 9000000: 4.528s
0.5 cpu, 1024 ram, 9000000 iterations, array_ type, array_ 9000000: 827.286ms
0.5 cpu, 1024 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffad985470] 10260 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 603.95 / 0.00 ms (average mu = 0.508, current mu = 0.000) last resort; GC in old space requested [1:0xffffad985470] 10944 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 684.04 / 0.00 ms (average mu = 0.318, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 9000000 iterations, object type, object 9000000: 1.845s
1.0 cpu, 1024 ram, 9000000 iterations, array_ type, array_ 9000000: 404.571ms
1.0 cpu, 1024 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffae191470] 4696 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 268.09 / 0.00 ms (average mu = 0.534, current mu = 0.000) last resort; GC in old space requested [1:0xffffae191470] 4975 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 278.49 / 0.00 ms (average mu = 0.347, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 9000000 iterations, object type, object 9000000: 1.287s
2.0 cpu, 1024 ram, 9000000 iterations, array_ type, array_ 9000000: 399.665ms
2.0 cpu, 1024 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9895f470] 5322 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 277.87 / 0.00 ms (average mu = 0.623, current mu = 0.000) last resort; GC in old space requested [1:0xffff9895f470] 5540 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 217.82 / 0.00 ms (average mu = 0.457, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 9000000 iterations, object type, object 9000000: 1.418s
3.0 cpu, 1024 ram, 9000000 iterations, array_ type, array_ 9000000: 397.793ms
3.0 cpu, 1024 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb703c470] 4030 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 210.15 / 0.00 ms (average mu = 0.547, current mu = 0.000) last resort; GC in old space requested [1:0xffffb703c470] 4241 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 210.71 / 0.00 ms (average mu = 0.375, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 9000000 iterations, object type, object 9000000: 1.327s
4.0 cpu, 1024 ram, 9000000 iterations, array_ type, array_ 9000000: 390.218ms
4.0 cpu, 1024 ram, 9000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff90368470] 3786 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 207.07 / 0.00 ms (average mu = 0.569, current mu = 0.000) last resort; GC in old space requested [1:0xffff90368470] 4018 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 232.34 / 0.00 ms (average mu = 0.369, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 9000000 iterations, object type, object 9000000: 4.102s
0.5 cpu, 2048 ram, 9000000 iterations, array_ type, array_ 9000000: 804.737ms
0.5 cpu, 2048 ram, 9000000 iterations, map___ type, map___ 9000000: 13.425s
1.0 cpu, 2048 ram, 9000000 iterations, object type, object 9000000: 1.929s
1.0 cpu, 2048 ram, 9000000 iterations, array_ type, array_ 9000000: 411.171ms
1.0 cpu, 2048 ram, 9000000 iterations, map___ type, map___ 9000000: 5.910s
2.0 cpu, 2048 ram, 9000000 iterations, object type, object 9000000: 1.400s
2.0 cpu, 2048 ram, 9000000 iterations, array_ type, array_ 9000000: 367.804ms
2.0 cpu, 2048 ram, 9000000 iterations, map___ type, map___ 9000000: 4.414s
3.0 cpu, 2048 ram, 9000000 iterations, object type, object 9000000: 1.274s
3.0 cpu, 2048 ram, 9000000 iterations, array_ type, array_ 9000000: 366.93ms
3.0 cpu, 2048 ram, 9000000 iterations, map___ type, map___ 9000000: 4.185s
4.0 cpu, 2048 ram, 9000000 iterations, object type, object 9000000: 1.264s
4.0 cpu, 2048 ram, 9000000 iterations, array_ type, array_ 9000000: 371.361ms
4.0 cpu, 2048 ram, 9000000 iterations, map___ type, map___ 9000000: 4.128s
0.5 cpu, 4096 ram, 9000000 iterations, object type, object 9000000: 4.957s
0.5 cpu, 4096 ram, 9000000 iterations, array_ type, array_ 9000000: 745.854ms
0.5 cpu, 4096 ram, 9000000 iterations, map___ type, map___ 9000000: 11.701s
1.0 cpu, 4096 ram, 9000000 iterations, object type, object 9000000: 1.546s
1.0 cpu, 4096 ram, 9000000 iterations, array_ type, array_ 9000000: 383.341ms
1.0 cpu, 4096 ram, 9000000 iterations, map___ type, map___ 9000000: 5.141s
2.0 cpu, 4096 ram, 9000000 iterations, object type, object 9000000: 1.123s
2.0 cpu, 4096 ram, 9000000 iterations, array_ type, array_ 9000000: 367.814ms
2.0 cpu, 4096 ram, 9000000 iterations, map___ type, map___ 9000000: 3.998s
3.0 cpu, 4096 ram, 9000000 iterations, object type, object 9000000: 1.094s
3.0 cpu, 4096 ram, 9000000 iterations, array_ type, array_ 9000000: 399.557ms
3.0 cpu, 4096 ram, 9000000 iterations, map___ type, map___ 9000000: 3.894s
4.0 cpu, 4096 ram, 9000000 iterations, object type, object 9000000: 1.104s
4.0 cpu, 4096 ram, 9000000 iterations, array_ type, array_ 9000000: 363.698ms
4.0 cpu, 4096 ram, 9000000 iterations, map___ type, map___ 9000000: 3.792s
0.5 cpu, 8192 ram, 9000000 iterations, object type, object 9000000: 2.885s
0.5 cpu, 8192 ram, 9000000 iterations, array_ type, array_ 9000000: 802.71ms
0.5 cpu, 8192 ram, 9000000 iterations, map___ type, map___ 9000000: 10.699s
1.0 cpu, 8192 ram, 9000000 iterations, object type, object 9000000: 1.594s
1.0 cpu, 8192 ram, 9000000 iterations, array_ type, array_ 9000000: 459.805ms
1.0 cpu, 8192 ram, 9000000 iterations, map___ type, map___ 9000000: 4.880s
2.0 cpu, 8192 ram, 9000000 iterations, object type, object 9000000: 1.097s
2.0 cpu, 8192 ram, 9000000 iterations, array_ type, array_ 9000000: 368.26ms
2.0 cpu, 8192 ram, 9000000 iterations, map___ type, map___ 9000000: 4.035s
3.0 cpu, 8192 ram, 9000000 iterations, object type, object 9000000: 1.058s
3.0 cpu, 8192 ram, 9000000 iterations, array_ type, array_ 9000000: 370.112ms
3.0 cpu, 8192 ram, 9000000 iterations, map___ type, map___ 9000000: 3.783s
4.0 cpu, 8192 ram, 9000000 iterations, object type, object 9000000: 1.096s
4.0 cpu, 8192 ram, 9000000 iterations, array_ type, array_ 9000000: 367.008ms
4.0 cpu, 8192 ram, 9000000 iterations, map___ type, map___ 9000000: 3.754s
0.5 cpu, 16384 ram, 9000000 iterations, object type, object 9000000: 4.046s
0.5 cpu, 16384 ram, 9000000 iterations, array_ type, array_ 9000000: 741.04ms
0.5 cpu, 16384 ram, 9000000 iterations, map___ type, map___ 9000000: 11.779s
1.0 cpu, 16384 ram, 9000000 iterations, object type, object 9000000: 1.445s
1.0 cpu, 16384 ram, 9000000 iterations, array_ type, array_ 9000000: 381.051ms
1.0 cpu, 16384 ram, 9000000 iterations, map___ type, map___ 9000000: 5.024s
2.0 cpu, 16384 ram, 9000000 iterations, object type, object 9000000: 1.054s
2.0 cpu, 16384 ram, 9000000 iterations, array_ type, array_ 9000000: 424.701ms
2.0 cpu, 16384 ram, 9000000 iterations, map___ type, map___ 9000000: 4.105s
3.0 cpu, 16384 ram, 9000000 iterations, object type, object 9000000: 1.041s
3.0 cpu, 16384 ram, 9000000 iterations, array_ type, array_ 9000000: 364.498ms
3.0 cpu, 16384 ram, 9000000 iterations, map___ type, map___ 9000000: 3.775s
4.0 cpu, 16384 ram, 9000000 iterations, object type, object 9000000: 1.042s
4.0 cpu, 16384 ram, 9000000 iterations, array_ type, array_ 9000000: 366.31ms
4.0 cpu, 16384 ram, 9000000 iterations, map___ type, map___ 9000000: 3.763s
0.5 cpu, 128 ram, 10000000 iterations, object type,
0.5 cpu, 128 ram, 10000000 iterations, array_ type,
0.5 cpu, 128 ram, 10000000 iterations, map___ type,
1.0 cpu, 128 ram, 10000000 iterations, object type,
1.0 cpu, 128 ram, 10000000 iterations, array_ type,
1.0 cpu, 128 ram, 10000000 iterations, map___ type,
2.0 cpu, 128 ram, 10000000 iterations, object type,
2.0 cpu, 128 ram, 10000000 iterations, array_ type,
2.0 cpu, 128 ram, 10000000 iterations, map___ type,
3.0 cpu, 128 ram, 10000000 iterations, object type,
3.0 cpu, 128 ram, 10000000 iterations, array_ type,
3.0 cpu, 128 ram, 10000000 iterations, map___ type,
4.0 cpu, 128 ram, 10000000 iterations, object type,
4.0 cpu, 128 ram, 10000000 iterations, array_ type,
4.0 cpu, 128 ram, 10000000 iterations, map___ type,
0.5 cpu, 256 ram, 10000000 iterations, object type,
0.5 cpu, 256 ram, 10000000 iterations, array_ type, array_ 10000000: 1.628s
0.5 cpu, 256 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb4b66470] 6724 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 294.21 / 0.00 ms (average mu = 0.604, current mu = 0.000) last resort; GC in old space requested [1:0xffffb4b66470] 7016 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 291.72 / 0.00 ms (average mu = 0.432, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 10000000 iterations, object type,
1.0 cpu, 256 ram, 10000000 iterations, array_ type, array_ 10000000: 797.32ms
1.0 cpu, 256 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffae65b470] 3028 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 292.24 / 0.00 ms (average mu = 0.501, current mu = 0.000) last resort; GC in old space requested [1:0xffffae65b470] 3176 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 148.32 / 0.00 ms (average mu = 0.365, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 10000000 iterations, object type,
2.0 cpu, 256 ram, 10000000 iterations, array_ type, array_ 10000000: 804.76ms
2.0 cpu, 256 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8f3e3470] 2523 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 105.65 / 0.00 ms (average mu = 0.664, current mu = 0.000) last resort; GC in old space requested [1:0xffff8f3e3470] 2635 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 111.77 / 0.00 ms (average mu = 0.473, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 10000000 iterations, object type,
3.0 cpu, 256 ram, 10000000 iterations, array_ type, array_ 10000000: 756.803ms
3.0 cpu, 256 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff83793470] 2428 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.58 / 0.00 ms (average mu = 0.643, current mu = 0.000) last resort; GC in old space requested [1:0xffff83793470] 2534 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.45 / 0.00 ms (average mu = 0.464, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 10000000 iterations, object type,
4.0 cpu, 256 ram, 10000000 iterations, array_ type, array_ 10000000: 841.8ms
4.0 cpu, 256 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff95e15470] 2440 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.14 / 0.00 ms (average mu = 0.649, current mu = 0.000) last resort; GC in old space requested [1:0xffff95e15470] 2547 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.80 / 0.00 ms (average mu = 0.466, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 10000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff90cd1470] 6156 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 1.03 / 0.00 ms (average mu = 0.617, current mu = 0.599) allocation failure;  [1:0xffff90cd1470] 6160 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 1.30 / 0.00 ms (average mu = 0.617, current mu = 0.599) allocation failure;  [1:0xffff90cd1470] 6970 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 718.61 / 0.00 ms (average mu = 0.532, current mu = 0.458) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 10000000 iterations, array_ type, array_ 10000000: 1.628s
0.5 cpu, 512 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff93c7d470] 6378 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 304.39 / 0.00 ms (average mu = 0.607, current mu = 0.000) last resort; GC in old space requested [1:0xffff93c7d470] 6679 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 300.56 / 0.00 ms (average mu = 0.428, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 10000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff84cb8470] 2929 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.499, current mu = 0.468) allocation failure;  [1:0xffff84cb8470] 2931 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.66 / 0.00 ms (average mu = 0.499, current mu = 0.468) allocation failure;  [1:0xffff84cb8470] 3321 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 356.95 / 0.00 ms (average mu = 0.451, current mu = 0.399) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 10000000 iterations, array_ type, array_ 10000000: 800.1ms
1.0 cpu, 512 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7e22d470] 2824 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 145.02 / 0.00 ms (average mu = 0.597, current mu = 0.000) last resort; GC in old space requested [1:0xffff7e22d470] 2967 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 142.19 / 0.00 ms (average mu = 0.413, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 10000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb1430470] 2022 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.566, current mu = 0.537) allocation failure;  [1:0xffffb1430470] 2025 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.68 / 0.00 ms (average mu = 0.566, current mu = 0.537) allocation failure;  [1:0xffffb1430470] 2413 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 355.09 / 0.00 ms (average mu = 0.409, current mu = 0.264) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 10000000 iterations, array_ type, array_ 10000000: 767.112ms
2.0 cpu, 512 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7e789470] 2437 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.25 / 0.00 ms (average mu = 0.650, current mu = 0.000) last resort; GC in old space requested [1:0xffff7e789470] 2551 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 114.69 / 0.00 ms (average mu = 0.457, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 10000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8f4b3470] 2019 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.69 / 0.00 ms (average mu = 0.589, current mu = 0.569) allocation failure;  [1:0xffff8f4b3470] 2021 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.589, current mu = 0.569) allocation failure;  [1:0xffff8f4b3470] 2383 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 329.36 / 0.00 ms (average mu = 0.425, current mu = 0.264) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 10000000 iterations, array_ type, array_ 10000000: 767.994ms
3.0 cpu, 512 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff838dc470] 2452 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 114.71 / 0.00 ms (average mu = 0.640, current mu = 0.000) last resort; GC in old space requested [1:0xffff838dc470] 2567 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 115.07 / 0.00 ms (average mu = 0.453, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 10000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb3820470] 1955 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.74 / 0.00 ms (average mu = 0.585, current mu = 0.565) allocation failure;  [1:0xffffb3820470] 1958 ms: Scavenge 228.7 (232.8) -> 228.3 (233.0) MB, 0.77 / 0.00 ms (average mu = 0.585, current mu = 0.565) allocation failure;  [1:0xffffb3820470] 2343 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 351.25 / 0.00 ms (average mu = 0.412, current mu = 0.255) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 10000000 iterations, array_ type, array_ 10000000: 766.411ms
4.0 cpu, 512 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9e508470] 2438 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 114.72 / 0.00 ms (average mu = 0.640, current mu = 0.000) last resort; GC in old space requested [1:0xffff9e508470] 2542 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.60 / 0.00 ms (average mu = 0.467, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 10000000 iterations, object type, object 10000000: 6.513s
0.5 cpu, 1024 ram, 10000000 iterations, array_ type, array_ 10000000: 1.622s
0.5 cpu, 1024 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff88a5e470] 16523 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 674.93 / 0.00 ms (average mu = 0.540, current mu = 0.000) last resort; GC in old space requested [1:0xffff88a5e470] 17220 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 696.39 / 0.00 ms (average mu = 0.392, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 10000000 iterations, object type, object 10000000: 2.993s
1.0 cpu, 1024 ram, 10000000 iterations, array_ type, array_ 10000000: 789.046ms
1.0 cpu, 1024 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff88e8e470] 6401 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 266.89 / 0.00 ms (average mu = 0.654, current mu = 0.000) last resort; GC in old space requested [1:0xffff88e8e470] 6686 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 285.35 / 0.00 ms (average mu = 0.458, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 10000000 iterations, object type, object 10000000: 2.011s
2.0 cpu, 1024 ram, 10000000 iterations, array_ type, array_ 10000000: 762.625ms
2.0 cpu, 1024 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9ad3c470] 5325 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 205.77 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffff9ad3c470] 5534 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 208.65 / 0.00 ms (average mu = 0.499, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 10000000 iterations, object type, object 10000000: 2.018s
3.0 cpu, 1024 ram, 10000000 iterations, array_ type, array_ 10000000: 757.655ms
3.0 cpu, 1024 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa3e1a470] 5250 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 206.14 / 0.00 ms (average mu = 0.678, current mu = 0.000) last resort; GC in old space requested [1:0xffffa3e1a470] 5480 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 229.80 / 0.00 ms (average mu = 0.482, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 10000000 iterations, object type, object 10000000: 1.985s
4.0 cpu, 1024 ram, 10000000 iterations, array_ type, array_ 10000000: 760.638ms
4.0 cpu, 1024 ram, 10000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa9861470] 5245 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 208.67 / 0.00 ms (average mu = 0.678, current mu = 0.000) last resort; GC in old space requested [1:0xffffa9861470] 5464 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 219.13 / 0.00 ms (average mu = 0.488, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 10000000 iterations, object type, object 10000000: 8.997s
0.5 cpu, 2048 ram, 10000000 iterations, array_ type, array_ 10000000: 1.671s
0.5 cpu, 2048 ram, 10000000 iterations, map___ type, map___ 10000000: 18.863s
1.0 cpu, 2048 ram, 10000000 iterations, object type, object 10000000: 2.719s
1.0 cpu, 2048 ram, 10000000 iterations, array_ type, array_ 10000000: 788.417ms
1.0 cpu, 2048 ram, 10000000 iterations, map___ type, map___ 10000000: 8.231s
2.0 cpu, 2048 ram, 10000000 iterations, object type, object 10000000: 1.956s
2.0 cpu, 2048 ram, 10000000 iterations, array_ type, array_ 10000000: 751.502ms
2.0 cpu, 2048 ram, 10000000 iterations, map___ type, map___ 10000000: 6.478s
3.0 cpu, 2048 ram, 10000000 iterations, object type, object 10000000: 1.747s
3.0 cpu, 2048 ram, 10000000 iterations, array_ type, array_ 10000000: 743.909ms
3.0 cpu, 2048 ram, 10000000 iterations, map___ type, map___ 10000000: 6.222s
4.0 cpu, 2048 ram, 10000000 iterations, object type, object 10000000: 1.954s
4.0 cpu, 2048 ram, 10000000 iterations, array_ type, array_ 10000000: 752.975ms
4.0 cpu, 2048 ram, 10000000 iterations, map___ type, map___ 10000000: 6.155s
0.5 cpu, 4096 ram, 10000000 iterations, object type, object 10000000: 4.035s
0.5 cpu, 4096 ram, 10000000 iterations, array_ type, array_ 10000000: 1.630s
0.5 cpu, 4096 ram, 10000000 iterations, map___ type, map___ 10000000: 17.310s
1.0 cpu, 4096 ram, 10000000 iterations, object type, object 10000000: 1.686s
1.0 cpu, 4096 ram, 10000000 iterations, array_ type, array_ 10000000: 757.629ms
1.0 cpu, 4096 ram, 10000000 iterations, map___ type, map___ 10000000: 7.436s
2.0 cpu, 4096 ram, 10000000 iterations, object type, object 10000000: 1.504s
2.0 cpu, 4096 ram, 10000000 iterations, array_ type, array_ 10000000: 740.498ms
2.0 cpu, 4096 ram, 10000000 iterations, map___ type, map___ 10000000: 6.239s
3.0 cpu, 4096 ram, 10000000 iterations, object type, object 10000000: 1.492s
3.0 cpu, 4096 ram, 10000000 iterations, array_ type, array_ 10000000: 740.856ms
3.0 cpu, 4096 ram, 10000000 iterations, map___ type, map___ 10000000: 5.963s
4.0 cpu, 4096 ram, 10000000 iterations, object type, object 10000000: 1.492s
4.0 cpu, 4096 ram, 10000000 iterations, array_ type, array_ 10000000: 749.992ms
4.0 cpu, 4096 ram, 10000000 iterations, map___ type, map___ 10000000: 6.440s
0.5 cpu, 8192 ram, 10000000 iterations, object type, object 10000000: 3.867s
0.5 cpu, 8192 ram, 10000000 iterations, array_ type, array_ 10000000: 1.696s
0.5 cpu, 8192 ram, 10000000 iterations, map___ type, map___ 10000000: 17.374s
1.0 cpu, 8192 ram, 10000000 iterations, object type, object 10000000: 1.788s
1.0 cpu, 8192 ram, 10000000 iterations, array_ type, array_ 10000000: 762.481ms
1.0 cpu, 8192 ram, 10000000 iterations, map___ type, map___ 10000000: 7.462s
2.0 cpu, 8192 ram, 10000000 iterations, object type, object 10000000: 1.496s
2.0 cpu, 8192 ram, 10000000 iterations, array_ type, array_ 10000000: 751.945ms
2.0 cpu, 8192 ram, 10000000 iterations, map___ type, map___ 10000000: 6.327s
3.0 cpu, 8192 ram, 10000000 iterations, object type, object 10000000: 1.569s
3.0 cpu, 8192 ram, 10000000 iterations, array_ type, array_ 10000000: 776.457ms
3.0 cpu, 8192 ram, 10000000 iterations, map___ type, map___ 10000000: 6.085s
4.0 cpu, 8192 ram, 10000000 iterations, object type, object 10000000: 1.530s
4.0 cpu, 8192 ram, 10000000 iterations, array_ type, array_ 10000000: 748.683ms
4.0 cpu, 8192 ram, 10000000 iterations, map___ type, map___ 10000000: 6.073s
0.5 cpu, 16384 ram, 10000000 iterations, object type, object 10000000: 4.014s
0.5 cpu, 16384 ram, 10000000 iterations, array_ type, array_ 10000000: 1.611s
0.5 cpu, 16384 ram, 10000000 iterations, map___ type, map___ 10000000: 17.146s
1.0 cpu, 16384 ram, 10000000 iterations, object type, object 10000000: 1.743s
1.0 cpu, 16384 ram, 10000000 iterations, array_ type, array_ 10000000: 763.881ms
1.0 cpu, 16384 ram, 10000000 iterations, map___ type, map___ 10000000: 7.535s
2.0 cpu, 16384 ram, 10000000 iterations, object type, object 10000000: 1.513s
2.0 cpu, 16384 ram, 10000000 iterations, array_ type, array_ 10000000: 750.099ms
2.0 cpu, 16384 ram, 10000000 iterations, map___ type, map___ 10000000: 6.275s
3.0 cpu, 16384 ram, 10000000 iterations, object type, object 10000000: 1.529s
3.0 cpu, 16384 ram, 10000000 iterations, array_ type, array_ 10000000: 746.526ms
3.0 cpu, 16384 ram, 10000000 iterations, map___ type, map___ 10000000: 6.001s
4.0 cpu, 16384 ram, 10000000 iterations, object type, object 10000000: 1.608s
4.0 cpu, 16384 ram, 10000000 iterations, array_ type, array_ 10000000: 747.041ms
4.0 cpu, 16384 ram, 10000000 iterations, map___ type, map___ 10000000: 6.052s
0.5 cpu, 128 ram, 20000000 iterations, object type,
0.5 cpu, 128 ram, 20000000 iterations, array_ type,
0.5 cpu, 128 ram, 20000000 iterations, map___ type,
1.0 cpu, 128 ram, 20000000 iterations, object type,
1.0 cpu, 128 ram, 20000000 iterations, array_ type,
1.0 cpu, 128 ram, 20000000 iterations, map___ type,
2.0 cpu, 128 ram, 20000000 iterations, object type,
2.0 cpu, 128 ram, 20000000 iterations, array_ type,
2.0 cpu, 128 ram, 20000000 iterations, map___ type,
3.0 cpu, 128 ram, 20000000 iterations, object type,
3.0 cpu, 128 ram, 20000000 iterations, array_ type,
3.0 cpu, 128 ram, 20000000 iterations, map___ type,
4.0 cpu, 128 ram, 20000000 iterations, object type,
4.0 cpu, 128 ram, 20000000 iterations, array_ type,
4.0 cpu, 128 ram, 20000000 iterations, map___ type,
0.5 cpu, 256 ram, 20000000 iterations, object type,
0.5 cpu, 256 ram, 20000000 iterations, array_ type,
0.5 cpu, 256 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff89034470] 6455 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 302.88 / 0.00 ms (average mu = 0.611, current mu = 0.000) last resort; GC in old space requested [1:0xffff89034470] 6822 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 366.70 / 0.00 ms (average mu = 0.406, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 20000000 iterations, object type,
1.0 cpu, 256 ram, 20000000 iterations, array_ type,
1.0 cpu, 256 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffafcf0470] 2851 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 137.60 / 0.00 ms (average mu = 0.613, current mu = 0.000) last resort; GC in old space requested [1:0xffffafcf0470] 2989 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 137.76 / 0.00 ms (average mu = 0.428, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 20000000 iterations, object type,
2.0 cpu, 256 ram, 20000000 iterations, array_ type,
2.0 cpu, 256 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7df67470] 2495 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 105.89 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffff7df67470] 2602 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.18 / 0.00 ms (average mu = 0.474, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 20000000 iterations, object type,
3.0 cpu, 256 ram, 20000000 iterations, array_ type,
3.0 cpu, 256 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8d7cb470] 2478 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 103.83 / 0.00 ms (average mu = 0.652, current mu = 0.000) last resort; GC in old space requested [1:0xffff8d7cb470] 2584 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.85 / 0.00 ms (average mu = 0.470, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 20000000 iterations, object type,
4.0 cpu, 256 ram, 20000000 iterations, array_ type,
4.0 cpu, 256 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa9f6d470] 2671 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 105.62 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffffa9f6d470] 2776 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.86 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 20000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff879b4470] 7227 ms: Scavenge 228.5 (232.5) -> 228.1 (232.8) MB, 1.40 / 0.00 ms (average mu = 0.559, current mu = 0.591) allocation failure;  [1:0xffff879b4470] 7232 ms: Scavenge 228.8 (232.8) -> 228.5 (233.3) MB, 1.28 / 0.00 ms (average mu = 0.559, current mu = 0.591) allocation failure;  [1:0xffff879b4470] 8106 ms: Mark-Compact 342.4 (346.6) -> 266.5 (271.5) MB, 772.78 / 0.00 ms (average mu = 0.504, current mu = 0.447) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 20000000 iterations, array_ type, array_ 20000000: 3.189s
0.5 cpu, 512 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff85efe470] 6727 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 300.81 / 0.00 ms (average mu = 0.620, current mu = 0.000) last resort; GC in old space requested [1:0xffff85efe470] 7025 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 298.50 / 0.00 ms (average mu = 0.441, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 20000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8d8ba470] 2569 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.76 / 0.00 ms (average mu = 0.614, current mu = 0.618) allocation failure;  [1:0xffff8d8ba470] 2572 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.75 / 0.00 ms (average mu = 0.614, current mu = 0.618) allocation failure;  [1:0xffff8d8ba470] 2980 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 345.29 / 0.00 ms (average mu = 0.491, current mu = 0.379) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 20000000 iterations, array_ type, array_ 20000000: 1.517s
1.0 cpu, 512 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb2e6b470] 2903 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 134.48 / 0.00 ms (average mu = 0.614, current mu = 0.000) last resort; GC in old space requested [1:0xffffb2e6b470] 3038 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 134.51 / 0.00 ms (average mu = 0.432, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 20000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa0485470] 1971 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.588, current mu = 0.574) allocation failure;  [1:0xffffa0485470] 1973 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.67 / 0.00 ms (average mu = 0.588, current mu = 0.574) allocation failure;  [1:0xffffa0485470] 2351 ms: Mark-Compact 342.6 (346.6) -> 266.6 (271.8) MB, 345.65 / 0.00 ms (average mu = 0.419, current mu = 0.265) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 20000000 iterations, array_ type, array_ 20000000: 1.542s
2.0 cpu, 512 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8ca2e470] 2443 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.24 / 0.00 ms (average mu = 0.655, current mu = 0.000) last resort; GC in old space requested [1:0xffff8ca2e470] 2549 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.05 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 20000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8e6be470] 1960 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.599, current mu = 0.591) allocation failure;  [1:0xffff8e6be470] 1962 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.81 / 0.00 ms (average mu = 0.599, current mu = 0.591) allocation failure;  [1:0xffff8e6be470] 2344 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 347.30 / 0.00 ms (average mu = 0.421, current mu = 0.258) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 20000000 iterations, array_ type, array_ 20000000: 1.472s
3.0 cpu, 512 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff86f75470] 2488 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 129.39 / 0.00 ms (average mu = 0.628, current mu = 0.000) last resort; GC in old space requested [1:0xffff86f75470] 2600 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 112.40 / 0.00 ms (average mu = 0.451, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 20000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc670470] 1967 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.73 / 0.00 ms (average mu = 0.593, current mu = 0.575) allocation failure;  [1:0xffffbc670470] 1970 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.593, current mu = 0.575) allocation failure;  [1:0xffffbc670470] 2356 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 352.60 / 0.00 ms (average mu = 0.416, current mu = 0.254) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 20000000 iterations, array_ type, array_ 20000000: 1.479s
4.0 cpu, 512 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa645c470] 2449 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.42 / 0.00 ms (average mu = 0.655, current mu = 0.000) last resort; GC in old space requested [1:0xffffa645c470] 2566 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 117.37 / 0.00 ms (average mu = 0.458, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 20000000 iterations, object type, object 20000000: 18.716s
0.5 cpu, 1024 ram, 20000000 iterations, array_ type, array_ 20000000: 3.122s
0.5 cpu, 1024 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb1258470] 15202 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 681.00 / 0.00 ms (average mu = 0.633, current mu = 0.000) last resort; GC in old space requested [1:0xffffb1258470] 15891 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 688.56 / 0.00 ms (average mu = 0.442, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 20000000 iterations, object type, object 20000000: 5.444s
1.0 cpu, 1024 ram, 20000000 iterations, array_ type, array_ 20000000: 1.506s
1.0 cpu, 1024 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3e5b470] 6412 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 265.79 / 0.00 ms (average mu = 0.663, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3e5b470] 6686 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 273.99 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 20000000 iterations, object type, object 20000000: 4.154s
2.0 cpu, 1024 ram, 20000000 iterations, array_ type, array_ 20000000: 1.449s
2.0 cpu, 1024 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3f8f470] 5612 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 225.29 / 0.00 ms (average mu = 0.680, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3f8f470] 5807 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 195.54 / 0.00 ms (average mu = 0.512, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 20000000 iterations, object type, object 20000000: 3.991s
3.0 cpu, 1024 ram, 20000000 iterations, array_ type, array_ 20000000: 1.450s
3.0 cpu, 1024 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbc105470] 5373 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 209.35 / 0.00 ms (average mu = 0.678, current mu = 0.000) last resort; GC in old space requested [1:0xffffbc105470] 5590 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 217.35 / 0.00 ms (average mu = 0.492, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 20000000 iterations, object type, object 20000000: 4.042s
4.0 cpu, 1024 ram, 20000000 iterations, array_ type, array_ 20000000: 1.570s
4.0 cpu, 1024 ram, 20000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9e7c5470] 5325 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 209.10 / 0.00 ms (average mu = 0.679, current mu = 0.000) last resort; GC in old space requested [1:0xffff9e7c5470] 5533 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 207.90 / 0.00 ms (average mu = 0.497, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 20000000 iterations, object type, object 20000000: 19.054s
0.5 cpu, 2048 ram, 20000000 iterations, array_ type, array_ 20000000: 3.104s
0.5 cpu, 2048 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 20000000 iterations, object type, object 20000000: 4.891s
1.0 cpu, 2048 ram, 20000000 iterations, array_ type, array_ 20000000: 1.495s
1.0 cpu, 2048 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 20000000 iterations, object type, object 20000000: 3.590s
2.0 cpu, 2048 ram, 20000000 iterations, array_ type, array_ 20000000: 1.458s
2.0 cpu, 2048 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 20000000 iterations, object type, object 20000000: 3.779s
3.0 cpu, 2048 ram, 20000000 iterations, array_ type, array_ 20000000: 1.446s
3.0 cpu, 2048 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 20000000 iterations, object type, object 20000000: 4.186s
4.0 cpu, 2048 ram, 20000000 iterations, array_ type, array_ 20000000: 1.572s
4.0 cpu, 2048 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 20000000 iterations, object type, object 20000000: 7.233s
0.5 cpu, 4096 ram, 20000000 iterations, array_ type, array_ 20000000: 3.076s
0.5 cpu, 4096 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 20000000 iterations, object type, object 20000000: 2.995s
1.0 cpu, 4096 ram, 20000000 iterations, array_ type, array_ 20000000: 1.457s
1.0 cpu, 4096 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 20000000 iterations, object type, object 20000000: 2.833s
2.0 cpu, 4096 ram, 20000000 iterations, array_ type, array_ 20000000: 1.530s
2.0 cpu, 4096 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 20000000 iterations, object type, object 20000000: 2.808s
3.0 cpu, 4096 ram, 20000000 iterations, array_ type, array_ 20000000: 1.449s
3.0 cpu, 4096 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 20000000 iterations, object type, object 20000000: 2.717s
4.0 cpu, 4096 ram, 20000000 iterations, array_ type, array_ 20000000: 1.445s
4.0 cpu, 4096 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 20000000 iterations, object type, object 20000000: 6.328s
0.5 cpu, 8192 ram, 20000000 iterations, array_ type, array_ 20000000: 3.239s
0.5 cpu, 8192 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 20000000 iterations, object type, object 20000000: 3.171s
1.0 cpu, 8192 ram, 20000000 iterations, array_ type, array_ 20000000: 1.469s
1.0 cpu, 8192 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 20000000 iterations, object type, object 20000000: 2.670s
2.0 cpu, 8192 ram, 20000000 iterations, array_ type, array_ 20000000: 1.457s
2.0 cpu, 8192 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 20000000 iterations, object type, object 20000000: 2.680s
3.0 cpu, 8192 ram, 20000000 iterations, array_ type, array_ 20000000: 1.453s
3.0 cpu, 8192 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 20000000 iterations, object type, object 20000000: 2.674s
4.0 cpu, 8192 ram, 20000000 iterations, array_ type, array_ 20000000: 1.452s
4.0 cpu, 8192 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 20000000 iterations, object type, object 20000000: 6.483s
0.5 cpu, 16384 ram, 20000000 iterations, array_ type, array_ 20000000: 3.044s
0.5 cpu, 16384 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 20000000 iterations, object type, object 20000000: 2.976s
1.0 cpu, 16384 ram, 20000000 iterations, array_ type, array_ 20000000: 1.467s
1.0 cpu, 16384 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 20000000 iterations, object type, object 20000000: 2.773s
2.0 cpu, 16384 ram, 20000000 iterations, array_ type, array_ 20000000: 1.461s
2.0 cpu, 16384 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 20000000 iterations, object type, object 20000000: 2.663s
3.0 cpu, 16384 ram, 20000000 iterations, array_ type, array_ 20000000: 1.454s
3.0 cpu, 16384 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 20000000 iterations, object type, object 20000000: 2.676s
4.0 cpu, 16384 ram, 20000000 iterations, array_ type, array_ 20000000: 1.443s
4.0 cpu, 16384 ram, 20000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 30000000 iterations, object type,
0.5 cpu, 128 ram, 30000000 iterations, array_ type,
0.5 cpu, 128 ram, 30000000 iterations, map___ type,
1.0 cpu, 128 ram, 30000000 iterations, object type,
1.0 cpu, 128 ram, 30000000 iterations, array_ type,
1.0 cpu, 128 ram, 30000000 iterations, map___ type,
2.0 cpu, 128 ram, 30000000 iterations, object type,
2.0 cpu, 128 ram, 30000000 iterations, array_ type,
2.0 cpu, 128 ram, 30000000 iterations, map___ type,
3.0 cpu, 128 ram, 30000000 iterations, object type,
3.0 cpu, 128 ram, 30000000 iterations, array_ type,
3.0 cpu, 128 ram, 30000000 iterations, map___ type,
4.0 cpu, 128 ram, 30000000 iterations, object type,
4.0 cpu, 128 ram, 30000000 iterations, array_ type,
4.0 cpu, 128 ram, 30000000 iterations, map___ type,
0.5 cpu, 256 ram, 30000000 iterations, object type,
0.5 cpu, 256 ram, 30000000 iterations, array_ type,
0.5 cpu, 256 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb0155470] 6430 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 298.35 / 0.00 ms (average mu = 0.606, current mu = 0.000) last resort; GC in old space requested [1:0xffffb0155470] 6736 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 305.33 / 0.00 ms (average mu = 0.426, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 30000000 iterations, object type,
1.0 cpu, 256 ram, 30000000 iterations, array_ type,
1.0 cpu, 256 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa57d1470] 2860 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 137.81 / 0.00 ms (average mu = 0.611, current mu = 0.000) last resort; GC in old space requested [1:0xffffa57d1470] 2999 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 139.11 / 0.00 ms (average mu = 0.424, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 30000000 iterations, object type,
2.0 cpu, 256 ram, 30000000 iterations, array_ type,
2.0 cpu, 256 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff80598470] 2643 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.96 / 0.00 ms (average mu = 0.660, current mu = 0.000) last resort; GC in old space requested [1:0xffff80598470] 2754 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 110.70 / 0.00 ms (average mu = 0.474, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 30000000 iterations, object type,
3.0 cpu, 256 ram, 30000000 iterations, array_ type,
3.0 cpu, 256 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa859b470] 2478 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 114.80 / 0.00 ms (average mu = 0.639, current mu = 0.000) last resort; GC in old space requested [1:0xffffa859b470] 2590 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 112.60 / 0.00 ms (average mu = 0.456, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 30000000 iterations, object type,
4.0 cpu, 256 ram, 30000000 iterations, array_ type,
4.0 cpu, 256 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffac0ca470] 2463 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.38 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffffac0ca470] 2577 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 113.79 / 0.00 ms (average mu = 0.460, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc1de470] 6118 ms: Scavenge 228.5 (232.5) -> 228.1 (232.8) MB, 1.11 / 0.00 ms (average mu = 0.629, current mu = 0.617) allocation failure;  [1:0xffffbc1de470] 6121 ms: Scavenge 228.8 (232.8) -> 228.5 (233.3) MB, 0.96 / 0.00 ms (average mu = 0.629, current mu = 0.617) allocation failure;  [1:0xffffbc1de470] 8924 ms: Mark-Compact 342.4 (346.6) -> 266.5 (271.5) MB, 2710.14 / 0.00 ms (average mu = 0.325, current mu = 0.220) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 30000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffbc323470] 3497 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.993, current mu = 0.998) allocation failure;  [1:0xffffbc323470] 3499 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.993, current mu = 0.998) allocation failure;  [1:0xffffbc323470] 3611 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.20 / 0.00 ms (average mu = 0.997, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa23f0470] 6427 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 301.09 / 0.00 ms (average mu = 0.601, current mu = 0.000) last resort; GC in old space requested [1:0xffffa23f0470] 7937 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 1509.51 / 0.00 ms (average mu = 0.196, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff851c0470] 2831 ms: Scavenge 228.4 (232.8) -> 228.1 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.496, current mu = 0.440) allocation failure;  [1:0xffff851c0470] 2834 ms: Scavenge 228.7 (233.0) -> 228.4 (233.3) MB, 0.66 / 0.00 ms (average mu = 0.496, current mu = 0.440) allocation failure;  [1:0xffff851c0470] 3431 ms: Mark-Compact 342.4 (346.6) -> 266.5 (271.5) MB, 563.96 / 0.00 ms (average mu = 0.385, current mu = 0.299) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 30000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa8a31470] 1663 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffa8a31470] 1665 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffa8a31470] 1728 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.13 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8f5d5470] 2863 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 147.76 / 0.00 ms (average mu = 0.601, current mu = 0.000) last resort; GC in old space requested [1:0xffff8f5d5470] 3008 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 144.70 / 0.00 ms (average mu = 0.414, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9e2e8470] 2103 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.67 / 0.00 ms (average mu = 0.531, current mu = 0.487) allocation failure;  [1:0xffff9e2e8470] 2106 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.531, current mu = 0.487) allocation failure;  [1:0xffff9e2e8470] 2486 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 346.78 / 0.00 ms (average mu = 0.413, current mu = 0.300) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 30000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff81625470] 1636 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff81625470] 1638 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff81625470] 1701 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.25 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffab3bb470] 2472 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.28 / 0.00 ms (average mu = 0.647, current mu = 0.000) last resort; GC in old space requested [1:0xffffab3bb470] 2578 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.04 / 0.00 ms (average mu = 0.469, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9ee03470] 2132 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.595, current mu = 0.587) allocation failure;  [1:0xffff9ee03470] 2135 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.68 / 0.00 ms (average mu = 0.595, current mu = 0.587) allocation failure;  [1:0xffff9ee03470] 2496 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 327.85 / 0.00 ms (average mu = 0.429, current mu = 0.273) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 30000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9c853470] 1655 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9c853470] 1657 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9c853470] 1720 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.17 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff841c1470] 2470 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.48 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffff841c1470] 2575 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.39 / 0.00 ms (average mu = 0.471, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff99f0f470] 1995 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.72 / 0.00 ms (average mu = 0.586, current mu = 0.571) allocation failure;  [1:0xffff99f0f470] 1998 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.81 / 0.00 ms (average mu = 0.586, current mu = 0.571) allocation failure;  [1:0xffff99f0f470] 2379 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 348.16 / 0.00 ms (average mu = 0.415, current mu = 0.257) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 30000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8c9f6470] 1635 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8c9f6470] 1637 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8c9f6470] 1698 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.30 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa2662470] 2439 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.39 / 0.00 ms (average mu = 0.648, current mu = 0.000) last resort; GC in old space requested [1:0xffffa2662470] 2554 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 114.39 / 0.00 ms (average mu = 0.457, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8c141470] 30639 ms: Scavenge 503.3 (512.0) -> 502.6 (512.2) MB, 2.49 / 0.00 ms (average mu = 0.354, current mu = 0.536) allocation failure;  [1:0xffff8c141470] 30723 ms: Scavenge 503.8 (512.2) -> 503.2 (512.7) MB, 80.74 / 0.00 ms (average mu = 0.354, current mu = 0.536) allocation failure;  [1:0xffff8c141470] 30732 ms: Scavenge 504.5 (512.7) -> 503.8 (517.5) MB, 4.41 / 0.00 ms (average mu = 0.354, current mu = 0.536) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 30000000 iterations, array_ type, array_ 30000000: 4.649s
0.5 cpu, 1024 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff87b21470] 15079 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 701.33 / 0.00 ms (average mu = 0.633, current mu = 0.000) last resort; GC in old space requested [1:0xffff87b21470] 15778 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 698.67 / 0.00 ms (average mu = 0.440, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff99f07470] 11333 ms: Scavenge 506.1 (514.5) -> 505.4 (515.0) MB, 55.37 / 0.00 ms (average mu = 0.250, current mu = 0.252) allocation failure;  [1:0xffff99f07470] 11340 ms: Scavenge 506.6 (515.0) -> 506.0 (515.7) MB, 3.08 / 0.00 ms (average mu = 0.250, current mu = 0.252) allocation failure;  [1:0xffff99f07470] 11346 ms: Scavenge 507.3 (515.7) -> 506.7 (520.2) MB, 2.60 / 0.00 ms (average mu = 0.250, current mu = 0.252) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 30000000 iterations, array_ type, array_ 30000000: 2.267s
1.0 cpu, 1024 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb0d33470] 6381 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 292.70 / 0.00 ms (average mu = 0.646, current mu = 0.000) last resort; GC in old space requested [1:0xffffb0d33470] 6656 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 275.04 / 0.00 ms (average mu = 0.459, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff86d7f470] 7123 ms: Scavenge 507.5 (516.0) -> 506.8 (516.5) MB, 2.38 / 0.00 ms (average mu = 0.136, current mu = 0.098) allocation failure;  [1:0xffff86d7f470] 7129 ms: Scavenge 508.0 (516.5) -> 507.4 (517.2) MB, 2.54 / 0.00 ms (average mu = 0.136, current mu = 0.098) allocation failure;  [1:0xffff86d7f470] 7134 ms: Scavenge 508.7 (517.2) -> 508.1 (521.7) MB, 2.37 / 0.00 ms (average mu = 0.136, current mu = 0.098) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 30000000 iterations, array_ type, array_ 30000000: 2.167s
2.0 cpu, 1024 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa99af470] 5676 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 207.81 / 0.00 ms (average mu = 0.689, current mu = 0.000) last resort; GC in old space requested [1:0xffffa99af470] 5886 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 209.44 / 0.00 ms (average mu = 0.509, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa3e65470] 7020 ms: Scavenge 508.2 (516.5) -> 507.5 (517.0) MB, 2.57 / 0.00 ms (average mu = 0.143, current mu = 0.111) allocation failure;  [1:0xffffa3e65470] 7025 ms: Scavenge 508.6 (517.0) -> 508.0 (517.7) MB, 2.45 / 0.00 ms (average mu = 0.143, current mu = 0.111) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 30000000 iterations, array_ type, array_ 30000000: 2.187s
3.0 cpu, 1024 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff88541470] 5492 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 231.44 / 0.00 ms (average mu = 0.667, current mu = 0.000) last resort; GC in old space requested [1:0xffff88541470] 5700 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 208.12 / 0.00 ms (average mu = 0.493, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 30000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb91f6470] 6871 ms: Scavenge 508.1 (516.5) -> 507.5 (517.0) MB, 2.30 / 0.00 ms (average mu = 0.145, current mu = 0.114) allocation failure;  [1:0xffffb91f6470] 6876 ms: Scavenge 508.6 (517.0) -> 508.0 (517.7) MB, 2.72 / 0.00 ms (average mu = 0.145, current mu = 0.114) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 30000000 iterations, array_ type, array_ 30000000: 2.170s
4.0 cpu, 1024 ram, 30000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff837f5470] 5312 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 209.42 / 0.00 ms (average mu = 0.679, current mu = 0.000) last resort; GC in old space requested [1:0xffff837f5470] 5526 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 214.55 / 0.00 ms (average mu = 0.492, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 30000000 iterations, object type, object 30000000: 17.321s
0.5 cpu, 2048 ram, 30000000 iterations, array_ type, array_ 30000000: 4.645s
0.5 cpu, 2048 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 30000000 iterations, object type, object 30000000: 6.555s
1.0 cpu, 2048 ram, 30000000 iterations, array_ type, array_ 30000000: 2.224s
1.0 cpu, 2048 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 30000000 iterations, object type, object 30000000: 5.279s
2.0 cpu, 2048 ram, 30000000 iterations, array_ type, array_ 30000000: 2.149s
2.0 cpu, 2048 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 30000000 iterations, object type, object 30000000: 5.234s
3.0 cpu, 2048 ram, 30000000 iterations, array_ type, array_ 30000000: 2.170s
3.0 cpu, 2048 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 30000000 iterations, object type, object 30000000: 5.297s
4.0 cpu, 2048 ram, 30000000 iterations, array_ type, array_ 30000000: 2.157s
4.0 cpu, 2048 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 30000000 iterations, object type, object 30000000: 12.782s
0.5 cpu, 4096 ram, 30000000 iterations, array_ type, array_ 30000000: 4.692s
0.5 cpu, 4096 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 30000000 iterations, object type, object 30000000: 5.186s
1.0 cpu, 4096 ram, 30000000 iterations, array_ type, array_ 30000000: 2.197s
1.0 cpu, 4096 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 30000000 iterations, object type, object 30000000: 4.535s
2.0 cpu, 4096 ram, 30000000 iterations, array_ type, array_ 30000000: 2.156s
2.0 cpu, 4096 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 30000000 iterations, object type, object 30000000: 4.449s
3.0 cpu, 4096 ram, 30000000 iterations, array_ type, array_ 30000000: 2.176s
3.0 cpu, 4096 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 30000000 iterations, object type, object 30000000: 4.432s
4.0 cpu, 4096 ram, 30000000 iterations, array_ type, array_ 30000000: 2.156s
4.0 cpu, 4096 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 30000000 iterations, object type, object 30000000: 12.919s
0.5 cpu, 8192 ram, 30000000 iterations, array_ type, array_ 30000000: 4.640s
0.5 cpu, 8192 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 30000000 iterations, object type, object 30000000: 5.507s
1.0 cpu, 8192 ram, 30000000 iterations, array_ type, array_ 30000000: 2.186s
1.0 cpu, 8192 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 30000000 iterations, object type, object 30000000: 4.478s
2.0 cpu, 8192 ram, 30000000 iterations, array_ type, array_ 30000000: 2.150s
2.0 cpu, 8192 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 30000000 iterations, object type, object 30000000: 4.370s
3.0 cpu, 8192 ram, 30000000 iterations, array_ type, array_ 30000000: 2.156s
3.0 cpu, 8192 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 30000000 iterations, object type, object 30000000: 4.395s
4.0 cpu, 8192 ram, 30000000 iterations, array_ type, array_ 30000000: 2.147s
4.0 cpu, 8192 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 30000000 iterations, object type, object 30000000: 16.431s
0.5 cpu, 16384 ram, 30000000 iterations, array_ type, array_ 30000000: 4.702s
0.5 cpu, 16384 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 30000000 iterations, object type, object 30000000: 5.409s
1.0 cpu, 16384 ram, 30000000 iterations, array_ type, array_ 30000000: 2.204s
1.0 cpu, 16384 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 30000000 iterations, object type, object 30000000: 4.483s
2.0 cpu, 16384 ram, 30000000 iterations, array_ type, array_ 30000000: 2.133s
2.0 cpu, 16384 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 30000000 iterations, object type, object 30000000: 4.459s
3.0 cpu, 16384 ram, 30000000 iterations, array_ type, array_ 30000000: 2.162s
3.0 cpu, 16384 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 30000000 iterations, object type, object 30000000: 4.437s
4.0 cpu, 16384 ram, 30000000 iterations, array_ type, array_ 30000000: 2.162s
4.0 cpu, 16384 ram, 30000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 40000000 iterations, object type,
0.5 cpu, 128 ram, 40000000 iterations, array_ type,
0.5 cpu, 128 ram, 40000000 iterations, map___ type,
1.0 cpu, 128 ram, 40000000 iterations, object type,
1.0 cpu, 128 ram, 40000000 iterations, array_ type,
1.0 cpu, 128 ram, 40000000 iterations, map___ type,
2.0 cpu, 128 ram, 40000000 iterations, object type,
2.0 cpu, 128 ram, 40000000 iterations, array_ type,
2.0 cpu, 128 ram, 40000000 iterations, map___ type,
3.0 cpu, 128 ram, 40000000 iterations, object type,
3.0 cpu, 128 ram, 40000000 iterations, array_ type,
3.0 cpu, 128 ram, 40000000 iterations, map___ type,
4.0 cpu, 128 ram, 40000000 iterations, object type,
4.0 cpu, 128 ram, 40000000 iterations, array_ type,
4.0 cpu, 128 ram, 40000000 iterations, map___ type,
0.5 cpu, 256 ram, 40000000 iterations, object type,
0.5 cpu, 256 ram, 40000000 iterations, array_ type,
0.5 cpu, 256 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbb3b8470] 6513 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 295.44 / 0.00 ms (average mu = 0.612, current mu = 0.000) last resort; GC in old space requested [1:0xffffbb3b8470] 6827 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 313.37 / 0.00 ms (average mu = 0.424, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 40000000 iterations, object type,
1.0 cpu, 256 ram, 40000000 iterations, array_ type,
1.0 cpu, 256 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff85212470] 3054 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 137.81 / 0.00 ms (average mu = 0.624, current mu = 0.000) last resort; GC in old space requested [1:0xffff85212470] 3198 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 144.35 / 0.00 ms (average mu = 0.433, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 40000000 iterations, object type,
2.0 cpu, 256 ram, 40000000 iterations, array_ type,
2.0 cpu, 256 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9b6b0470] 2480 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 105.45 / 0.00 ms (average mu = 0.655, current mu = 0.000) last resort; GC in old space requested [1:0xffff9b6b0470] 2596 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 115.72 / 0.00 ms (average mu = 0.461, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 40000000 iterations, object type,
3.0 cpu, 256 ram, 40000000 iterations, array_ type,
3.0 cpu, 256 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb560e470] 2435 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.07 / 0.00 ms (average mu = 0.639, current mu = 0.000) last resort; GC in old space requested [1:0xffffb560e470] 2540 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.30 / 0.00 ms (average mu = 0.462, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 40000000 iterations, object type,
4.0 cpu, 256 ram, 40000000 iterations, array_ type,
4.0 cpu, 256 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff84ae6470] 2462 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.15 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffff84ae6470] 2566 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.72 / 0.00 ms (average mu = 0.471, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa6b8f470] 7842 ms: Scavenge 228.5 (232.5) -> 228.1 (232.8) MB, 1.27 / 0.00 ms (average mu = 0.595, current mu = 0.734) allocation failure;  [1:0xffffa6b8f470] 7846 ms: Scavenge 228.8 (232.8) -> 228.4 (233.3) MB, 1.12 / 0.00 ms (average mu = 0.595, current mu = 0.734) allocation failure;  [1:0xffffa6b8f470] 8666 ms: Mark-Compact 342.4 (346.6) -> 266.5 (271.5) MB, 719.67 / 0.00 ms (average mu = 0.552, current mu = 0.500) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 40000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9765a470] 3454 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff9765a470] 3456 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff9765a470] 3626 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.22 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3e73470] 6650 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 298.45 / 0.00 ms (average mu = 0.622, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3e73470] 7024 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 373.84 / 0.00 ms (average mu = 0.410, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff916df470] 3050 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.429, current mu = 0.356) allocation failure;  [1:0xffff916df470] 3052 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.77 / 0.00 ms (average mu = 0.429, current mu = 0.356) allocation failure;  [1:0xffff916df470] 3432 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 347.20 / 0.00 ms (average mu = 0.430, current mu = 0.430) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 40000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff91edd470] 1676 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff91edd470] 1678 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff91edd470] 1739 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.01 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb491c470] 2830 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 134.35 / 0.00 ms (average mu = 0.607, current mu = 0.000) last resort; GC in old space requested [1:0xffffb491c470] 2964 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 133.69 / 0.00 ms (average mu = 0.424, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc2e9470] 1974 ms: Scavenge 228.4 (232.5) -> 228.1 (232.8) MB, 0.71 / 0.00 ms (average mu = 0.583, current mu = 0.568) allocation failure;  [1:0xffffbc2e9470] 1976 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.583, current mu = 0.568) allocation failure;  [1:0xffffbc2e9470] 2337 ms: Mark-Compact 342.4 (346.4) -> 266.4 (271.5) MB, 327.00 / 0.00 ms (average mu = 0.423, current mu = 0.271) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 40000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb206f470] 1642 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb206f470] 1644 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb206f470] 1705 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.10 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb86aa470] 2448 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 114.78 / 0.00 ms (average mu = 0.643, current mu = 0.000) last resort; GC in old space requested [1:0xffffb86aa470] 2554 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.23 / 0.00 ms (average mu = 0.465, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb2e94470] 1958 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.93 / 0.00 ms (average mu = 0.603, current mu = 0.597) allocation failure;  [1:0xffffb2e94470] 1960 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.79 / 0.00 ms (average mu = 0.603, current mu = 0.597) allocation failure;  [1:0xffffb2e94470] 2314 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 320.00 / 0.00 ms (average mu = 0.436, current mu = 0.273) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 40000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff80bc8470] 1627 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff80bc8470] 1630 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff80bc8470] 1690 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.08 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff883b4470] 2397 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.74 / 0.00 ms (average mu = 0.652, current mu = 0.000) last resort; GC in old space requested [1:0xffff883b4470] 2500 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 103.80 / 0.00 ms (average mu = 0.470, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb7cc3470] 1942 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.69 / 0.00 ms (average mu = 0.590, current mu = 0.572) allocation failure;  [1:0xffffb7cc3470] 1944 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.590, current mu = 0.572) allocation failure;  [1:0xffffb7cc3470] 2328 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 349.73 / 0.00 ms (average mu = 0.415, current mu = 0.257) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 40000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8d28b470] 1633 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8d28b470] 1635 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8d28b470] 1696 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.13 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffacba5470] 2418 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.03 / 0.00 ms (average mu = 0.650, current mu = 0.000) last resort; GC in old space requested [1:0xffffacba5470] 2524 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.22 / 0.00 ms (average mu = 0.467, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa3801470] 36860 ms: Scavenge 507.7 (516.2) -> 507.0 (516.7) MB, 81.98 / 0.00 ms (average mu = 0.338, current mu = 0.449) allocation failure;  [1:0xffffa3801470] 36957 ms: Scavenge 508.2 (516.7) -> 507.6 (517.2) MB, 8.63 / 0.00 ms (average mu = 0.338, current mu = 0.449) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 40000000 iterations, array_ type, array_ 40000000: 6.293s
0.5 cpu, 1024 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb7d0b470] 14927 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 690.65 / 0.00 ms (average mu = 0.636, current mu = 0.000) last resort; GC in old space requested [1:0xffffb7d0b470] 15624 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 696.52 / 0.00 ms (average mu = 0.444, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa90d3470] 10453 ms: Scavenge 507.5 (516.0) -> 506.8 (516.5) MB, 7.37 / 0.00 ms (average mu = 0.272, current mu = 0.281) allocation failure;  [1:0xffffa90d3470] 10459 ms: Scavenge 508.0 (516.5) -> 507.4 (517.2) MB, 2.67 / 0.00 ms (average mu = 0.272, current mu = 0.281) allocation failure;  [1:0xffffa90d3470] 10465 ms: Scavenge 508.7 (517.2) -> 508.1 (521.7) MB, 2.22 / 0.00 ms (average mu = 0.272, current mu = 0.281) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 40000000 iterations, array_ type, array_ 40000000: 2.947s
1.0 cpu, 1024 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffac04b470] 6327 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 282.63 / 0.00 ms (average mu = 0.648, current mu = 0.000) last resort; GC in old space requested [1:0xffffac04b470] 6609 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 282.40 / 0.00 ms (average mu = 0.456, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9142e470] 6997 ms: Scavenge 508.7 (517.0) -> 508.0 (517.5) MB, 2.38 / 0.00 ms (average mu = 0.159, current mu = 0.131) allocation failure;  [1:0xffff9142e470] 7003 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 2.56 / 0.00 ms (average mu = 0.159, current mu = 0.131) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 40000000 iterations, array_ type, array_ 40000000: 2.937s
2.0 cpu, 1024 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff987cb470] 5412 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 209.13 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffff987cb470] 5635 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 223.01 / 0.00 ms (average mu = 0.491, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff819d9470] 6847 ms: Scavenge 509.0 (517.5) -> 508.3 (518.0) MB, 2.21 / 0.00 ms (average mu = 0.151, current mu = 0.123) allocation failure;  [1:0xffff819d9470] 6853 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 2.56 / 0.00 ms (average mu = 0.151, current mu = 0.123) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 40000000 iterations, array_ type, array_ 40000000: 2.923s
3.0 cpu, 1024 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7eee1470] 5378 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 208.07 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffff7eee1470] 5588 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 209.80 / 0.00 ms (average mu = 0.499, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 40000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7db88470] 6796 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.28 / 0.00 ms (average mu = 0.147, current mu = 0.112) allocation failure;  [1:0xffff7db88470] 6802 ms: Scavenge 508.7 (517.2) -> 508.1 (518.0) MB, 2.41 / 0.00 ms (average mu = 0.147, current mu = 0.112) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 40000000 iterations, array_ type, array_ 40000000: 2.919s
4.0 cpu, 1024 ram, 40000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbc43a470] 5302 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 207.95 / 0.00 ms (average mu = 0.680, current mu = 0.000) last resort; GC in old space requested [1:0xffffbc43a470] 5514 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 211.87 / 0.00 ms (average mu = 0.495, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 40000000 iterations, object type, object 40000000: 34.353s
0.5 cpu, 2048 ram, 40000000 iterations, array_ type, array_ 40000000: 6.301s
0.5 cpu, 2048 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 40000000 iterations, object type, object 40000000: 12.098s
1.0 cpu, 2048 ram, 40000000 iterations, array_ type, array_ 40000000: 2.945s
1.0 cpu, 2048 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 40000000 iterations, object type, object 40000000: 9.456s
2.0 cpu, 2048 ram, 40000000 iterations, array_ type, array_ 40000000: 2.897s
2.0 cpu, 2048 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 40000000 iterations, object type, object 40000000: 12.842s
3.0 cpu, 2048 ram, 40000000 iterations, array_ type, array_ 40000000: 2.882s
3.0 cpu, 2048 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 40000000 iterations, object type, object 40000000: 9.552s
4.0 cpu, 2048 ram, 40000000 iterations, array_ type, array_ 40000000: 2.897s
4.0 cpu, 2048 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 40000000 iterations, object type, object 40000000: 13.840s
0.5 cpu, 4096 ram, 40000000 iterations, array_ type, array_ 40000000: 6.177s
0.5 cpu, 4096 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 40000000 iterations, object type, object 40000000: 6.695s
1.0 cpu, 4096 ram, 40000000 iterations, array_ type, array_ 40000000: 2.919s
1.0 cpu, 4096 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 40000000 iterations, object type, object 40000000: 5.741s
2.0 cpu, 4096 ram, 40000000 iterations, array_ type, array_ 40000000: 2.878s
2.0 cpu, 4096 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 40000000 iterations, object type, object 40000000: 5.580s
3.0 cpu, 4096 ram, 40000000 iterations, array_ type, array_ 40000000: 2.886s
3.0 cpu, 4096 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 40000000 iterations, object type, object 40000000: 5.672s
4.0 cpu, 4096 ram, 40000000 iterations, array_ type, array_ 40000000: 2.877s
4.0 cpu, 4096 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 40000000 iterations, object type, object 40000000: 19.427s
0.5 cpu, 8192 ram, 40000000 iterations, array_ type, array_ 40000000: 6.125s
0.5 cpu, 8192 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 40000000 iterations, object type, object 40000000: 6.795s
1.0 cpu, 8192 ram, 40000000 iterations, array_ type, array_ 40000000: 2.925s
1.0 cpu, 8192 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 40000000 iterations, object type, object 40000000: 5.690s
2.0 cpu, 8192 ram, 40000000 iterations, array_ type, array_ 40000000: 2.893s
2.0 cpu, 8192 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 40000000 iterations, object type, object 40000000: 5.666s
3.0 cpu, 8192 ram, 40000000 iterations, array_ type, array_ 40000000: 2.876s
3.0 cpu, 8192 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 40000000 iterations, object type, object 40000000: 5.732s
4.0 cpu, 8192 ram, 40000000 iterations, array_ type, array_ 40000000: 2.881s
4.0 cpu, 8192 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 40000000 iterations, object type, object 40000000: 19.184s
0.5 cpu, 16384 ram, 40000000 iterations, array_ type, array_ 40000000: 6.154s
0.5 cpu, 16384 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 40000000 iterations, object type, object 40000000: 6.932s
1.0 cpu, 16384 ram, 40000000 iterations, array_ type, array_ 40000000: 2.928s
1.0 cpu, 16384 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 40000000 iterations, object type, object 40000000: 5.700s
2.0 cpu, 16384 ram, 40000000 iterations, array_ type, array_ 40000000: 2.884s
2.0 cpu, 16384 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 40000000 iterations, object type, object 40000000: 5.663s
3.0 cpu, 16384 ram, 40000000 iterations, array_ type, array_ 40000000: 2.886s
3.0 cpu, 16384 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 40000000 iterations, object type, object 40000000: 5.879s
4.0 cpu, 16384 ram, 40000000 iterations, array_ type, array_ 40000000: 2.887s
4.0 cpu, 16384 ram, 40000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 50000000 iterations, object type,
0.5 cpu, 128 ram, 50000000 iterations, array_ type,
0.5 cpu, 128 ram, 50000000 iterations, map___ type,
1.0 cpu, 128 ram, 50000000 iterations, object type,
1.0 cpu, 128 ram, 50000000 iterations, array_ type,
1.0 cpu, 128 ram, 50000000 iterations, map___ type,
2.0 cpu, 128 ram, 50000000 iterations, object type,
2.0 cpu, 128 ram, 50000000 iterations, array_ type,
2.0 cpu, 128 ram, 50000000 iterations, map___ type,
3.0 cpu, 128 ram, 50000000 iterations, object type,
3.0 cpu, 128 ram, 50000000 iterations, array_ type,
3.0 cpu, 128 ram, 50000000 iterations, map___ type,
4.0 cpu, 128 ram, 50000000 iterations, object type,
4.0 cpu, 128 ram, 50000000 iterations, array_ type,
4.0 cpu, 128 ram, 50000000 iterations, map___ type,
0.5 cpu, 256 ram, 50000000 iterations, object type,
0.5 cpu, 256 ram, 50000000 iterations, array_ type,
0.5 cpu, 256 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffaf45b470] 6448 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 309.87 / 0.00 ms (average mu = 0.610, current mu = 0.000) last resort; GC in old space requested [1:0xffffaf45b470] 6755 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 306.65 / 0.00 ms (average mu = 0.426, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 50000000 iterations, object type,
1.0 cpu, 256 ram, 50000000 iterations, array_ type,
1.0 cpu, 256 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb8cc5470] 2831 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 138.45 / 0.00 ms (average mu = 0.603, current mu = 0.000) last resort; GC in old space requested [1:0xffffb8cc5470] 2965 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 134.37 / 0.00 ms (average mu = 0.420, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 50000000 iterations, object type,
2.0 cpu, 256 ram, 50000000 iterations, array_ type,
2.0 cpu, 256 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa02dc470] 2501 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.68 / 0.00 ms (average mu = 0.660, current mu = 0.000) last resort; GC in old space requested [1:0xffffa02dc470] 2606 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.89 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 50000000 iterations, object type,
3.0 cpu, 256 ram, 50000000 iterations, array_ type,
3.0 cpu, 256 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9265b470] 2475 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 105.55 / 0.00 ms (average mu = 0.653, current mu = 0.000) last resort; GC in old space requested [1:0xffff9265b470] 2579 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.62 / 0.00 ms (average mu = 0.473, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 50000000 iterations, object type,
4.0 cpu, 256 ram, 50000000 iterations, array_ type,
4.0 cpu, 256 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff99148470] 2428 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.18 / 0.00 ms (average mu = 0.650, current mu = 0.000) last resort; GC in old space requested [1:0xffff99148470] 2533 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.80 / 0.00 ms (average mu = 0.468, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb77e3470] 8400 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 1.08 / 0.00 ms (average mu = 0.506, current mu = 0.714) allocation failure;  [1:0xffffb77e3470] 8403 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.92 / 0.00 ms (average mu = 0.506, current mu = 0.714) allocation failure;  [1:0xffffb77e3470] 9210 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 708.83 / 0.00 ms (average mu = 0.518, current mu = 0.533) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 50000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7f2b1470] 3469 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff7f2b1470] 3471 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff7f2b1470] 3640 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 50.16 / 0.00 ms (average mu = 0.971, current mu = 0.958) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7e8d6470] 6710 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 308.15 / 0.00 ms (average mu = 0.603, current mu = 0.000) last resort; GC in old space requested [1:0xffff7e8d6470] 7063 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 352.44 / 0.00 ms (average mu = 0.408, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9ab85470] 2547 ms: Scavenge 228.6 (232.5) -> 228.2 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.622, current mu = 0.612) allocation failure;  [1:0xffff9ab85470] 2549 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.69 / 0.00 ms (average mu = 0.622, current mu = 0.612) allocation failure;  [1:0xffff9ab85470] 2931 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 349.20 / 0.00 ms (average mu = 0.489, current mu = 0.369) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 50000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffad911470] 1677 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffad911470] 1680 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffad911470] 1740 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.00 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff940cb470] 2850 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 127.87 / 0.00 ms (average mu = 0.618, current mu = 0.000) last resort; GC in old space requested [1:0xffff940cb470] 2985 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 135.41 / 0.00 ms (average mu = 0.431, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9aab9470] 1970 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.67 / 0.00 ms (average mu = 0.584, current mu = 0.567) allocation failure;  [1:0xffff9aab9470] 1972 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.584, current mu = 0.567) allocation failure;  [1:0xffff9aab9470] 2353 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 347.55 / 0.00 ms (average mu = 0.413, current mu = 0.258) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 50000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff815cd470] 1643 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff815cd470] 1645 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff815cd470] 1705 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.05 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7ceb7470] 2503 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.87 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffff7ceb7470] 2608 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.09 / 0.00 ms (average mu = 0.473, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa01ab470] 1957 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.83 / 0.00 ms (average mu = 0.584, current mu = 0.569) allocation failure;  [1:0xffffa01ab470] 1959 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.87 / 0.00 ms (average mu = 0.584, current mu = 0.569) allocation failure;  [1:0xffffa01ab470] 2332 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 338.53 / 0.00 ms (average mu = 0.420, current mu = 0.269) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 50000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff864d6470] 1637 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff864d6470] 1639 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff864d6470] 1700 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.02 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9f860470] 2406 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 105.56 / 0.00 ms (average mu = 0.652, current mu = 0.000) last resort; GC in old space requested [1:0xffff9f860470] 2512 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.17 / 0.00 ms (average mu = 0.468, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9124a470] 1918 ms: Scavenge 228.4 (232.5) -> 228.1 (232.8) MB, 0.74 / 0.00 ms (average mu = 0.605, current mu = 0.590) allocation failure;  [1:0xffff9124a470] 1921 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.605, current mu = 0.590) allocation failure;  [1:0xffff9124a470] 2307 ms: Mark-Compact 342.4 (346.4) -> 266.5 (271.5) MB, 352.00 / 0.00 ms (average mu = 0.419, current mu = 0.255) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 50000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8f07f470] 1636 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff8f07f470] 1638 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff8f07f470] 1699 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.07 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8d166470] 2440 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 105.98 / 0.00 ms (average mu = 0.653, current mu = 0.000) last resort; GC in old space requested [1:0xffff8d166470] 2547 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.75 / 0.00 ms (average mu = 0.469, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff910f3470] 49623 ms: Mark-Compact (reduce) 508.9 (518.7) -> 508.8 (516.2) MB, 1328.24 / 0.00 ms (+ 6.4 ms in 1 steps since start of marking, biggest step 6.4 ms, walltime since start of marking 1340 ms) (average mu = 0.241, current mu = 0.453)[1:0xffff910f3470] 49689 ms: Scavenge 509.8 (516.2) -> 509.4 (519.2) MB, 63.20 / 0.00 ms (average mu = 0.241, current mu = 0.453) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 50000000 iterations, array_ type, array_ 50000000: 7.610s
0.5 cpu, 1024 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff87fb7470] 14952 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 689.67 / 0.00 ms (average mu = 0.641, current mu = 0.000) last resort; GC in old space requested [1:0xffff87fb7470] 15650 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 698.21 / 0.00 ms (average mu = 0.445, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb3156470] 10417 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.26 / 0.00 ms (average mu = 0.267, current mu = 0.324) allocation failure;  [1:0xffffb3156470] 10444 ms: Scavenge 508.7 (517.2) -> 508.1 (518.0) MB, 2.86 / 0.00 ms (average mu = 0.267, current mu = 0.324) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 50000000 iterations, array_ type, array_ 50000000: 3.662s
1.0 cpu, 1024 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff993b1470] 6243 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 267.23 / 0.00 ms (average mu = 0.650, current mu = 0.000) last resort; GC in old space requested [1:0xffff993b1470] 6515 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 272.11 / 0.00 ms (average mu = 0.460, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff94d5a470] 6968 ms: Scavenge 508.5 (517.0) -> 507.9 (517.5) MB, 2.35 / 0.00 ms (average mu = 0.162, current mu = 0.143) allocation failure;  [1:0xffff94d5a470] 6974 ms: Scavenge 509.0 (517.5) -> 508.4 (518.2) MB, 2.64 / 0.00 ms (average mu = 0.162, current mu = 0.143) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 50000000 iterations, array_ type, array_ 50000000: 3.593s
2.0 cpu, 1024 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff88c82470] 5449 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 206.49 / 0.00 ms (average mu = 0.680, current mu = 0.000) last resort; GC in old space requested [1:0xffff88c82470] 5658 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 208.94 / 0.00 ms (average mu = 0.500, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9e49a470] 6806 ms: Scavenge 508.2 (516.7) -> 507.6 (517.2) MB, 2.61 / 0.00 ms (average mu = 0.144, current mu = 0.108) allocation failure;  [1:0xffff9e49a470] 6811 ms: Scavenge 508.7 (517.2) -> 508.1 (518.0) MB, 2.54 / 0.00 ms (average mu = 0.144, current mu = 0.108) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 50000000 iterations, array_ type, array_ 50000000: 3.571s
3.0 cpu, 1024 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbc1c1470] 5351 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 209.28 / 0.00 ms (average mu = 0.675, current mu = 0.000) last resort; GC in old space requested [1:0xffffbc1c1470] 5560 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 209.20 / 0.00 ms (average mu = 0.494, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa93b7470] 6857 ms: Scavenge 508.0 (516.5) -> 507.4 (517.0) MB, 2.26 / 0.00 ms (average mu = 0.139, current mu = 0.104) allocation failure;  [1:0xffffa93b7470] 6863 ms: Scavenge 508.5 (517.0) -> 507.9 (517.7) MB, 2.54 / 0.00 ms (average mu = 0.139, current mu = 0.104) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 50000000 iterations, array_ type, array_ 50000000: 3.569s
4.0 cpu, 1024 ram, 50000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3e9e470] 5331 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 225.56 / 0.00 ms (average mu = 0.668, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3e9e470] 5538 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 207.16 / 0.00 ms (average mu = 0.491, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa39da470] 99743 ms: Mark-Compact (reduce) 1021.0 (1035.7) -> 1020.9 (1033.2) MB, 10011.96 / 0.00 ms (+ 2.5 ms in 1 steps since start of marking, biggest step 2.5 ms, walltime since start of marking 10019 ms) (average mu = 0.209, current mu = [1:0xffffa39da470] 99937 ms: Scavenge 1021.9 (1033.2) -> 1021.5 (1036.2) MB, 105.64 / 0.00 ms (average mu = 0.209, current mu = 0.150) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 50000000 iterations, array_ type, array_ 50000000: 7.769s
0.5 cpu, 2048 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7fcab470] 20218 ms: Scavenge 1013.4 (1028.5) -> 1011.9 (1029.2) MB, 4.93 / 0.00 ms (average mu = 0.241, current mu = 0.204) allocation failure;  [1:0xffff7fcab470] 20231 ms: Scavenge 1014.0 (1029.2) -> 1012.9 (1031.0) MB, 5.44 / 0.00 ms (average mu = 0.241, current mu = 0.204) allocation failure;  [1:0xffff7fcab470] 20243 ms: Scavenge 1015.6 (1031.0) -> 1014.3 (1040.0) MB, 4.62 / 0.00 ms (average mu = 0.241, current mu = 0.204) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 50000000 iterations, array_ type, array_ 50000000: 3.639s
1.0 cpu, 2048 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffba928470] 13769 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.74 / 0.00 ms (average mu = 0.170, current mu = 0.115) allocation failure;  [1:0xffffba928470] 13775 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 2.92 / 0.00 ms (average mu = 0.170, current mu = 0.115) allocation failure;  [1:0xffffba928470] 13781 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.86 / 0.00 ms (average mu = 0.170, current mu = 0.115) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 50000000 iterations, array_ type, array_ 50000000: 3.524s
2.0 cpu, 2048 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffafa8a470] 12515 ms: Scavenge 1016.0 (1029.2) -> 1015.4 (1029.7) MB, 2.68 / 0.00 ms (average mu = 0.156, current mu = 0.110) allocation failure;  [1:0xffffafa8a470] 12522 ms: Scavenge 1016.5 (1029.7) -> 1015.9 (1030.5) MB, 3.21 / 0.00 ms (average mu = 0.156, current mu = 0.110) allocation failure;  [1:0xffffafa8a470] 12528 ms: Scavenge 1017.2 (1030.5) -> 1016.6 (1035.2) MB, 3.20 / 0.00 ms (average mu = 0.156, current mu = 0.110) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 50000000 iterations, array_ type, array_ 50000000: 3.568s
3.0 cpu, 2048 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 50000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa4620470] 12531 ms: Scavenge 1016.1 (1029.5) -> 1015.5 (1030.0) MB, 2.79 / 0.00 ms (average mu = 0.162, current mu = 0.122) allocation failure;  [1:0xffffa4620470] 12537 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.96 / 0.00 ms (average mu = 0.162, current mu = 0.122) allocation failure;  [1:0xffffa4620470] 12543 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.81 / 0.00 ms (average mu = 0.162, current mu = 0.122) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 50000000 iterations, array_ type, array_ 50000000: 3.553s
4.0 cpu, 2048 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 50000000 iterations, object type, object 50000000: 33.586s
0.5 cpu, 4096 ram, 50000000 iterations, array_ type, array_ 50000000: 7.523s
0.5 cpu, 4096 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 50000000 iterations, object type, object 50000000: 10.754s
1.0 cpu, 4096 ram, 50000000 iterations, array_ type, array_ 50000000: 3.563s
1.0 cpu, 4096 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 50000000 iterations, object type, object 50000000: 8.075s
2.0 cpu, 4096 ram, 50000000 iterations, array_ type, array_ 50000000: 3.526s
2.0 cpu, 4096 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 50000000 iterations, object type, object 50000000: 7.863s
3.0 cpu, 4096 ram, 50000000 iterations, array_ type, array_ 50000000: 3.535s
3.0 cpu, 4096 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 50000000 iterations, object type, object 50000000: 7.856s
4.0 cpu, 4096 ram, 50000000 iterations, array_ type, array_ 50000000: 3.526s
4.0 cpu, 4096 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 50000000 iterations, object type, object 50000000: 33.807s
0.5 cpu, 8192 ram, 50000000 iterations, array_ type, array_ 50000000: 7.593s
0.5 cpu, 8192 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 50000000 iterations, object type, object 50000000: 10.544s
1.0 cpu, 8192 ram, 50000000 iterations, array_ type, array_ 50000000: 3.592s
1.0 cpu, 8192 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 50000000 iterations, object type, object 50000000: 8.006s
2.0 cpu, 8192 ram, 50000000 iterations, array_ type, array_ 50000000: 3.540s
2.0 cpu, 8192 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 50000000 iterations, object type, object 50000000: 7.944s
3.0 cpu, 8192 ram, 50000000 iterations, array_ type, array_ 50000000: 3.584s
3.0 cpu, 8192 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 50000000 iterations, object type, object 50000000: 7.954s
4.0 cpu, 8192 ram, 50000000 iterations, array_ type, array_ 50000000: 3.567s
4.0 cpu, 8192 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 50000000 iterations, object type, object 50000000: 20.812s
0.5 cpu, 16384 ram, 50000000 iterations, array_ type, array_ 50000000: 7.596s
0.5 cpu, 16384 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 50000000 iterations, object type, object 50000000: 7.875s
1.0 cpu, 16384 ram, 50000000 iterations, array_ type, array_ 50000000: 3.587s
1.0 cpu, 16384 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 50000000 iterations, object type, object 50000000: 6.837s
2.0 cpu, 16384 ram, 50000000 iterations, array_ type, array_ 50000000: 3.544s
2.0 cpu, 16384 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 50000000 iterations, object type, object 50000000: 6.795s
3.0 cpu, 16384 ram, 50000000 iterations, array_ type, array_ 50000000: 3.537s
3.0 cpu, 16384 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 50000000 iterations, object type, object 50000000: 6.738s
4.0 cpu, 16384 ram, 50000000 iterations, array_ type, array_ 50000000: 3.526s
4.0 cpu, 16384 ram, 50000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 60000000 iterations, object type,
0.5 cpu, 128 ram, 60000000 iterations, array_ type,
0.5 cpu, 128 ram, 60000000 iterations, map___ type,
1.0 cpu, 128 ram, 60000000 iterations, object type,
1.0 cpu, 128 ram, 60000000 iterations, array_ type,
1.0 cpu, 128 ram, 60000000 iterations, map___ type,
2.0 cpu, 128 ram, 60000000 iterations, object type,
2.0 cpu, 128 ram, 60000000 iterations, array_ type,
2.0 cpu, 128 ram, 60000000 iterations, map___ type,
3.0 cpu, 128 ram, 60000000 iterations, object type,
3.0 cpu, 128 ram, 60000000 iterations, array_ type,
3.0 cpu, 128 ram, 60000000 iterations, map___ type,
4.0 cpu, 128 ram, 60000000 iterations, object type,
4.0 cpu, 128 ram, 60000000 iterations, array_ type,
4.0 cpu, 128 ram, 60000000 iterations, map___ type,
0.5 cpu, 256 ram, 60000000 iterations, object type,
0.5 cpu, 256 ram, 60000000 iterations, array_ type,
0.5 cpu, 256 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff875ec470] 6604 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 298.27 / 0.00 ms (average mu = 0.609, current mu = 0.000) last resort; GC in old space requested [1:0xffff875ec470] 6910 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 305.81 / 0.00 ms (average mu = 0.431, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 60000000 iterations, object type,
1.0 cpu, 256 ram, 60000000 iterations, array_ type,
1.0 cpu, 256 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9285c470] 2771 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 137.69 / 0.00 ms (average mu = 0.612, current mu = 0.000) last resort; GC in old space requested [1:0xffff9285c470] 2904 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 133.07 / 0.00 ms (average mu = 0.431, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 60000000 iterations, object type,
2.0 cpu, 256 ram, 60000000 iterations, array_ type,
2.0 cpu, 256 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbb779470] 2488 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.24 / 0.00 ms (average mu = 0.652, current mu = 0.000) last resort; GC in old space requested [1:0xffffbb779470] 2593 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.59 / 0.00 ms (average mu = 0.473, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 60000000 iterations, object type,
3.0 cpu, 256 ram, 60000000 iterations, array_ type,
3.0 cpu, 256 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7e3f0470] 2474 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 116.10 / 0.00 ms (average mu = 0.626, current mu = 0.000) last resort; GC in old space requested [1:0xffff7e3f0470] 2579 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.64 / 0.00 ms (average mu = 0.457, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 60000000 iterations, object type,
4.0 cpu, 256 ram, 60000000 iterations, array_ type,
4.0 cpu, 256 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb6624470] 2459 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 110.51 / 0.00 ms (average mu = 0.642, current mu = 0.000) last resort; GC in old space requested [1:0xffffb6624470] 2566 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.04 / 0.00 ms (average mu = 0.463, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc7a5470] 10021 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 1.38 / 0.00 ms (average mu = 0.286, current mu = 0.195) allocation failure;  [1:0xffffbc7a5470] 10025 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 1.10 / 0.00 ms (average mu = 0.286, current mu = 0.195) allocation failure;  [1:0xffffbc7a5470] 10902 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 786.15 / 0.00 ms (average mu = 0.426, current mu = 0.609) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff90542470] 3535 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff90542470] 3537 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff90542470] 3696 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.37 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb10a3470] 7316 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 375.89 / 0.00 ms (average mu = 0.599, current mu = 0.000) last resort; GC in old space requested [1:0xffffb10a3470] 7706 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 390.76 / 0.00 ms (average mu = 0.407, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff82390470] 3425 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.90 / 0.00 ms (average mu = 0.509, current mu = 0.446) allocation failure;  [1:0xffff82390470] 3428 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.90 / 0.00 ms (average mu = 0.509, current mu = 0.446) allocation failure;  [1:0xffff82390470] 3926 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 448.13 / 0.00 ms (average mu = 0.449, current mu = 0.385) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb242d470] 2187 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb242d470] 2190 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb242d470] 2268 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.31 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa039f470] 3554 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 175.77 / 0.00 ms (average mu = 0.621, current mu = 0.000) last resort; GC in old space requested [1:0xffffa039f470] 3725 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 170.78 / 0.00 ms (average mu = 0.438, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff81b6f470] 2510 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.89 / 0.00 ms (average mu = 0.606, current mu = 0.607) allocation failure;  [1:0xffff81b6f470] 2514 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.93 / 0.00 ms (average mu = 0.606, current mu = 0.607) allocation failure;  [1:0xffff81b6f470] 2989 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 433.61 / 0.00 ms (average mu = 0.433, current mu = 0.281) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb216a470] 2102 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb216a470] 2105 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb216a470] 2190 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.30 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbca52470] 3194 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 136.16 / 0.00 ms (average mu = 0.669, current mu = 0.000) last resort; GC in old space requested [1:0xffffbca52470] 3328 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 134.29 / 0.00 ms (average mu = 0.491, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa3f51470] 2478 ms: Scavenge 228.4 (232.5) -> 228.1 (232.8) MB, 0.92 / 0.00 ms (average mu = 0.598, current mu = 0.593) allocation failure;  [1:0xffffa3f51470] 2481 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.92 / 0.00 ms (average mu = 0.598, current mu = 0.593) allocation failure;  [1:0xffffa3f51470] 2968 ms: Mark-Compact 342.4 (346.4) -> 266.5 (271.5) MB, 445.48 / 0.00 ms (average mu = 0.417, current mu = 0.253) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff97cb0470] 2102 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff97cb0470] 2104 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff97cb0470] 2188 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.29 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb0fdc470] 3357 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 136.24 / 0.00 ms (average mu = 0.689, current mu = 0.000) last resort; GC in old space requested [1:0xffffb0fdc470] 3489 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 132.02 / 0.00 ms (average mu = 0.515, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8e406470] 2471 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.88 / 0.00 ms (average mu = 0.607, current mu = 0.597) allocation failure;  [1:0xffff8e406470] 2474 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.89 / 0.00 ms (average mu = 0.607, current mu = 0.597) allocation failure;  [1:0xffff8e406470] 2961 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 445.39 / 0.00 ms (average mu = 0.422, current mu = 0.258) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9a4bc470] 2111 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9a4bc470] 2114 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9a4bc470] 2196 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.27 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa1753470] 2927 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 144.42 / 0.00 ms (average mu = 0.633, current mu = 0.000) last resort; GC in old space requested [1:0xffffa1753470] 3061 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 134.19 / 0.00 ms (average mu = 0.454, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb380a470] 35115 ms: Scavenge 503.3 (512.0) -> 502.6 (512.2) MB, 2.51 / 0.00 ms (average mu = 0.364, current mu = 0.533) allocation failure;  [1:0xffffb380a470] 35204 ms: Scavenge 503.8 (512.2) -> 503.2 (512.7) MB, 86.41 / 0.00 ms (average mu = 0.364, current mu = 0.533) allocation failure;  [1:0xffffb380a470] 35217 ms: Scavenge 504.5 (512.7) -> 503.8 (517.5) MB, 8.16 / 0.00 ms (average mu = 0.364, current mu = 0.533) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8db66470] 7789 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.12 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff8db66470] 7797 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.20 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff8db66470] 8103 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.21 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff923dc470] 14703 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 674.97 / 0.00 ms (average mu = 0.625, current mu = 0.000) last resort; GC in old space requested [1:0xffff923dc470] 15307 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 603.39 / 0.00 ms (average mu = 0.449, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff965f0470] 10538 ms: Scavenge 505.7 (514.0) -> 505.0 (514.5) MB, 2.35 / 0.00 ms (average mu = 0.228, current mu = 0.194) allocation failure;  [1:0xffff965f0470] 10544 ms: Scavenge 506.2 (514.5) -> 505.6 (515.2) MB, 2.67 / 0.00 ms (average mu = 0.228, current mu = 0.194) allocation failure;  [1:0xffff965f0470] 10605 ms: Scavenge 506.9 (515.2) -> 506.3 (520.0) MB, 57.92 / 0.00 ms (average mu = 0.228, current mu = 0.194) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8466e470] 3625 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.15 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff8466e470] 3634 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff8466e470] 3774 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.10 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbbf4d470] 6396 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 271.35 / 0.00 ms (average mu = 0.652, current mu = 0.000) last resort; GC in old space requested [1:0xffffbbf4d470] 6666 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 270.14 / 0.00 ms (average mu = 0.464, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab882470] 7218 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.26 / 0.00 ms (average mu = 0.167, current mu = 0.162) allocation failure;  [1:0xffffab882470] 7224 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 2.35 / 0.00 ms (average mu = 0.167, current mu = 0.162) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9be4c470] 3540 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9be4c470] 3549 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9be4c470] 3687 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.19 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9634f470] 5477 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 228.68 / 0.00 ms (average mu = 0.667, current mu = 0.000) last resort; GC in old space requested [1:0xffff9634f470] 5714 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 236.89 / 0.00 ms (average mu = 0.476, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa750a470] 6927 ms: Scavenge 507.8 (516.2) -> 507.1 (516.7) MB, 2.38 / 0.00 ms (average mu = 0.146, current mu = 0.111) allocation failure;  [1:0xffffa750a470] 6932 ms: Scavenge 508.3 (516.7) -> 507.7 (517.5) MB, 2.51 / 0.00 ms (average mu = 0.146, current mu = 0.111) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa28c8470] 3550 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa28c8470] 3558 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa28c8470] 3695 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff936a5470] 5411 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 220.05 / 0.00 ms (average mu = 0.666, current mu = 0.000) last resort; GC in old space requested [1:0xffff936a5470] 5607 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 196.41 / 0.00 ms (average mu = 0.498, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbbec5470] 6965 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.24 / 0.00 ms (average mu = 0.139, current mu = 0.107) allocation failure;  [1:0xffffbbec5470] 6970 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 2.42 / 0.00 ms (average mu = 0.139, current mu = 0.107) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 60000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa90fc470] 3553 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa90fc470] 3562 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa90fc470] 3701 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.26 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 60000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa7eb6470] 5379 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 206.83 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffffa7eb6470] 5588 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 208.45 / 0.00 ms (average mu = 0.500, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9f1d8470] 66225 ms: Scavenge 1013.4 (1028.7) -> 1011.9 (1029.2) MB, 98.02 / 0.00 ms (average mu = 0.217, current mu = 0.189) allocation failure;  [1:0xffff9f1d8470] 66322 ms: Scavenge 1014.1 (1029.2) -> 1012.9 (1031.0) MB, 8.74 / 0.00 ms (average mu = 0.217, current mu = 0.189) allocation failure;  [1:0xffff9f1d8470] 66525 ms: Scavenge 1015.7 (1031.0) -> 1014.3 (1040.0) MB, 6.78 / 0.00 ms (average mu = 0.217, current mu = 0.189) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 60000000 iterations, array_ type, array_ 60000000: 9.357s
0.5 cpu, 2048 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaa23c470] 18708 ms: Scavenge 1016.2 (1029.5) -> 1015.6 (1030.0) MB, 2.62 / 0.00 ms (average mu = 0.275, current mu = 0.310) allocation failure;  [1:0xffffaa23c470] 18714 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 2.84 / 0.00 ms (average mu = 0.275, current mu = 0.310) allocation failure;  [1:0xffffaa23c470] 18721 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.81 / 0.00 ms (average mu = 0.275, current mu = 0.310) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 60000000 iterations, array_ type, array_ 60000000: 4.500s
1.0 cpu, 2048 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa26f3470] 13625 ms: Scavenge 1016.2 (1029.5) -> 1015.6 (1030.0) MB, 2.71 / 0.00 ms (average mu = 0.192, current mu = 0.149) allocation failure;  [1:0xffffa26f3470] 13631 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.00 / 0.00 ms (average mu = 0.192, current mu = 0.149) allocation failure;  [1:0xffffa26f3470] 13637 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.83 / 0.00 ms (average mu = 0.192, current mu = 0.149) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 60000000 iterations, array_ type, array_ 60000000: 4.421s
2.0 cpu, 2048 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa27bd470] 13062 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.82 / 0.00 ms (average mu = 0.154, current mu = 0.114) allocation failure;  [1:0xffffa27bd470] 13068 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.02 / 0.00 ms (average mu = 0.154, current mu = 0.114) allocation failure;  [1:0xffffa27bd470] 13074 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.78 / 0.00 ms (average mu = 0.154, current mu = 0.114) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 60000000 iterations, array_ type, array_ 60000000: 4.420s
3.0 cpu, 2048 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 60000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8a731470] 13111 ms: Scavenge 1016.3 (1029.5) -> 1015.6 (1030.0) MB, 2.87 / 0.00 ms (average mu = 0.148, current mu = 0.107) allocation failure;  [1:0xffff8a731470] 13117 ms: Scavenge 1016.8 (1030.0) -> 1016.1 (1030.7) MB, 3.00 / 0.00 ms (average mu = 0.148, current mu = 0.107) allocation failure;  [1:0xffff8a731470] 13123 ms: Scavenge 1017.5 (1030.7) -> 1016.8 (1035.2) MB, 2.88 / 0.00 ms (average mu = 0.148, current mu = 0.107) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 60000000 iterations, array_ type, array_ 60000000: 4.371s
4.0 cpu, 2048 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 60000000 iterations, object type, object 60000000: 39.770s
0.5 cpu, 4096 ram, 60000000 iterations, array_ type, array_ 60000000: 9.493s
0.5 cpu, 4096 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 60000000 iterations, object type, object 60000000: 14.254s
1.0 cpu, 4096 ram, 60000000 iterations, array_ type, array_ 60000000: 4.458s
1.0 cpu, 4096 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 60000000 iterations, object type, object 60000000: 11.097s
2.0 cpu, 4096 ram, 60000000 iterations, array_ type, array_ 60000000: 4.417s
2.0 cpu, 4096 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 60000000 iterations, object type, object 60000000: 10.808s
3.0 cpu, 4096 ram, 60000000 iterations, array_ type, array_ 60000000: 4.355s
3.0 cpu, 4096 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 60000000 iterations, object type, object 60000000: 10.793s
4.0 cpu, 4096 ram, 60000000 iterations, array_ type, array_ 60000000: 4.355s
4.0 cpu, 4096 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 60000000 iterations, object type, object 60000000: 40.363s
0.5 cpu, 8192 ram, 60000000 iterations, array_ type, array_ 60000000: 9.399s
0.5 cpu, 8192 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 60000000 iterations, object type, object 60000000: 12.531s
1.0 cpu, 8192 ram, 60000000 iterations, array_ type, array_ 60000000: 4.457s
1.0 cpu, 8192 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 60000000 iterations, object type, object 60000000: 11.070s
2.0 cpu, 8192 ram, 60000000 iterations, array_ type, array_ 60000000: 4.367s
2.0 cpu, 8192 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 60000000 iterations, object type, object 60000000: 10.927s
3.0 cpu, 8192 ram, 60000000 iterations, array_ type, array_ 60000000: 4.344s
3.0 cpu, 8192 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 60000000 iterations, object type, object 60000000: 12.684s
4.0 cpu, 8192 ram, 60000000 iterations, array_ type, array_ 60000000: 4.419s
4.0 cpu, 8192 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 60000000 iterations, object type, object 60000000: 19.602s
0.5 cpu, 16384 ram, 60000000 iterations, array_ type, array_ 60000000: 9.419s
0.5 cpu, 16384 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 60000000 iterations, object type, object 60000000: 9.560s
1.0 cpu, 16384 ram, 60000000 iterations, array_ type, array_ 60000000: 4.485s
1.0 cpu, 16384 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 60000000 iterations, object type, object 60000000: 8.294s
2.0 cpu, 16384 ram, 60000000 iterations, array_ type, array_ 60000000: 4.327s
2.0 cpu, 16384 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 60000000 iterations, object type, object 60000000: 8.435s
3.0 cpu, 16384 ram, 60000000 iterations, array_ type, array_ 60000000: 4.358s
3.0 cpu, 16384 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 60000000 iterations, object type, object 60000000: 8.206s
4.0 cpu, 16384 ram, 60000000 iterations, array_ type, array_ 60000000: 4.325s
4.0 cpu, 16384 ram, 60000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 70000000 iterations, object type,
0.5 cpu, 128 ram, 70000000 iterations, array_ type,
0.5 cpu, 128 ram, 70000000 iterations, map___ type,
1.0 cpu, 128 ram, 70000000 iterations, object type,
1.0 cpu, 128 ram, 70000000 iterations, array_ type,
1.0 cpu, 128 ram, 70000000 iterations, map___ type,
2.0 cpu, 128 ram, 70000000 iterations, object type,
2.0 cpu, 128 ram, 70000000 iterations, array_ type,
2.0 cpu, 128 ram, 70000000 iterations, map___ type,
3.0 cpu, 128 ram, 70000000 iterations, object type,
3.0 cpu, 128 ram, 70000000 iterations, array_ type,
3.0 cpu, 128 ram, 70000000 iterations, map___ type,
4.0 cpu, 128 ram, 70000000 iterations, object type,
4.0 cpu, 128 ram, 70000000 iterations, array_ type,
4.0 cpu, 128 ram, 70000000 iterations, map___ type,
0.5 cpu, 256 ram, 70000000 iterations, object type,
0.5 cpu, 256 ram, 70000000 iterations, array_ type,
0.5 cpu, 256 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff97387470] 6214 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 300.87 / 0.00 ms (average mu = 0.599, current mu = 0.000) last resort; GC in old space requested [1:0xffff97387470] 6586 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 371.65 / 0.00 ms (average mu = 0.389, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 70000000 iterations, object type,
1.0 cpu, 256 ram, 70000000 iterations, array_ type,
1.0 cpu, 256 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbaa7f470] 2938 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 149.04 / 0.00 ms (average mu = 0.607, current mu = 0.000) last resort; GC in old space requested [1:0xffffbaa7f470] 3077 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 138.69 / 0.00 ms (average mu = 0.428, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 70000000 iterations, object type,
2.0 cpu, 256 ram, 70000000 iterations, array_ type,
2.0 cpu, 256 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9aa47470] 2572 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 109.79 / 0.00 ms (average mu = 0.648, current mu = 0.000) last resort; GC in old space requested [1:0xffff9aa47470] 2689 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 117.20 / 0.00 ms (average mu = 0.458, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 70000000 iterations, object type,
3.0 cpu, 256 ram, 70000000 iterations, array_ type,
3.0 cpu, 256 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8d976470] 2521 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.22 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffff8d976470] 2627 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.85 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 70000000 iterations, object type,
4.0 cpu, 256 ram, 70000000 iterations, array_ type,
4.0 cpu, 256 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff89339470] 2571 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.27 / 0.00 ms (average mu = 0.654, current mu = 0.000) last resort; GC in old space requested [1:0xffff89339470] 2678 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.21 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab026470] 8304 ms: Scavenge 228.5 (232.5) -> 228.2 (232.8) MB, 0.90 / 0.00 ms (average mu = 0.425, current mu = 0.392) allocation failure;  [1:0xffffab026470] 8307 ms: Scavenge 228.8 (232.8) -> 228.5 (233.3) MB, 1.02 / 0.00 ms (average mu = 0.425, current mu = 0.392) allocation failure;  [1:0xffffab026470] 9117 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 719.31 / 0.00 ms (average mu = 0.440, current mu = 0.462) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff852bd470] 3526 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff852bd470] 3528 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff852bd470] 3644 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 0.97 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa3cf2470] 6245 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 302.88 / 0.00 ms (average mu = 0.605, current mu = 0.000) last resort; GC in old space requested [1:0xffffa3cf2470] 6552 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 306.16 / 0.00 ms (average mu = 0.421, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff968ee470] 2786 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.85 / 0.00 ms (average mu = 0.576, current mu = 0.625) allocation failure;  [1:0xffff968ee470] 2789 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.78 / 0.00 ms (average mu = 0.576, current mu = 0.625) allocation failure;  [1:0xffff968ee470] 3178 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 354.68 / 0.00 ms (average mu = 0.476, current mu = 0.376) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb2bb8470] 1678 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb2bb8470] 1680 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb2bb8470] 1745 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.17 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8e63f470] 2925 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 137.16 / 0.00 ms (average mu = 0.620, current mu = 0.000) last resort; GC in old space requested [1:0xffff8e63f470] 3065 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 139.46 / 0.00 ms (average mu = 0.433, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa88e1470] 2042 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.75 / 0.00 ms (average mu = 0.574, current mu = 0.556) allocation failure;  [1:0xffffa88e1470] 2044 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.74 / 0.00 ms (average mu = 0.574, current mu = 0.556) allocation failure;  [1:0xffffa88e1470] 2430 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 351.32 / 0.00 ms (average mu = 0.411, current mu = 0.259) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9eb38470] 1630 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9eb38470] 1632 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9eb38470] 1695 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.10 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff91e57470] 2498 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.44 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffff91e57470] 2613 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 114.72 / 0.00 ms (average mu = 0.462, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb212f470] 2022 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.585, current mu = 0.567) allocation failure;  [1:0xffffb212f470] 2024 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.69 / 0.00 ms (average mu = 0.585, current mu = 0.567) allocation failure;  [1:0xffffb212f470] 2427 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 368.82 / 0.00 ms (average mu = 0.405, current mu = 0.247) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9a3ae470] 1640 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9a3ae470] 1642 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.07 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9a3ae470] 1704 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.06 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff91e29470] 2493 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.13 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffff91e29470] 2600 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.35 / 0.00 ms (average mu = 0.476, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb430d470] 1995 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.75 / 0.00 ms (average mu = 0.583, current mu = 0.574) allocation failure;  [1:0xffffb430d470] 1998 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.82 / 0.00 ms (average mu = 0.583, current mu = 0.574) allocation failure;  [1:0xffffb430d470] 2383 ms: Mark-Compact 342.6 (346.6) -> 266.6 (271.8) MB, 351.36 / 0.00 ms (average mu = 0.415, current mu = 0.261) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8842c470] 1649 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8842c470] 1651 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8842c470] 1715 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.15 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff96d90470] 2504 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.13 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffff96d90470] 2610 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.13 / 0.00 ms (average mu = 0.471, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7f47c470] 38139 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.98 / 0.00 ms (average mu = 0.196, current mu = 0.127) allocation failure;  [1:0xffff7f47c470] 38232 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 88.10 / 0.00 ms (average mu = 0.196, current mu = 0.127) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff99a55470] 7817 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.14 / 0.00 ms (average mu = 0.990, current mu = 0.999) allocation failure;  [1:0xffff99a55470] 7826 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.990, current mu = 0.999) allocation failure;  [1:0xffff99a55470] 8128 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.12 / 0.00 ms (average mu = 0.996, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9b762470] 14499 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 980.37 / 0.00 ms (average mu = 0.568, current mu = 0.000) last resort; GC in old space requested [1:0xffff9b762470] 15187 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 688.13 / 0.00 ms (average mu = 0.404, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8699f470] 12085 ms: Scavenge 509.0 (517.5) -> 508.4 (518.0) MB, 61.41 / 0.00 ms (average mu = 0.211, current mu = 0.193) allocation failure;  [1:0xffff8699f470] 12093 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 3.29 / 0.00 ms (average mu = 0.211, current mu = 0.193) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb6a5c470] 3789 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffb6a5c470] 3797 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffb6a5c470] 3938 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa1546470] 6342 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 288.01 / 0.00 ms (average mu = 0.636, current mu = 0.000) last resort; GC in old space requested [1:0xffffa1546470] 6621 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 278.38 / 0.00 ms (average mu = 0.451, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8052d470] 7545 ms: Scavenge 509.0 (517.5) -> 508.3 (518.0) MB, 2.41 / 0.00 ms (average mu = 0.172, current mu = 0.158) allocation failure;  [1:0xffff8052d470] 7551 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 2.55 / 0.00 ms (average mu = 0.172, current mu = 0.158) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa240f470] 3617 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa240f470] 3625 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa240f470] 3786 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.29 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa53b9470] 5567 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 209.68 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffffa53b9470] 5777 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 210.19 / 0.00 ms (average mu = 0.503, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9329e470] 7133 ms: Scavenge 508.0 (516.5) -> 507.3 (517.0) MB, 2.56 / 0.00 ms (average mu = 0.136, current mu = 0.102) allocation failure;  [1:0xffff9329e470] 7138 ms: Scavenge 508.5 (517.0) -> 507.9 (517.7) MB, 2.58 / 0.00 ms (average mu = 0.136, current mu = 0.102) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8d7f5470] 3595 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff8d7f5470] 3603 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff8d7f5470] 3744 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.17 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffaccb6470] 5521 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 213.20 / 0.00 ms (average mu = 0.670, current mu = 0.000) last resort; GC in old space requested [1:0xffffaccb6470] 5739 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 217.89 / 0.00 ms (average mu = 0.489, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff80c32470] 7117 ms: Scavenge 508.4 (516.7) -> 507.7 (517.2) MB, 2.19 / 0.00 ms (average mu = 0.138, current mu = 0.107) allocation failure;  [1:0xffff80c32470] 7123 ms: Scavenge 508.8 (517.2) -> 508.2 (518.0) MB, 2.57 / 0.00 ms (average mu = 0.138, current mu = 0.107) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 70000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff87f8b470] 3569 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff87f8b470] 3577 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff87f8b470] 3718 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.22 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 70000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff94a2d470] 5476 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 211.49 / 0.00 ms (average mu = 0.681, current mu = 0.000) last resort; GC in old space requested [1:0xffff94a2d470] 5687 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 211.69 / 0.00 ms (average mu = 0.500, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9b82c470] 66012 ms: Scavenge 1013.3 (1028.5) -> 1011.9 (1029.2) MB, 12.48 / 0.00 ms (average mu = 0.216, current mu = 0.174) allocation failure;  [1:0xffff9b82c470] 66216 ms: Scavenge 1014.0 (1029.2) -> 1012.9 (1031.0) MB, 99.87 / 0.00 ms (average mu = 0.216, current mu = 0.174) allocation failure;  [1:0xffff9b82c470] 66323 ms: Scavenge 1015.6 (1031.0) -> 1014.3 (1040.0) MB, 5.86 / 0.00 ms (average mu = 0.216, current mu = 0.174) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 70000000 iterations, array_ type, array_ 70000000: 10.838s
0.5 cpu, 2048 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7e397470] 18925 ms: Scavenge 1013.4 (1028.7) -> 1011.9 (1029.2) MB, 4.33 / 0.00 ms (average mu = 0.301, current mu = 0.345) allocation failure;  [1:0xffff7e397470] 19004 ms: Scavenge 1014.1 (1029.2) -> 1012.9 (1031.0) MB, 5.56 / 0.00 ms (average mu = 0.301, current mu = 0.345) allocation failure;  [1:0xffff7e397470] 19094 ms: Scavenge 1015.7 (1031.0) -> 1014.3 (1040.0) MB, 82.64 / 0.00 ms (average mu = 0.301, current mu = 0.345) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 70000000 iterations, array_ type, array_ 70000000: 5.217s
1.0 cpu, 2048 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb2f4c470] 13400 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.92 / 0.00 ms (average mu = 0.185, current mu = 0.145) allocation failure;  [1:0xffffb2f4c470] 13406 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 2.81 / 0.00 ms (average mu = 0.185, current mu = 0.145) allocation failure;  [1:0xffffb2f4c470] 13413 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 3.19 / 0.00 ms (average mu = 0.185, current mu = 0.145) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 70000000 iterations, array_ type, array_ 70000000: 5.020s
2.0 cpu, 2048 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab463470] 12843 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.72 / 0.00 ms (average mu = 0.151, current mu = 0.111) allocation failure;  [1:0xffffab463470] 12850 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.34 / 0.00 ms (average mu = 0.151, current mu = 0.111) allocation failure;  [1:0xffffab463470] 12857 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 3.04 / 0.00 ms (average mu = 0.151, current mu = 0.111) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 70000000 iterations, array_ type, array_ 70000000: 5.002s
3.0 cpu, 2048 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 70000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff87438470] 12939 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.82 / 0.00 ms (average mu = 0.152, current mu = 0.112) allocation failure;  [1:0xffff87438470] 12945 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 2.96 / 0.00 ms (average mu = 0.152, current mu = 0.112) allocation failure;  [1:0xffff87438470] 12951 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.94 / 0.00 ms (average mu = 0.152, current mu = 0.112) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 70000000 iterations, array_ type, array_ 70000000: 5.001s
4.0 cpu, 2048 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 70000000 iterations, object type, object 70000000: 43.097s
0.5 cpu, 4096 ram, 70000000 iterations, array_ type, array_ 70000000: 10.786s
0.5 cpu, 4096 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 70000000 iterations, object type, object 70000000: 14.800s
1.0 cpu, 4096 ram, 70000000 iterations, array_ type, array_ 70000000: 5.104s
1.0 cpu, 4096 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 70000000 iterations, object type, object 70000000: 12.219s
2.0 cpu, 4096 ram, 70000000 iterations, array_ type, array_ 70000000: 5.004s
2.0 cpu, 4096 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 70000000 iterations, object type, object 70000000: 12.101s
3.0 cpu, 4096 ram, 70000000 iterations, array_ type, array_ 70000000: 4.959s
3.0 cpu, 4096 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 70000000 iterations, object type, object 70000000: 11.955s
4.0 cpu, 4096 ram, 70000000 iterations, array_ type, array_ 70000000: 5.050s
4.0 cpu, 4096 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 70000000 iterations, object type, object 70000000: 50.490s
0.5 cpu, 8192 ram, 70000000 iterations, array_ type, array_ 70000000: 10.912s
0.5 cpu, 8192 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 70000000 iterations, object type, object 70000000: 17.121s
1.0 cpu, 8192 ram, 70000000 iterations, array_ type, array_ 70000000: 5.089s
1.0 cpu, 8192 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 70000000 iterations, object type, object 70000000: 12.316s
2.0 cpu, 8192 ram, 70000000 iterations, array_ type, array_ 70000000: 4.988s
2.0 cpu, 8192 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 70000000 iterations, object type, object 70000000: 11.984s
3.0 cpu, 8192 ram, 70000000 iterations, array_ type, array_ 70000000: 4.982s
3.0 cpu, 8192 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 70000000 iterations, object type, object 70000000: 11.971s
4.0 cpu, 8192 ram, 70000000 iterations, array_ type, array_ 70000000: 4.998s
4.0 cpu, 8192 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 70000000 iterations, object type, object 70000000: 25.151s
0.5 cpu, 16384 ram, 70000000 iterations, array_ type, array_ 70000000: 10.812s
0.5 cpu, 16384 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 70000000 iterations, object type, object 70000000: 10.563s
1.0 cpu, 16384 ram, 70000000 iterations, array_ type, array_ 70000000: 5.073s
1.0 cpu, 16384 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 70000000 iterations, object type, object 70000000: 9.352s
2.0 cpu, 16384 ram, 70000000 iterations, array_ type, array_ 70000000: 4.926s
2.0 cpu, 16384 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 70000000 iterations, object type, object 70000000: 9.291s
3.0 cpu, 16384 ram, 70000000 iterations, array_ type, array_ 70000000: 5.015s
3.0 cpu, 16384 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 70000000 iterations, object type, object 70000000: 9.284s
4.0 cpu, 16384 ram, 70000000 iterations, array_ type, array_ 70000000: 4.965s
4.0 cpu, 16384 ram, 70000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 80000000 iterations, object type,
0.5 cpu, 128 ram, 80000000 iterations, array_ type,
0.5 cpu, 128 ram, 80000000 iterations, map___ type,
1.0 cpu, 128 ram, 80000000 iterations, object type,
1.0 cpu, 128 ram, 80000000 iterations, array_ type,
1.0 cpu, 128 ram, 80000000 iterations, map___ type,
2.0 cpu, 128 ram, 80000000 iterations, object type,
2.0 cpu, 128 ram, 80000000 iterations, array_ type,
2.0 cpu, 128 ram, 80000000 iterations, map___ type,
3.0 cpu, 128 ram, 80000000 iterations, object type,
3.0 cpu, 128 ram, 80000000 iterations, array_ type,
3.0 cpu, 128 ram, 80000000 iterations, map___ type,
4.0 cpu, 128 ram, 80000000 iterations, object type,
4.0 cpu, 128 ram, 80000000 iterations, array_ type,
4.0 cpu, 128 ram, 80000000 iterations, map___ type,
0.5 cpu, 256 ram, 80000000 iterations, object type,
0.5 cpu, 256 ram, 80000000 iterations, array_ type,
0.5 cpu, 256 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8e289470] 6541 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 307.07 / 0.00 ms (average mu = 0.596, current mu = 0.000) last resort; GC in old space requested [1:0xffff8e289470] 6853 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 311.50 / 0.00 ms (average mu = 0.417, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 80000000 iterations, object type,
1.0 cpu, 256 ram, 80000000 iterations, array_ type,
1.0 cpu, 256 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9cb90470] 2888 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 140.29 / 0.00 ms (average mu = 0.614, current mu = 0.000) last resort; GC in old space requested [1:0xffff9cb90470] 3022 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 133.76 / 0.00 ms (average mu = 0.435, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 80000000 iterations, object type,
2.0 cpu, 256 ram, 80000000 iterations, array_ type,
2.0 cpu, 256 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa56bb470] 2444 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.75 / 0.00 ms (average mu = 0.653, current mu = 0.000) last resort; GC in old space requested [1:0xffffa56bb470] 2551 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.81 / 0.00 ms (average mu = 0.469, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 80000000 iterations, object type,
3.0 cpu, 256 ram, 80000000 iterations, array_ type,
3.0 cpu, 256 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa7045470] 2482 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 117.47 / 0.00 ms (average mu = 0.643, current mu = 0.000) last resort; GC in old space requested [1:0xffffa7045470] 2590 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.73 / 0.00 ms (average mu = 0.465, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 80000000 iterations, object type,
4.0 cpu, 256 ram, 80000000 iterations, array_ type,
4.0 cpu, 256 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb0213470] 2516 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.86 / 0.00 ms (average mu = 0.654, current mu = 0.000) last resort; GC in old space requested [1:0xffffb0213470] 2623 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.50 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc648470] 7286 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.91 / 0.00 ms (average mu = 0.615, current mu = 0.723) allocation failure;  [1:0xffffbc648470] 7289 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.80 / 0.00 ms (average mu = 0.615, current mu = 0.723) allocation failure;  [1:0xffffbc648470] 8153 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 773.43 / 0.00 ms (average mu = 0.521, current mu = 0.404) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffafa61470] 3520 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.956, current mu = 0.935) allocation failure;  [1:0xffffafa61470] 3522 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.956, current mu = 0.935) allocation failure;  [1:0xffffafa61470] 3640 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.61 / 0.00 ms (average mu = 0.984, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa9f67470] 6415 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 366.33 / 0.00 ms (average mu = 0.585, current mu = 0.000) last resort; GC in old space requested [1:0xffffa9f67470] 6730 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 314.95 / 0.00 ms (average mu = 0.411, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa79eb470] 2635 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.71 / 0.00 ms (average mu = 0.611, current mu = 0.611) allocation failure;  [1:0xffffa79eb470] 2638 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.77 / 0.00 ms (average mu = 0.611, current mu = 0.611) allocation failure;  [1:0xffffa79eb470] 3030 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 357.66 / 0.00 ms (average mu = 0.483, current mu = 0.369) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb2cbb470] 1696 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb2cbb470] 1698 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb2cbb470] 1761 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 2.13 / 0.00 ms (average mu = 0.996, current mu = 0.996) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8b2e8470] 3031 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 277.91 / 0.00 ms (average mu = 0.505, current mu = 0.000) last resort; GC in old space requested [1:0xffff8b2e8470] 3192 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 160.91 / 0.00 ms (average mu = 0.358, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb5229470] 1990 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.71 / 0.00 ms (average mu = 0.591, current mu = 0.573) allocation failure;  [1:0xffffb5229470] 1992 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.591, current mu = 0.573) allocation failure;  [1:0xffffb5229470] 2371 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 345.07 / 0.00 ms (average mu = 0.420, current mu = 0.260) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffbc8f8470] 1626 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffbc8f8470] 1628 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffbc8f8470] 1691 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.32 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8d20d470] 2517 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 109.27 / 0.00 ms (average mu = 0.653, current mu = 0.000) last resort; GC in old space requested [1:0xffff8d20d470] 2630 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 113.44 / 0.00 ms (average mu = 0.466, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb066e470] 1972 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.67 / 0.00 ms (average mu = 0.577, current mu = 0.559) allocation failure;  [1:0xffffb066e470] 1974 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.66 / 0.00 ms (average mu = 0.577, current mu = 0.559) allocation failure;  [1:0xffffb066e470] 2356 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 347.92 / 0.00 ms (average mu = 0.411, current mu = 0.258) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa538f470] 1631 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffa538f470] 1633 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffa538f470] 1695 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.01 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8a527470] 2520 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.89 / 0.00 ms (average mu = 0.644, current mu = 0.000) last resort; GC in old space requested [1:0xffff8a527470] 2625 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.07 / 0.00 ms (average mu = 0.470, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab8e2470] 1943 ms: Scavenge 228.6 (232.5) -> 228.2 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.593, current mu = 0.581) allocation failure;  [1:0xffffab8e2470] 1945 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.70 / 0.00 ms (average mu = 0.593, current mu = 0.581) allocation failure;  [1:0xffffab8e2470] 2329 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 349.09 / 0.00 ms (average mu = 0.417, current mu = 0.257) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9e32b470] 1641 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.09 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9e32b470] 1644 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9e32b470] 1704 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.00 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9eaa8470] 2464 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.52 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffff9eaa8470] 2573 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 108.21 / 0.00 ms (average mu = 0.473, current mu = 0.001) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8e8b5470] 38091 ms: Mark-Compact (reduce) 508.9 (518.7) -> 508.8 (516.2) MB, 1293.28 / 0.00 ms (+ 0.6 ms in 1 steps since start of marking, biggest step 0.6 ms, walltime since start of marking 1295 ms) (average mu = 0.268, current mu = 0.434)[1:0xffff8e8b5470] 38095 ms: Scavenge 509.8 (516.2) -> 509.4 (519.2) MB, 1.21 / 0.00 ms (average mu = 0.268, current mu = 0.434) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb9efc470] 7725 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.994, current mu = 0.999) allocation failure;  [1:0xffffb9efc470] 7733 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.994, current mu = 0.999) allocation failure;  [1:0xffffb9efc470] 8033 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.14 / 0.00 ms (average mu = 0.998, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9071a470] 14570 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 619.97 / 0.00 ms (average mu = 0.635, current mu = 0.000) last resort; GC in old space requested [1:0xffff9071a470] 15241 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 671.01 / 0.00 ms (average mu = 0.440, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb7d74470] 10248 ms: Scavenge 505.8 (514.2) -> 505.1 (514.7) MB, 2.40 / 0.00 ms (average mu = 0.230, current mu = 0.157) allocation failure;  [1:0xffffb7d74470] 10312 ms: Scavenge 506.3 (514.7) -> 505.6 (515.5) MB, 60.97 / 0.00 ms (average mu = 0.230, current mu = 0.157) allocation failure;  [1:0xffffb7d74470] 10320 ms: Scavenge 507.0 (515.5) -> 506.3 (520.0) MB, 3.00 / 0.00 ms (average mu = 0.230, current mu = 0.157) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff90c49470] 3644 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff90c49470] 3652 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff90c49470] 3792 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.06 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3d9a470] 6371 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 270.40 / 0.00 ms (average mu = 0.648, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3d9a470] 7059 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 687.96 / 0.00 ms (average mu = 0.321, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff85859470] 7242 ms: Scavenge 508.5 (517.0) -> 507.8 (517.5) MB, 2.43 / 0.00 ms (average mu = 0.168, current mu = 0.159) allocation failure;  [1:0xffff85859470] 7248 ms: Scavenge 509.0 (517.5) -> 508.4 (518.2) MB, 2.74 / 0.00 ms (average mu = 0.168, current mu = 0.159) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa9cfa470] 3582 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.12 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffa9cfa470] 3591 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffa9cfa470] 3731 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.23 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff87ca5470] 5585 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 210.87 / 0.00 ms (average mu = 0.677, current mu = 0.000) last resort; GC in old space requested [1:0xffff87ca5470] 5797 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 212.56 / 0.00 ms (average mu = 0.499, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff83d86470] 7260 ms: Scavenge 509.0 (517.5) -> 508.3 (518.0) MB, 2.33 / 0.00 ms (average mu = 0.134, current mu = 0.100) allocation failure;  [1:0xffff83d86470] 7266 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 2.51 / 0.00 ms (average mu = 0.134, current mu = 0.100) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffba1a9470] 3548 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.12 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffba1a9470] 3557 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffba1a9470] 3698 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.08 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff80d12470] 5484 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 218.11 / 0.00 ms (average mu = 0.678, current mu = 0.000) last resort; GC in old space requested [1:0xffff80d12470] 5799 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 314.55 / 0.00 ms (average mu = 0.440, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8f22b470] 7054 ms: Scavenge 508.2 (516.5) -> 507.5 (517.0) MB, 2.32 / 0.00 ms (average mu = 0.137, current mu = 0.102) allocation failure;  [1:0xffff8f22b470] 7059 ms: Scavenge 508.6 (517.0) -> 508.0 (517.7) MB, 2.53 / 0.00 ms (average mu = 0.137, current mu = 0.102) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 80000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9db3a470] 3576 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.16 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9db3a470] 3584 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9db3a470] 3724 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.15 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 80000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8bec2470] 5444 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 209.91 / 0.00 ms (average mu = 0.676, current mu = 0.000) last resort; GC in old space requested [1:0xffff8bec2470] 5656 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 212.05 / 0.00 ms (average mu = 0.496, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffacc8f470] 65881 ms: Scavenge 1013.4 (1028.5) -> 1011.9 (1029.2) MB, 5.94 / 0.00 ms (average mu = 0.293, current mu = 0.437) allocation failure;  [1:0xffffacc8f470] 65987 ms: Scavenge 1014.0 (1029.2) -> 1012.9 (1031.0) MB, 7.70 / 0.00 ms (average mu = 0.293, current mu = 0.437) allocation failure;  [1:0xffffacc8f470] 66195 ms: Scavenge 1015.6 (1031.0) -> 1014.3 (1040.0) MB, 21.74 / 0.00 ms (average mu = 0.293, current mu = 0.437) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 80000000 iterations, array_ type, array_ 80000000: 12.706s
0.5 cpu, 2048 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb5e30470] 21310 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.84 / 0.00 ms (average mu = 0.248, current mu = 0.288) allocation failure;  [1:0xffffb5e30470] 21316 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.19 / 0.00 ms (average mu = 0.248, current mu = 0.288) allocation failure;  [1:0xffffb5e30470] 21323 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.93 / 0.00 ms (average mu = 0.248, current mu = 0.288) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 80000000 iterations, array_ type, array_ 80000000: 5.993s
1.0 cpu, 2048 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb5c5f470] 13260 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.76 / 0.00 ms (average mu = 0.190, current mu = 0.156) allocation failure;  [1:0xffffb5c5f470] 13266 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.06 / 0.00 ms (average mu = 0.190, current mu = 0.156) allocation failure;  [1:0xffffb5c5f470] 13273 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.90 / 0.00 ms (average mu = 0.190, current mu = 0.156) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 80000000 iterations, array_ type, array_ 80000000: 5.844s
2.0 cpu, 2048 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa1092470] 13079 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.81 / 0.00 ms (average mu = 0.154, current mu = 0.116) allocation failure;  [1:0xffffa1092470] 13086 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.08 / 0.00 ms (average mu = 0.154, current mu = 0.116) allocation failure;  [1:0xffffa1092470] 13092 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.94 / 0.00 ms (average mu = 0.154, current mu = 0.116) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 80000000 iterations, array_ type, array_ 80000000: 5.876s
3.0 cpu, 2048 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb00c6470] 12752 ms: Scavenge 1016.3 (1029.7) -> 1015.6 (1030.2) MB, 2.89 / 0.00 ms (average mu = 0.154, current mu = 0.115) allocation failure;  [1:0xffffb00c6470] 12757 ms: Scavenge 1016.8 (1030.2) -> 1016.2 (1030.7) MB, 2.66 / 0.00 ms (average mu = 0.154, current mu = 0.115) allocation failure;  [1:0xffffb00c6470] 12764 ms: Scavenge 1017.5 (1030.7) -> 1016.8 (1035.5) MB, 2.89 / 0.00 ms (average mu = 0.154, current mu = 0.115) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 80000000 iterations, array_ type, array_ 80000000: 5.854s
4.0 cpu, 2048 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbbac8470] 121677 ms: Scavenge 2045.3 (2068.2) -> 2044.6 (2068.7) MB, 75.59 / 0.00 ms (average mu = 0.377, current mu = 0.431) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 80000000 iterations, array_ type, array_ 80000000: 12.888s
0.5 cpu, 4096 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaf776470] 42697 ms: Scavenge 2042.8 (2065.4) -> 2042.1 (2065.9) MB, 4.38 / 0.00 ms (average mu = 0.213, current mu = 0.199) allocation failure;  [1:0xffffaf776470] 42704 ms: Scavenge 2043.3 (2065.9) -> 2042.6 (2066.7) MB, 4.36 / 0.00 ms (average mu = 0.213, current mu = 0.199) allocation failure;  [1:0xffffaf776470] 42712 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.02 / 0.00 ms (average mu = 0.213, current mu = 0.199) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 80000000 iterations, array_ type, array_ 80000000: 6.056s
1.0 cpu, 4096 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7fca8470] 26668 ms: Scavenge 2042.7 (2065.4) -> 2042.1 (2065.9) MB, 3.69 / 0.00 ms (average mu = 0.171, current mu = 0.150) allocation failure;  [1:0xffff7fca8470] 26677 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 6.34 / 0.00 ms (average mu = 0.171, current mu = 0.150) allocation failure;  [1:0xffff7fca8470] 26685 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 4.06 / 0.00 ms (average mu = 0.171, current mu = 0.150) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 80000000 iterations, array_ type, array_ 80000000: 5.842s
2.0 cpu, 4096 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc622470] 25917 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.97 / 0.00 ms (average mu = 0.138, current mu = 0.111) allocation failure;  [1:0xffffbc622470] 25924 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 3.93 / 0.00 ms (average mu = 0.138, current mu = 0.111) allocation failure;  [1:0xffffbc622470] 25931 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.87 / 0.00 ms (average mu = 0.138, current mu = 0.111) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 80000000 iterations, array_ type, array_ 80000000: 5.858s
3.0 cpu, 4096 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9acbb470] 25579 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.77 / 0.00 ms (average mu = 0.125, current mu = 0.093) allocation failure;  [1:0xffff9acbb470] 25586 ms: Scavenge 2043.4 (2066.2) -> 2042.7 (2066.9) MB, 3.83 / 0.00 ms (average mu = 0.125, current mu = 0.093) allocation failure;  [1:0xffff9acbb470] 25593 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 3.66 / 0.00 ms (average mu = 0.125, current mu = 0.093) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 80000000 iterations, array_ type, array_ 80000000: 5.908s
4.0 cpu, 4096 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffacd4c470] 133013 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.41 / 0.00 ms (average mu = 0.258, current mu = 0.427) allocation failure;  [1:0xffffacd4c470] 133100 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.56 / 0.00 ms (average mu = 0.258, current mu = 0.427) allocation failure;  [1:0xffffacd4c470] 133108 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.62 / 0.00 ms (average mu = 0.258, current mu = 0.427) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 80000000 iterations, array_ type, array_ 80000000: 12.715s
0.5 cpu, 8192 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa5646470] 38702 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.60 / 0.00 ms (average mu = 0.252, current mu = 0.303) allocation failure;  [1:0xffffa5646470] 38709 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.08 / 0.00 ms (average mu = 0.252, current mu = 0.303) allocation failure;  [1:0xffffa5646470] 38716 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.85 / 0.00 ms (average mu = 0.252, current mu = 0.303) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 80000000 iterations, array_ type, array_ 80000000: 6.048s
1.0 cpu, 8192 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb876e470] 26870 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.65 / 0.00 ms (average mu = 0.168, current mu = 0.137) allocation failure;  [1:0xffffb876e470] 26878 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 4.10 / 0.00 ms (average mu = 0.168, current mu = 0.137) allocation failure;  [1:0xffffb876e470] 26885 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 3.78 / 0.00 ms (average mu = 0.168, current mu = 0.137) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 80000000 iterations, array_ type, array_ 80000000: 5.992s
2.0 cpu, 8192 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff90ce0470] 25747 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 4.06 / 0.00 ms (average mu = 0.138, current mu = 0.112) allocation failure;  [1:0xffff90ce0470] 25754 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 4.61 / 0.00 ms (average mu = 0.138, current mu = 0.112) allocation failure;  [1:0xffff90ce0470] 25762 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 3.97 / 0.00 ms (average mu = 0.138, current mu = 0.112) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 80000000 iterations, array_ type, array_ 80000000: 5.866s
3.0 cpu, 8192 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 80000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa21c8470] 25477 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.94 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;  [1:0xffffa21c8470] 25484 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.94 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;  [1:0xffffa21c8470] 25491 ms: Scavenge 2044.0 (2066.7) -> 2043.4 (2071.4) MB, 3.92 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 80000000 iterations, array_ type, array_ 80000000: 5.836s
4.0 cpu, 8192 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 80000000 iterations, object type, object 80000000: 46.548s
0.5 cpu, 16384 ram, 80000000 iterations, array_ type, array_ 80000000: 12.693s
0.5 cpu, 16384 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 80000000 iterations, object type, object 80000000: 17.193s
1.0 cpu, 16384 ram, 80000000 iterations, array_ type, array_ 80000000: 5.905s
1.0 cpu, 16384 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 80000000 iterations, object type, object 80000000: 13.039s
2.0 cpu, 16384 ram, 80000000 iterations, array_ type, array_ 80000000: 5.963s
2.0 cpu, 16384 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 80000000 iterations, object type, object 80000000: 13.011s
3.0 cpu, 16384 ram, 80000000 iterations, array_ type, array_ 80000000: 5.970s
3.0 cpu, 16384 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 80000000 iterations, object type, object 80000000: 12.985s
4.0 cpu, 16384 ram, 80000000 iterations, array_ type, array_ 80000000: 5.847s
4.0 cpu, 16384 ram, 80000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 90000000 iterations, object type,
0.5 cpu, 128 ram, 90000000 iterations, array_ type,
0.5 cpu, 128 ram, 90000000 iterations, map___ type,
1.0 cpu, 128 ram, 90000000 iterations, object type,
1.0 cpu, 128 ram, 90000000 iterations, array_ type,
1.0 cpu, 128 ram, 90000000 iterations, map___ type,
2.0 cpu, 128 ram, 90000000 iterations, object type,
2.0 cpu, 128 ram, 90000000 iterations, array_ type,
2.0 cpu, 128 ram, 90000000 iterations, map___ type,
3.0 cpu, 128 ram, 90000000 iterations, object type,
3.0 cpu, 128 ram, 90000000 iterations, array_ type,
3.0 cpu, 128 ram, 90000000 iterations, map___ type,
4.0 cpu, 128 ram, 90000000 iterations, object type,
4.0 cpu, 128 ram, 90000000 iterations, array_ type,
4.0 cpu, 128 ram, 90000000 iterations, map___ type,
0.5 cpu, 256 ram, 90000000 iterations, object type,
0.5 cpu, 256 ram, 90000000 iterations, array_ type,
0.5 cpu, 256 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa4b58470] 6872 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 584.69 / 0.00 ms (average mu = 0.460, current mu = 0.000) last resort; GC in old space requested [1:0xffffa4b58470] 7190 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 318.13 / 0.00 ms (average mu = 0.340, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 90000000 iterations, object type,
1.0 cpu, 256 ram, 90000000 iterations, array_ type,
1.0 cpu, 256 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff80efa470] 2963 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 149.63 / 0.00 ms (average mu = 0.600, current mu = 0.000) last resort; GC in old space requested [1:0xffff80efa470] 3103 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 140.04 / 0.00 ms (average mu = 0.422, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 90000000 iterations, object type,
2.0 cpu, 256 ram, 90000000 iterations, array_ type,
2.0 cpu, 256 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb96a9470] 2549 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.28 / 0.00 ms (average mu = 0.661, current mu = 0.000) last resort; GC in old space requested [1:0xffffb96a9470] 2654 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.15 / 0.00 ms (average mu = 0.482, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 90000000 iterations, object type,
3.0 cpu, 256 ram, 90000000 iterations, array_ type,
3.0 cpu, 256 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb7d3e470] 2621 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.47 / 0.00 ms (average mu = 0.659, current mu = 0.000) last resort; GC in old space requested [1:0xffffb7d3e470] 2728 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.58 / 0.00 ms (average mu = 0.475, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 90000000 iterations, object type,
4.0 cpu, 256 ram, 90000000 iterations, array_ type,
4.0 cpu, 256 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffae29f470] 2483 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 113.00 / 0.00 ms (average mu = 0.650, current mu = 0.000) last resort; GC in old space requested [1:0xffffae29f470] 2591 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.83 / 0.00 ms (average mu = 0.469, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff85983470] 7479 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 1.01 / 0.00 ms (average mu = 0.442, current mu = 0.362) allocation failure;  [1:0xffff85983470] 7533 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 1.38 / 0.00 ms (average mu = 0.442, current mu = 0.362) allocation failure;  [1:0xffff85983470] 8350 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 775.04 / 0.00 ms (average mu = 0.507, current mu = 0.568) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff86641470] 3517 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff86641470] 3519 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff86641470] 3638 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.05 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa818e470] 6275 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 288.39 / 0.00 ms (average mu = 0.601, current mu = 0.000) last resort; GC in old space requested [1:0xffffa818e470] 6580 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 305.31 / 0.00 ms (average mu = 0.416, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb424f470] 2871 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.494, current mu = 0.427) allocation failure;  [1:0xffffb424f470] 2873 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.67 / 0.00 ms (average mu = 0.494, current mu = 0.427) allocation failure;  [1:0xffffb424f470] 3270 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 362.21 / 0.00 ms (average mu = 0.466, current mu = 0.437) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9afa1470] 1673 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9afa1470] 1675 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9afa1470] 1738 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.09 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff835b7470] 2927 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 134.54 / 0.00 ms (average mu = 0.601, current mu = 0.000) last resort; GC in old space requested [1:0xffff835b7470] 3073 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 146.10 / 0.00 ms (average mu = 0.413, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7fedb470] 1992 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.585, current mu = 0.570) allocation failure;  [1:0xffff7fedb470] 1994 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.67 / 0.00 ms (average mu = 0.585, current mu = 0.570) allocation failure;  [1:0xffff7fedb470] 2379 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 349.92 / 0.00 ms (average mu = 0.416, current mu = 0.262) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff94051470] 1634 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff94051470] 1636 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.07 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff94051470] 1699 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.07 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff98564470] 2704 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 116.95 / 0.00 ms (average mu = 0.640, current mu = 0.000) last resort; GC in old space requested [1:0xffff98564470] 2821 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 116.31 / 0.00 ms (average mu = 0.457, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb7941470] 2017 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.71 / 0.00 ms (average mu = 0.579, current mu = 0.556) allocation failure;  [1:0xffffb7941470] 2019 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.579, current mu = 0.556) allocation failure;  [1:0xffffb7941470] 2408 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 354.00 / 0.00 ms (average mu = 0.413, current mu = 0.258) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffac4c3470] 1652 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffac4c3470] 1654 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffac4c3470] 1717 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.14 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8a30d470] 2498 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.10 / 0.00 ms (average mu = 0.656, current mu = 0.000) last resort; GC in old space requested [1:0xffff8a30d470] 2604 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.78 / 0.00 ms (average mu = 0.474, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff929e4470] 2009 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.71 / 0.00 ms (average mu = 0.578, current mu = 0.561) allocation failure;  [1:0xffff929e4470] 2011 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.69 / 0.00 ms (average mu = 0.578, current mu = 0.561) allocation failure;  [1:0xffff929e4470] 2393 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 347.61 / 0.00 ms (average mu = 0.415, current mu = 0.262) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffae993470] 1637 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffae993470] 1639 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.07 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffae993470] 1702 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 0.97 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff92f8d470] 2487 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.17 / 0.00 ms (average mu = 0.650, current mu = 0.000) last resort; GC in old space requested [1:0xffff92f8d470] 2593 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.30 / 0.00 ms (average mu = 0.470, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7e4a9470] 30890 ms: Scavenge 503.2 (511.7) -> 502.5 (512.0) MB, 3.28 / 0.00 ms (average mu = 0.357, current mu = 0.533) allocation failure;  [1:0xffff7e4a9470] 30989 ms: Scavenge 503.7 (512.0) -> 503.1 (512.7) MB, 3.84 / 0.00 ms (average mu = 0.357, current mu = 0.533) allocation failure;  [1:0xffff7e4a9470] 30998 ms: Scavenge 504.4 (512.7) -> 503.8 (517.2) MB, 3.64 / 0.00 ms (average mu = 0.357, current mu = 0.533) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff88caa470] 7760 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff88caa470] 7813 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff88caa470] 8120 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.21 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff92615470] 14895 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 678.98 / 0.00 ms (average mu = 0.654, current mu = 0.000) last resort; GC in old space requested [1:0xffff92615470] 15588 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 692.72 / 0.00 ms (average mu = 0.456, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa5daf470] 11230 ms: Scavenge 507.5 (516.0) -> 506.9 (516.5) MB, 2.41 / 0.00 ms (average mu = 0.195, current mu = 0.180) allocation failure;  [1:0xffffa5daf470] 11235 ms: Scavenge 508.0 (516.5) -> 507.4 (517.2) MB, 2.49 / 0.00 ms (average mu = 0.195, current mu = 0.180) allocation failure;  [1:0xffffa5daf470] 11241 ms: Scavenge 508.7 (517.2) -> 508.1 (522.0) MB, 2.52 / 0.00 ms (average mu = 0.195, current mu = 0.180) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb3f7c470] 3816 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffb3f7c470] 3824 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffb3f7c470] 3965 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.10 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9697b470] 6536 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 273.05 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffff9697b470] 6830 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 294.42 / 0.00 ms (average mu = 0.459, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb1051470] 7385 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.34 / 0.00 ms (average mu = 0.176, current mu = 0.166) allocation failure;  [1:0xffffb1051470] 7391 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 2.70 / 0.00 ms (average mu = 0.176, current mu = 0.166) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9131c470] 3573 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9131c470] 3581 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9131c470] 3724 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.10 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffaf075470] 5623 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 213.73 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffffaf075470] 5833 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 209.63 / 0.00 ms (average mu = 0.504, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff842d0470] 7132 ms: Scavenge 509.1 (517.5) -> 508.4 (518.0) MB, 2.42 / 0.00 ms (average mu = 0.140, current mu = 0.104) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff92524470] 3559 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff92524470] 3568 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff92524470] 3710 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.14 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7d919470] 5509 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 224.47 / 0.00 ms (average mu = 0.675, current mu = 0.000) last resort; GC in old space requested [1:0xffff7d919470] 5719 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 209.37 / 0.00 ms (average mu = 0.498, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff91501470] 7199 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.52 / 0.00 ms (average mu = 0.140, current mu = 0.105) allocation failure;  [1:0xffff91501470] 7205 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 2.42 / 0.00 ms (average mu = 0.140, current mu = 0.105) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 90000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffba9a0470] 3572 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffba9a0470] 3581 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffba9a0470] 3722 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 90000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb8685470] 5462 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 209.94 / 0.00 ms (average mu = 0.679, current mu = 0.000) last resort; GC in old space requested [1:0xffffb8685470] 5690 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 227.87 / 0.00 ms (average mu = 0.488, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffac10f470] 71654 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 3.47 / 0.00 ms (average mu = 0.211, current mu = 0.146) allocation failure;  [1:0xffffac10f470] 71744 ms: Scavenge 1016.6 (1030.0) -> 1015.9 (1030.7) MB, 85.95 / 0.00 ms (average mu = 0.211, current mu = 0.146) allocation failure;  [1:0xffffac10f470] 71754 ms: Scavenge 1017.3 (1030.7) -> 1016.6 (1035.2) MB, 4.33 / 0.00 ms (average mu = 0.211, current mu = 0.146) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 90000000 iterations, array_ type, array_ 90000000: 14.145s
0.5 cpu, 2048 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb7c1b470] 18837 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.93 / 0.00 ms (average mu = 0.291, current mu = 0.286) allocation failure;  [1:0xffffb7c1b470] 18843 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.91 / 0.00 ms (average mu = 0.291, current mu = 0.286) allocation failure;  [1:0xffffb7c1b470] 18849 ms: Scavenge 1017.3 (1030.7) -> 1016.7 (1035.2) MB, 2.74 / 0.00 ms (average mu = 0.291, current mu = 0.286) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 90000000 iterations, array_ type, array_ 90000000: 6.676s
1.0 cpu, 2048 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc1de470] 13953 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.67 / 0.00 ms (average mu = 0.160, current mu = 0.120) allocation failure;  [1:0xffffbc1de470] 13959 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.01 / 0.00 ms (average mu = 0.160, current mu = 0.120) allocation failure;  [1:0xffffbc1de470] 13994 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 31.72 / 0.00 ms (average mu = 0.160, current mu = 0.120) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 90000000 iterations, array_ type, array_ 90000000: 6.491s
2.0 cpu, 2048 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb1168470] 13094 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.91 / 0.00 ms (average mu = 0.150, current mu = 0.108) allocation failure;  [1:0xffffb1168470] 13100 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 2.90 / 0.00 ms (average mu = 0.150, current mu = 0.108) allocation failure;  [1:0xffffb1168470] 13107 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 3.37 / 0.00 ms (average mu = 0.150, current mu = 0.108) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 90000000 iterations, array_ type, array_ 90000000: 6.524s
3.0 cpu, 2048 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8dc90470] 13105 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.66 / 0.00 ms (average mu = 0.147, current mu = 0.105) allocation failure;  [1:0xffff8dc90470] 13111 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 2.95 / 0.00 ms (average mu = 0.147, current mu = 0.105) allocation failure;  [1:0xffff8dc90470] 13118 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 3.26 / 0.00 ms (average mu = 0.147, current mu = 0.105) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 90000000 iterations, array_ type, array_ 90000000: 6.507s
4.0 cpu, 2048 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb3874470] 95333 ms: Scavenge 2032.2 (2056.9) -> 2030.7 (2057.4) MB, 93.40 / 0.00 ms (average mu = 0.257, current mu = 0.166) allocation failure;  [1:0xffffb3874470] 95535 ms: Scavenge 2032.9 (2057.4) -> 2031.7 (2059.2) MB, 7.84 / 0.00 ms (average mu = 0.257, current mu = 0.166) allocation failure;  [1:0xffffb3874470] 95736 ms: Scavenge 2034.5 (2059.2) -> 2033.1 (2068.2) MB, 104.50 / 0.00 ms (average mu = 0.257, current mu = 0.166) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 90000000 iterations, array_ type, array_ 90000000: 14.148s
0.5 cpu, 4096 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff90425470] 42935 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.97 / 0.00 ms (average mu = 0.210, current mu = 0.200) allocation failure;  [1:0xffff90425470] 42999 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 61.16 / 0.00 ms (average mu = 0.210, current mu = 0.200) allocation failure;  [1:0xffff90425470] 43009 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 4.86 / 0.00 ms (average mu = 0.210, current mu = 0.200) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 90000000 iterations, array_ type, array_ 90000000: 6.667s
1.0 cpu, 4096 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb51b8470] 26477 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 4.01 / 0.00 ms (average mu = 0.179, current mu = 0.154) allocation failure;  [1:0xffffb51b8470] 26490 ms: Scavenge 2043.4 (2066.2) -> 2042.7 (2066.9) MB, 4.37 / 0.00 ms (average mu = 0.179, current mu = 0.154) allocation failure;  [1:0xffffb51b8470] 26497 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 4.21 / 0.00 ms (average mu = 0.179, current mu = 0.154) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 90000000 iterations, array_ type, array_ 90000000: 6.522s
2.0 cpu, 4096 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa1a3b470] 25349 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.75 / 0.00 ms (average mu = 0.143, current mu = 0.119) allocation failure;  [1:0xffffa1a3b470] 25356 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.74 / 0.00 ms (average mu = 0.143, current mu = 0.119) allocation failure;  [1:0xffffa1a3b470] 25364 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 3.84 / 0.00 ms (average mu = 0.143, current mu = 0.119) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 90000000 iterations, array_ type, array_ 90000000: 6.494s
3.0 cpu, 4096 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb7cce470] 25152 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.82 / 0.00 ms (average mu = 0.124, current mu = 0.094) allocation failure;  [1:0xffffb7cce470] 25159 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.89 / 0.00 ms (average mu = 0.124, current mu = 0.094) allocation failure;  [1:0xffffb7cce470] 25168 ms: Scavenge 2044.0 (2066.7) -> 2043.4 (2071.4) MB, 5.14 / 0.00 ms (average mu = 0.124, current mu = 0.094) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 90000000 iterations, array_ type, array_ 90000000: 6.476s
4.0 cpu, 4096 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff968ec470] 124097 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 4.74 / 0.00 ms (average mu = 0.340, current mu = 0.437) allocation failure;  [1:0xffff968ec470] 124194 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 6.56 / 0.00 ms (average mu = 0.340, current mu = 0.437) allocation failure;  [1:0xffff968ec470] 124205 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 5.71 / 0.00 ms (average mu = 0.340, current mu = 0.437) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 90000000 iterations, array_ type, array_ 90000000: 14.071s
0.5 cpu, 8192 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab21e470] 41176 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 4.07 / 0.00 ms (average mu = 0.242, current mu = 0.211) allocation failure;  [1:0xffffab21e470] 41183 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.15 / 0.00 ms (average mu = 0.242, current mu = 0.211) allocation failure;  [1:0xffffab21e470] 41191 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 4.54 / 0.00 ms (average mu = 0.242, current mu = 0.211) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 90000000 iterations, array_ type, array_ 90000000: 6.615s
1.0 cpu, 8192 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff819e0470] 26376 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.25 / 0.00 ms (average mu = 0.182, current mu = 0.158) allocation failure;  [1:0xffff819e0470] 26383 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.77 / 0.00 ms (average mu = 0.182, current mu = 0.158) allocation failure;  [1:0xffff819e0470] 26390 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 3.92 / 0.00 ms (average mu = 0.182, current mu = 0.158) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 90000000 iterations, array_ type, array_ 90000000: 6.602s
2.0 cpu, 8192 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa3b2f470] 25155 ms: Scavenge 2042.8 (2065.4) -> 2042.1 (2065.9) MB, 3.55 / 0.00 ms (average mu = 0.137, current mu = 0.106) allocation failure;  [1:0xffffa3b2f470] 25163 ms: Scavenge 2043.3 (2065.9) -> 2042.6 (2066.7) MB, 4.97 / 0.00 ms (average mu = 0.137, current mu = 0.106) allocation failure;  [1:0xffffa3b2f470] 25171 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.22 / 0.00 ms (average mu = 0.137, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 90000000 iterations, array_ type, array_ 90000000: 6.492s
3.0 cpu, 8192 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 90000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff83dea470] 25498 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 3.79 / 0.00 ms (average mu = 0.126, current mu = 0.100) allocation failure;  [1:0xffff83dea470] 25505 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.00 / 0.00 ms (average mu = 0.126, current mu = 0.100) allocation failure;  [1:0xffff83dea470] 25514 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 5.19 / 0.00 ms (average mu = 0.126, current mu = 0.100) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 90000000 iterations, array_ type, array_ 90000000: 6.521s
4.0 cpu, 8192 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 90000000 iterations, object type, object 90000000: 36.960s
0.5 cpu, 16384 ram, 90000000 iterations, array_ type, array_ 90000000: 13.982s
0.5 cpu, 16384 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 90000000 iterations, object type, object 90000000: 16.486s
1.0 cpu, 16384 ram, 90000000 iterations, array_ type, array_ 90000000: 6.579s
1.0 cpu, 16384 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 90000000 iterations, object type, object 90000000: 14.316s
2.0 cpu, 16384 ram, 90000000 iterations, array_ type, array_ 90000000: 6.477s
2.0 cpu, 16384 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 90000000 iterations, object type, object 90000000: 13.913s
3.0 cpu, 16384 ram, 90000000 iterations, array_ type, array_ 90000000: 6.475s
3.0 cpu, 16384 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 90000000 iterations, object type, object 90000000: 14.298s
4.0 cpu, 16384 ram, 90000000 iterations, array_ type, array_ 90000000: 6.473s
4.0 cpu, 16384 ram, 90000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 100000000 iterations, object type,
0.5 cpu, 128 ram, 100000000 iterations, array_ type,
0.5 cpu, 128 ram, 100000000 iterations, map___ type,
1.0 cpu, 128 ram, 100000000 iterations, object type,
1.0 cpu, 128 ram, 100000000 iterations, array_ type,
1.0 cpu, 128 ram, 100000000 iterations, map___ type,
2.0 cpu, 128 ram, 100000000 iterations, object type,
2.0 cpu, 128 ram, 100000000 iterations, array_ type,
2.0 cpu, 128 ram, 100000000 iterations, map___ type,
3.0 cpu, 128 ram, 100000000 iterations, object type,
3.0 cpu, 128 ram, 100000000 iterations, array_ type,
3.0 cpu, 128 ram, 100000000 iterations, map___ type,
4.0 cpu, 128 ram, 100000000 iterations, object type,
4.0 cpu, 128 ram, 100000000 iterations, array_ type,
4.0 cpu, 128 ram, 100000000 iterations, map___ type,
0.5 cpu, 256 ram, 100000000 iterations, object type,
0.5 cpu, 256 ram, 100000000 iterations, array_ type,
0.5 cpu, 256 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb4720470] 6017 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 301.74 / 0.00 ms (average mu = 0.608, current mu = 0.000) last resort; GC in old space requested [1:0xffffb4720470] 6324 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 306.91 / 0.00 ms (average mu = 0.420, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 100000000 iterations, object type,
1.0 cpu, 256 ram, 100000000 iterations, array_ type,
1.0 cpu, 256 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa0a3a470] 2918 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 148.57 / 0.00 ms (average mu = 0.608, current mu = 0.000) last resort; GC in old space requested [1:0xffffa0a3a470] 3055 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 136.28 / 0.00 ms (average mu = 0.429, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 100000000 iterations, object type,
2.0 cpu, 256 ram, 100000000 iterations, array_ type,
2.0 cpu, 256 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8ad76470] 2519 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.71 / 0.00 ms (average mu = 0.654, current mu = 0.000) last resort; GC in old space requested [1:0xffff8ad76470] 2625 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.34 / 0.00 ms (average mu = 0.474, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 100000000 iterations, object type,
3.0 cpu, 256 ram, 100000000 iterations, array_ type,
3.0 cpu, 256 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb98f5470] 2583 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.09 / 0.00 ms (average mu = 0.660, current mu = 0.000) last resort; GC in old space requested [1:0xffffb98f5470] 2688 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.06 / 0.00 ms (average mu = 0.481, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 100000000 iterations, object type,
4.0 cpu, 256 ram, 100000000 iterations, array_ type,
4.0 cpu, 256 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7f1e8470] 2576 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.24 / 0.00 ms (average mu = 0.666, current mu = 0.000) last resort; GC in old space requested [1:0xffff7f1e8470] 2682 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 96.80 / 0.00 ms (average mu = 0.510, current mu = 0.090) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff989a0470] 7182 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.95 / 0.00 ms (average mu = 0.456, current mu = 0.357) allocation failure;  [1:0xffff989a0470] 7185 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.85 / 0.00 ms (average mu = 0.456, current mu = 0.357) allocation failure;  [1:0xffff989a0470] 8055 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 778.01 / 0.00 ms (average mu = 0.452, current mu = 0.447) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffaabf6470] 3604 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.999) allocation failure;  [1:0xffffaabf6470] 3606 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.997, current mu = 0.999) allocation failure;  [1:0xffffaabf6470] 3724 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.10 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8790a470] 6317 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 301.03 / 0.00 ms (average mu = 0.628, current mu = 0.000) last resort; GC in old space requested [1:0xffff8790a470] 6618 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 300.42 / 0.00 ms (average mu = 0.440, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9f126470] 2797 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.78 / 0.00 ms (average mu = 0.504, current mu = 0.445) allocation failure;  [1:0xffff9f126470] 2800 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.70 / 0.00 ms (average mu = 0.504, current mu = 0.445) allocation failure;  [1:0xffff9f126470] 3186 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 352.01 / 0.00 ms (average mu = 0.453, current mu = 0.400) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffbaacd470] 1752 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffbaacd470] 1754 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffbaacd470] 1818 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.06 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffba684470] 3088 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 154.64 / 0.00 ms (average mu = 0.621, current mu = 0.000) last resort; GC in old space requested [1:0xffffba684470] 3222 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 133.68 / 0.00 ms (average mu = 0.450, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb88e9470] 2042 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.578, current mu = 0.557) allocation failure;  [1:0xffffb88e9470] 2044 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.68 / 0.00 ms (average mu = 0.578, current mu = 0.557) allocation failure;  [1:0xffffb88e9470] 2435 ms: Mark-Compact 342.6 (346.6) -> 266.6 (271.8) MB, 355.66 / 0.00 ms (average mu = 0.418, current mu = 0.272) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7f1bd470] 1689 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff7f1bd470] 1691 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.06 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff7f1bd470] 1755 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.09 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb2948470] 2564 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 114.52 / 0.00 ms (average mu = 0.656, current mu = 0.000) last resort; GC in old space requested [1:0xffffb2948470] 2670 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.16 / 0.00 ms (average mu = 0.479, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffac157470] 1999 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.583, current mu = 0.565) allocation failure;  [1:0xffffac157470] 2001 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.70 / 0.00 ms (average mu = 0.583, current mu = 0.565) allocation failure;  [1:0xffffac157470] 2388 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 351.77 / 0.00 ms (average mu = 0.416, current mu = 0.263) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff86254470] 1687 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff86254470] 1689 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff86254470] 1753 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.22 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7cb47470] 2514 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 116.71 / 0.00 ms (average mu = 0.648, current mu = 0.000) last resort; GC in old space requested [1:0xffff7cb47470] 2612 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 98.04 / 0.00 ms (average mu = 0.481, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8a49c470] 2032 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.76 / 0.00 ms (average mu = 0.587, current mu = 0.571) allocation failure;  [1:0xffff8a49c470] 2035 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 1.03 / 0.00 ms (average mu = 0.587, current mu = 0.571) allocation failure;  [1:0xffff8a49c470] 2421 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 351.82 / 0.00 ms (average mu = 0.416, current mu = 0.259) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff94e7a470] 1681 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff94e7a470] 1684 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff94e7a470] 1759 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.20 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffba5cb470] 2511 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.37 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffffba5cb470] 2627 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 115.90 / 0.00 ms (average mu = 0.461, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff95ba8470] 29690 ms: Scavenge 503.2 (511.7) -> 502.5 (512.0) MB, 2.61 / 0.00 ms (average mu = 0.325, current mu = 0.463) allocation failure;  [1:0xffff95ba8470] 29778 ms: Scavenge 503.7 (512.0) -> 503.1 (512.7) MB, 85.05 / 0.00 ms (average mu = 0.325, current mu = 0.463) allocation failure;  [1:0xffff95ba8470] 29786 ms: Scavenge 504.4 (512.7) -> 503.8 (517.5) MB, 3.54 / 0.00 ms (average mu = 0.325, current mu = 0.463) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff865a1470] 8018 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.15 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff865a1470] 8028 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff865a1470] 8331 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.29 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa46a7470] 13779 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 687.87 / 0.00 ms (average mu = 0.632, current mu = 0.000) last resort; GC in old space requested [1:0xffffa46a7470] 14304 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 525.14 / 0.00 ms (average mu = 0.469, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff916ba470] 11813 ms: Scavenge 508.0 (516.5) -> 507.3 (517.0) MB, 2.50 / 0.00 ms (average mu = 0.205, current mu = 0.184) allocation failure;  [1:0xffff916ba470] 11819 ms: Scavenge 508.5 (517.0) -> 507.8 (517.5) MB, 2.40 / 0.00 ms (average mu = 0.205, current mu = 0.184) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff89e3e470] 3982 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff89e3e470] 3990 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff89e3e470] 4132 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.08 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9419c470] 6544 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 294.83 / 0.00 ms (average mu = 0.643, current mu = 0.000) last resort; GC in old space requested [1:0xffff9419c470] 6821 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 277.53 / 0.00 ms (average mu = 0.459, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8dcad470] 7401 ms: Scavenge 508.5 (517.0) -> 507.8 (517.5) MB, 2.32 / 0.00 ms (average mu = 0.177, current mu = 0.170) allocation failure;  [1:0xffff8dcad470] 7407 ms: Scavenge 509.0 (517.5) -> 508.4 (518.2) MB, 2.43 / 0.00 ms (average mu = 0.177, current mu = 0.170) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff86d16470] 3724 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff86d16470] 3732 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff86d16470] 3874 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.13 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb263f470] 5685 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 211.32 / 0.00 ms (average mu = 0.691, current mu = 0.000) last resort; GC in old space requested [1:0xffffb263f470] 5896 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 211.05 / 0.00 ms (average mu = 0.510, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff90fe1470] 7288 ms: Scavenge 508.5 (517.0) -> 507.8 (517.5) MB, 2.36 / 0.00 ms (average mu = 0.132, current mu = 0.099) allocation failure;  [1:0xffff90fe1470] 7294 ms: Scavenge 509.0 (517.5) -> 508.4 (518.2) MB, 2.49 / 0.00 ms (average mu = 0.132, current mu = 0.099) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff91a59470] 3709 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff91a59470] 3718 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff91a59470] 3858 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.06 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb52b7470] 5525 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 224.24 / 0.00 ms (average mu = 0.674, current mu = 0.000) last resort; GC in old space requested [1:0xffffb52b7470] 5736 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 211.43 / 0.00 ms (average mu = 0.497, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8858b470] 7260 ms: Scavenge 508.1 (516.5) -> 507.4 (517.0) MB, 2.42 / 0.00 ms (average mu = 0.140, current mu = 0.106) allocation failure;  [1:0xffff8858b470] 7266 ms: Scavenge 508.6 (517.0) -> 508.0 (517.7) MB, 2.58 / 0.00 ms (average mu = 0.140, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 100000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff81467470] 3730 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff81467470] 3739 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.13 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff81467470] 3881 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.23 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 100000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa2be0470] 5476 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 228.13 / 0.00 ms (average mu = 0.674, current mu = 0.000) last resort; GC in old space requested [1:0xffffa2be0470] 5688 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 211.80 / 0.00 ms (average mu = 0.496, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa7915470] 83823 ms: Mark-Compact (reduce) 1020.5 (1035.0) -> 1020.4 (1032.7) MB, 10081.26 / 0.00 ms (+ 0.4 ms in 1 steps since start of marking, biggest step 0.4 ms, walltime since start of marking 10084 ms) (average mu = 0.195, current mu = [1:0xffffa7915470] 83940 ms: Scavenge 1021.4 (1032.7) -> 1020.9 (1035.7) MB, 105.70 / 0.00 ms (average mu = 0.195, current mu = 0.137) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 100000000 iterations, array_ type, array_ 100000000: 16.015s
0.5 cpu, 2048 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff98b57470] 21438 ms: Scavenge 1016.1 (1029.2) -> 1015.4 (1029.7) MB, 2.80 / 0.00 ms (average mu = 0.217, current mu = 0.176) allocation failure;  [1:0xffff98b57470] 21444 ms: Scavenge 1016.6 (1029.7) -> 1016.0 (1030.5) MB, 2.82 / 0.00 ms (average mu = 0.217, current mu = 0.176) allocation failure;  [1:0xffff98b57470] 21451 ms: Scavenge 1017.3 (1030.5) -> 1016.6 (1035.2) MB, 3.07 / 0.00 ms (average mu = 0.217, current mu = 0.176) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 100000000 iterations, array_ type, array_ 100000000: 7.591s
1.0 cpu, 2048 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb459a470] 13636 ms: Scavenge 1016.2 (1029.5) -> 1015.6 (1030.0) MB, 2.73 / 0.00 ms (average mu = 0.188, current mu = 0.163) allocation failure;  [1:0xffffb459a470] 13642 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.06 / 0.00 ms (average mu = 0.188, current mu = 0.163) allocation failure;  [1:0xffffb459a470] 13649 ms: Scavenge 1017.5 (1030.7) -> 1016.8 (1035.2) MB, 3.10 / 0.00 ms (average mu = 0.188, current mu = 0.163) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 100000000 iterations, array_ type, array_ 100000000: 7.366s
2.0 cpu, 2048 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff93174470] 13216 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.80 / 0.00 ms (average mu = 0.151, current mu = 0.106) allocation failure;  [1:0xffff93174470] 13222 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 2.90 / 0.00 ms (average mu = 0.151, current mu = 0.106) allocation failure;  [1:0xffff93174470] 13229 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 3.45 / 0.00 ms (average mu = 0.151, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 100000000 iterations, array_ type, array_ 100000000: 7.398s
3.0 cpu, 2048 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff86c6f470] 13255 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.77 / 0.00 ms (average mu = 0.145, current mu = 0.105) allocation failure;  [1:0xffff86c6f470] 13261 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.95 / 0.00 ms (average mu = 0.145, current mu = 0.105) allocation failure;  [1:0xffff86c6f470] 13268 ms: Scavenge 1017.3 (1030.7) -> 1016.7 (1035.2) MB, 3.20 / 0.00 ms (average mu = 0.145, current mu = 0.105) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 100000000 iterations, array_ type, array_ 100000000: 7.316s
4.0 cpu, 2048 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb6959470] 111153 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.57 / 0.00 ms (average mu = 0.375, current mu = 0.429) allocation failure;  [1:0xffffb6959470] 111247 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 90.98 / 0.00 ms (average mu = 0.375, current mu = 0.429) allocation failure;  [1:0xffffb6959470] 111357 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 105.47 / 0.00 ms (average mu = 0.375, current mu = 0.429) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 100000000 iterations, array_ type, array_ 100000000: 16.053s
0.5 cpu, 4096 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff91bcd470] 35764 ms: Scavenge 2040.3 (2063.2) -> 2039.6 (2063.4) MB, 3.72 / 0.00 ms (average mu = 0.280, current mu = 0.311) allocation failure;  [1:0xffff91bcd470] 35772 ms: Scavenge 2040.8 (2063.4) -> 2040.2 (2064.2) MB, 3.95 / 0.00 ms (average mu = 0.280, current mu = 0.311) allocation failure;  [1:0xffff91bcd470] 35779 ms: Scavenge 2041.5 (2064.2) -> 2040.9 (2068.9) MB, 4.04 / 0.00 ms (average mu = 0.280, current mu = 0.311) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 100000000 iterations, array_ type, array_ 100000000: 7.443s
1.0 cpu, 4096 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8aba0470] 26650 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.62 / 0.00 ms (average mu = 0.186, current mu = 0.158) allocation failure;  [1:0xffff8aba0470] 26658 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 3.90 / 0.00 ms (average mu = 0.186, current mu = 0.158) allocation failure;  [1:0xffff8aba0470] 26665 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.89 / 0.00 ms (average mu = 0.186, current mu = 0.158) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 100000000 iterations, array_ type, array_ 100000000: 7.262s
2.0 cpu, 4096 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff97ba6470] 25189 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.85 / 0.00 ms (average mu = 0.132, current mu = 0.100) allocation failure;  [1:0xffff97ba6470] 25196 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 3.88 / 0.00 ms (average mu = 0.132, current mu = 0.100) allocation failure;  [1:0xffff97ba6470] 25203 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 3.61 / 0.00 ms (average mu = 0.132, current mu = 0.100) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 100000000 iterations, array_ type, array_ 100000000: 7.298s
3.0 cpu, 4096 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb4491470] 25681 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.73 / 0.00 ms (average mu = 0.126, current mu = 0.099) allocation failure;  [1:0xffffb4491470] 25688 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.83 / 0.00 ms (average mu = 0.126, current mu = 0.099) allocation failure;  [1:0xffffb4491470] 25695 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.09 / 0.00 ms (average mu = 0.126, current mu = 0.099) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 100000000 iterations, array_ type, array_ 100000000: 7.296s
4.0 cpu, 4096 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb2a46470] 150054 ms: Mark-Compact (reduce) 2044.7 (2068.7) -> 2044.6 (2066.4) MB, 16302.58 / 0.00 ms (+ 0.5 ms in 1 steps since start of marking, biggest step 0.5 ms, walltime since start of marking 16307 ms) (average mu = 0.185, current mu = [1:0xffffb2a46470] 150135 ms: Scavenge 2045.6 (2066.4) -> 2045.2 (2069.4) MB, 77.48 / 0.00 ms (average mu = 0.185, current mu = 0.168) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 100000000 iterations, array_ type, array_ 100000000: 15.999s
0.5 cpu, 8192 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff90325470] 37734 ms: Scavenge 2040.4 (2063.2) -> 2039.7 (2063.7) MB, 4.07 / 0.00 ms (average mu = 0.245, current mu = 0.201) allocation failure;  [1:0xffff90325470] 37805 ms: Scavenge 2040.9 (2063.7) -> 2040.3 (2064.4) MB, 5.22 / 0.00 ms (average mu = 0.245, current mu = 0.201) allocation failure;  [1:0xffff90325470] 37814 ms: Scavenge 2041.6 (2064.4) -> 2041.0 (2068.9) MB, 4.48 / 0.00 ms (average mu = 0.245, current mu = 0.201) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 100000000 iterations, array_ type, array_ 100000000: 7.474s
1.0 cpu, 8192 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffabcc4470] 25124 ms: Scavenge 2040.3 (2063.2) -> 2039.6 (2063.4) MB, 3.63 / 0.00 ms (average mu = 0.193, current mu = 0.147) allocation failure;  [1:0xffffabcc4470] 25131 ms: Scavenge 2040.8 (2063.4) -> 2040.2 (2064.2) MB, 4.18 / 0.00 ms (average mu = 0.193, current mu = 0.147) allocation failure;  [1:0xffffabcc4470] 25139 ms: Scavenge 2041.5 (2064.2) -> 2040.9 (2068.9) MB, 4.40 / 0.00 ms (average mu = 0.193, current mu = 0.147) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 100000000 iterations, array_ type, array_ 100000000: 7.278s
2.0 cpu, 8192 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8e834470] 26139 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.62 / 0.00 ms (average mu = 0.136, current mu = 0.113) allocation failure;  [1:0xffff8e834470] 26146 ms: Scavenge 2043.4 (2066.2) -> 2042.7 (2066.9) MB, 3.96 / 0.00 ms (average mu = 0.136, current mu = 0.113) allocation failure;  [1:0xffff8e834470] 26154 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 3.88 / 0.00 ms (average mu = 0.136, current mu = 0.113) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 100000000 iterations, array_ type, array_ 100000000: 7.339s
3.0 cpu, 8192 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 100000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff992a6470] 25714 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.22 / 0.00 ms (average mu = 0.122, current mu = 0.091) allocation failure;  [1:0xffff992a6470] 25721 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.02 / 0.00 ms (average mu = 0.122, current mu = 0.091) allocation failure;  [1:0xffff992a6470] 25729 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.06 / 0.00 ms (average mu = 0.122, current mu = 0.091) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 100000000 iterations, array_ type, array_ 100000000: 7.371s
4.0 cpu, 8192 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 100000000 iterations, object type, object 100000000: 1:00.491 (m:ss.mmm)
0.5 cpu, 16384 ram, 100000000 iterations, array_ type, array_ 100000000: 15.714s
0.5 cpu, 16384 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 100000000 iterations, object type, object 100000000: 23.177s
1.0 cpu, 16384 ram, 100000000 iterations, array_ type, array_ 100000000: 7.440s
1.0 cpu, 16384 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 100000000 iterations, object type, object 100000000: 18.151s
2.0 cpu, 16384 ram, 100000000 iterations, array_ type, array_ 100000000: 7.486s
2.0 cpu, 16384 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 100000000 iterations, object type, object 100000000: 17.656s
3.0 cpu, 16384 ram, 100000000 iterations, array_ type, array_ 100000000: 7.289s
3.0 cpu, 16384 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 100000000 iterations, object type, object 100000000: 17.990s
4.0 cpu, 16384 ram, 100000000 iterations, array_ type, array_ 100000000: 7.382s
4.0 cpu, 16384 ram, 100000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 200000000 iterations, object type,
0.5 cpu, 128 ram, 200000000 iterations, array_ type,
0.5 cpu, 128 ram, 200000000 iterations, map___ type,
1.0 cpu, 128 ram, 200000000 iterations, object type,
1.0 cpu, 128 ram, 200000000 iterations, array_ type,
1.0 cpu, 128 ram, 200000000 iterations, map___ type,
2.0 cpu, 128 ram, 200000000 iterations, object type,
2.0 cpu, 128 ram, 200000000 iterations, array_ type,
2.0 cpu, 128 ram, 200000000 iterations, map___ type,
3.0 cpu, 128 ram, 200000000 iterations, object type,
3.0 cpu, 128 ram, 200000000 iterations, array_ type,
3.0 cpu, 128 ram, 200000000 iterations, map___ type,
4.0 cpu, 128 ram, 200000000 iterations, object type,
4.0 cpu, 128 ram, 200000000 iterations, array_ type,
4.0 cpu, 128 ram, 200000000 iterations, map___ type,
0.5 cpu, 256 ram, 200000000 iterations, object type,
0.5 cpu, 256 ram, 200000000 iterations, array_ type,
0.5 cpu, 256 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff96099470] 6529 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 299.65 / 0.00 ms (average mu = 0.612, current mu = 0.000) last resort; GC in old space requested [1:0xffff96099470] 6837 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 307.86 / 0.00 ms (average mu = 0.428, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 200000000 iterations, object type,
1.0 cpu, 256 ram, 200000000 iterations, array_ type,
1.0 cpu, 256 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa0026470] 2890 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 132.97 / 0.00 ms (average mu = 0.614, current mu = 0.000) last resort; GC in old space requested [1:0xffffa0026470] 3041 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 150.64 / 0.00 ms (average mu = 0.418, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 200000000 iterations, object type,
2.0 cpu, 256 ram, 200000000 iterations, array_ type,
2.0 cpu, 256 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffabc77470] 2590 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 116.94 / 0.00 ms (average mu = 0.651, current mu = 0.000) last resort; GC in old space requested [1:0xffffabc77470] 2696 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.10 / 0.00 ms (average mu = 0.476, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 200000000 iterations, object type,
3.0 cpu, 256 ram, 200000000 iterations, array_ type,
3.0 cpu, 256 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa445a470] 2539 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 110.23 / 0.00 ms (average mu = 0.645, current mu = 0.000) last resort; GC in old space requested [1:0xffffa445a470] 2659 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 120.17 / 0.00 ms (average mu = 0.454, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 200000000 iterations, object type,
4.0 cpu, 256 ram, 200000000 iterations, array_ type,
4.0 cpu, 256 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9774d470] 2518 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 110.61 / 0.00 ms (average mu = 0.655, current mu = 0.000) last resort; GC in old space requested [1:0xffff9774d470] 2624 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.73 / 0.00 ms (average mu = 0.475, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbb3c3470] 7123 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.94 / 0.00 ms (average mu = 0.604, current mu = 0.700) allocation failure;  [1:0xffffbb3c3470] 7126 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.90 / 0.00 ms (average mu = 0.604, current mu = 0.700) allocation failure;  [1:0xffffbb3c3470] 8020 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 796.88 / 0.00 ms (average mu = 0.524, current mu = 0.436) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9880a470] 3741 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff9880a470] 3743 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.12 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff9880a470] 3862 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 0.97 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff89e40470] 6496 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 318.80 / 0.00 ms (average mu = 0.583, current mu = 0.000) last resort; GC in old space requested [1:0xffff89e40470] 6799 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 303.46 / 0.00 ms (average mu = 0.412, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaf2cf470] 2663 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.610, current mu = 0.614) allocation failure;  [1:0xffffaf2cf470] 2666 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.69 / 0.00 ms (average mu = 0.610, current mu = 0.614) allocation failure;  [1:0xffffaf2cf470] 3063 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 355.34 / 0.00 ms (average mu = 0.489, current mu = 0.375) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff96b2d470] 1715 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.06 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff96b2d470] 1717 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff96b2d470] 1780 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.07 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9b3f7470] 2883 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 133.53 / 0.00 ms (average mu = 0.606, current mu = 0.000) last resort; GC in old space requested [1:0xffff9b3f7470] 3023 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 139.17 / 0.00 ms (average mu = 0.422, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff82b50470] 2041 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.593, current mu = 0.577) allocation failure;  [1:0xffff82b50470] 2043 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.68 / 0.00 ms (average mu = 0.593, current mu = 0.577) allocation failure;  [1:0xffff82b50470] 2432 ms: Mark-Compact 342.6 (346.6) -> 266.6 (271.8) MB, 353.59 / 0.00 ms (average mu = 0.421, current mu = 0.262) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff88adf470] 1683 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff88adf470] 1686 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff88adf470] 1751 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.15 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9b7b8470] 2542 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.64 / 0.00 ms (average mu = 0.662, current mu = 0.000) last resort; GC in old space requested [1:0xffff9b7b8470] 2651 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 108.54 / 0.00 ms (average mu = 0.479, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7eda5470] 2003 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.79 / 0.00 ms (average mu = 0.590, current mu = 0.576) allocation failure;  [1:0xffff7eda5470] 2006 ms: Scavenge 228.7 (232.8) -> 228.3 (233.0) MB, 0.75 / 0.00 ms (average mu = 0.590, current mu = 0.576) allocation failure;  [1:0xffff7eda5470] 2390 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 350.66 / 0.00 ms (average mu = 0.419, current mu = 0.261) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8015e470] 1689 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8015e470] 1691 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8015e470] 1755 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.14 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffad6ec470] 2560 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 117.03 / 0.00 ms (average mu = 0.639, current mu = 0.000) last resort; GC in old space requested [1:0xffffad6ec470] 2667 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.16 / 0.00 ms (average mu = 0.467, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa9718470] 2015 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.79 / 0.00 ms (average mu = 0.584, current mu = 0.569) allocation failure;  [1:0xffffa9718470] 2018 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 0.76 / 0.00 ms (average mu = 0.584, current mu = 0.569) allocation failure;  [1:0xffffa9718470] 2403 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 350.07 / 0.00 ms (average mu = 0.418, current mu = 0.260) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffacac9470] 1694 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.06 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffacac9470] 1696 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffacac9470] 1759 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.10 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9986e470] 2531 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 108.07 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffff9986e470] 2637 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.77 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa5f71470] 41302 ms: Mark-Compact (reduce) 509.3 (519.2) -> 509.2 (516.7) MB, 1324.75 / 0.00 ms (+ 0.1 ms in 1 steps since start of marking, biggest step 0.1 ms, walltime since start of marking 1326 ms) (average mu = 0.220, current mu = 0.351)[1:0xffffa5f71470] 41366 ms: Scavenge 510.2 (516.7) -> 509.8 (519.7) MB, 1.67 / 0.00 ms (average mu = 0.220, current mu = 0.351) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa2fb1470] 7948 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffa2fb1470] 7957 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffa2fb1470] 8251 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.17 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7d847470] 14371 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 663.97 / 0.00 ms (average mu = 0.636, current mu = 0.000) last resort; GC in old space requested [1:0xffff7d847470] 15078 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 707.06 / 0.00 ms (average mu = 0.437, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb01e2470] 11624 ms: Scavenge 508.5 (517.0) -> 507.9 (517.5) MB, 2.50 / 0.00 ms (average mu = 0.225, current mu = 0.261) allocation failure;  [1:0xffffb01e2470] 11630 ms: Scavenge 509.0 (517.5) -> 508.4 (518.2) MB, 2.66 / 0.00 ms (average mu = 0.225, current mu = 0.261) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff96790470] 3761 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff96790470] 3770 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff96790470] 3917 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.34 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff981c3470] 6580 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 272.57 / 0.00 ms (average mu = 0.655, current mu = 0.000) last resort; GC in old space requested [1:0xffff981c3470] 6869 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 289.51 / 0.00 ms (average mu = 0.461, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb74c3470] 7759 ms: Scavenge 508.4 (516.7) -> 507.7 (517.2) MB, 2.62 / 0.00 ms (average mu = 0.157, current mu = 0.104) allocation failure;  [1:0xffffb74c3470] 7765 ms: Scavenge 508.9 (517.2) -> 508.3 (518.0) MB, 2.56 / 0.00 ms (average mu = 0.157, current mu = 0.104) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9f8ae470] 3664 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9f8ae470] 3672 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9f8ae470] 3815 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.11 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff97edc470] 5669 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 233.34 / 0.00 ms (average mu = 0.671, current mu = 0.000) last resort; GC in old space requested [1:0xffff97edc470] 5882 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 212.96 / 0.00 ms (average mu = 0.497, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa54fd470] 7289 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.38 / 0.00 ms (average mu = 0.138, current mu = 0.106) allocation failure;  [1:0xffffa54fd470] 7295 ms: Scavenge 509.1 (517.5) -> 508.4 (518.2) MB, 2.67 / 0.00 ms (average mu = 0.138, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff91a0e470] 3684 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff91a0e470] 3693 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff91a0e470] 3833 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.36 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff910bf470] 5495 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 213.75 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffff910bf470] 5707 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 212.02 / 0.00 ms (average mu = 0.501, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffae1e7470] 7297 ms: Scavenge 509.0 (517.5) -> 508.3 (518.0) MB, 2.47 / 0.00 ms (average mu = 0.134, current mu = 0.100) allocation failure;  [1:0xffffae1e7470] 7303 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 2.47 / 0.00 ms (average mu = 0.134, current mu = 0.100) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 200000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffae6dc470] 3717 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffae6dc470] 3725 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.12 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffae6dc470] 3866 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.22 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 200000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9cfaa470] 5497 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 208.42 / 0.00 ms (average mu = 0.684, current mu = 0.000) last resort; GC in old space requested [1:0xffff9cfaa470] 5731 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 233.88 / 0.00 ms (average mu = 0.488, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffae29a470] 66018 ms: Scavenge 1018.5 (1031.7) -> 1017.8 (1032.2) MB, 3.23 / 0.00 ms (average mu = 0.290, current mu = 0.410) allocation failure;  [1:0xffffae29a470] 66025 ms: Scavenge 1019.0 (1032.2) -> 1018.3 (1033.0) MB, 3.27 / 0.00 ms (average mu = 0.290, current mu = 0.410) allocation failure;  [1:0xffffae29a470] 66122 ms: Scavenge 1019.7 (1033.0) -> 1019.0 (1037.5) MB, 5.15 / 0.00 ms (average mu = 0.290, current mu = 0.410) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffed90a1f8
0.5 cpu, 2048 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7fb51470] 19747 ms: Scavenge 1018.6 (1032.0) -> 1017.9 (1032.5) MB, 28.04 / 0.00 ms (average mu = 0.294, current mu = 0.272) allocation failure;  [1:0xffff7fb51470] 19754 ms: Scavenge 1019.1 (1032.5) -> 1018.5 (1033.0) MB, 3.55 / 0.00 ms (average mu = 0.294, current mu = 0.272) allocation failure;  [1:0xffff7fb51470] 19760 ms: Scavenge 1019.8 (1033.0) -> 1019.1 (1037.7) MB, 3.20 / 0.00 ms (average mu = 0.294, current mu = 0.272) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffced9be68
1.0 cpu, 2048 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff81eef470] 13418 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.80 / 0.00 ms (average mu = 0.188, current mu = 0.145) allocation failure;  [1:0xffff81eef470] 13424 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 2.95 / 0.00 ms (average mu = 0.188, current mu = 0.145) allocation failure;  [1:0xffff81eef470] 13431 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.95 / 0.00 ms (average mu = 0.188, current mu = 0.145) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd3bb7b98
2.0 cpu, 2048 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff93bfc470] 13417 ms: Scavenge 1016.1 (1029.5) -> 1015.5 (1030.0) MB, 3.22 / 0.00 ms (average mu = 0.153, current mu = 0.109) allocation failure;  [1:0xffff93bfc470] 13423 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 3.06 / 0.00 ms (average mu = 0.153, current mu = 0.109) allocation failure;  [1:0xffff93bfc470] 13430 ms: Scavenge 1017.3 (1030.7) -> 1016.7 (1035.2) MB, 2.99 / 0.00 ms (average mu = 0.153, current mu = 0.109) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff49ef598
3.0 cpu, 2048 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab079470] 13192 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 9.64 / 0.00 ms (average mu = 0.149, current mu = 0.110) allocation failure;  [1:0xffffab079470] 13202 ms: Scavenge 1016.7 (1030.0) -> 1016.0 (1030.7) MB, 3.15 / 0.00 ms (average mu = 0.149, current mu = 0.110) allocation failure;  [1:0xffffab079470] 13210 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 3.15 / 0.00 ms (average mu = 0.149, current mu = 0.110) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd63f0688
4.0 cpu, 2048 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8f83d470] 129725 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 75.11 / 0.00 ms (average mu = 0.229, current mu = 0.414) allocation failure;  [1:0xffff8f83d470] 129735 ms: Scavenge 2043.2 (2065.9) -> 2042.5 (2066.7) MB, 5.05 / 0.00 ms (average mu = 0.229, current mu = 0.414) allocation failure;  [1:0xffff8f83d470] 129821 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 82.70 / 0.00 ms (average mu = 0.229, current mu = 0.414) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffedb00348
0.5 cpu, 4096 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9e583470] 40983 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 67.46 / 0.00 ms (average mu = 0.219, current mu = 0.208) allocation failure;  [1:0xffff9e583470] 40991 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 4.44 / 0.00 ms (average mu = 0.219, current mu = 0.208) allocation failure;  [1:0xffff9e583470] 41000 ms: Scavenge 2044.0 (2066.7) -> 2043.4 (2071.4) MB, 4.26 / 0.00 ms (average mu = 0.219, current mu = 0.208) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd2aa3818
1.0 cpu, 4096 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa3165470] 26574 ms: Scavenge 2042.8 (2065.4) -> 2042.1 (2065.9) MB, 3.70 / 0.00 ms (average mu = 0.186, current mu = 0.160) allocation failure;  [1:0xffffa3165470] 26583 ms: Scavenge 2043.3 (2065.9) -> 2042.6 (2066.7) MB, 5.07 / 0.00 ms (average mu = 0.186, current mu = 0.160) allocation failure;  [1:0xffffa3165470] 26590 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.29 / 0.00 ms (average mu = 0.186, current mu = 0.160) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffef837ad8
2.0 cpu, 4096 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffba78d470] 25797 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.75 / 0.00 ms (average mu = 0.136, current mu = 0.103) allocation failure;  [1:0xffffba78d470] 25804 ms: Scavenge 2043.4 (2066.2) -> 2042.7 (2066.9) MB, 4.02 / 0.00 ms (average mu = 0.136, current mu = 0.103) allocation failure;  [1:0xffffba78d470] 25811 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 3.73 / 0.00 ms (average mu = 0.136, current mu = 0.103) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc1baece8
3.0 cpu, 4096 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa4500470] 25575 ms: Scavenge 2042.8 (2065.4) -> 2042.1 (2065.9) MB, 3.62 / 0.00 ms (average mu = 0.124, current mu = 0.094) allocation failure;  [1:0xffffa4500470] 25582 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.15 / 0.00 ms (average mu = 0.124, current mu = 0.094) allocation failure;  [1:0xffffa4500470] 25590 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.14 / 0.00 ms (average mu = 0.124, current mu = 0.094) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe42a06b8
4.0 cpu, 4096 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9919c470] 100997 ms: Scavenge 2042.6 (2065.4) -> 2041.9 (2065.9) MB, 71.93 / 0.00 ms (average mu = 0.253, current mu = 0.220) allocation failure;  [1:0xffff9919c470] 101005 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 4.62 / 0.00 ms (average mu = 0.253, current mu = 0.220) allocation failure;  [1:0xffff9919c470] 101095 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 85.41 / 0.00 ms (average mu = 0.253, current mu = 0.220) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffee0b0828
0.5 cpu, 8192 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8c9c8470] 38195 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.97 / 0.00 ms (average mu = 0.311, current mu = 0.361) allocation failure;  [1:0xffff8c9c8470] 38202 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 4.09 / 0.00 ms (average mu = 0.311, current mu = 0.361) allocation failure;  [1:0xffff8c9c8470] 38209 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 3.75 / 0.00 ms (average mu = 0.311, current mu = 0.361) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcd9165c8
1.0 cpu, 8192 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab1bd470] 27072 ms: Scavenge 2042.7 (2065.4) -> 2042.1 (2065.9) MB, 4.01 / 0.00 ms (average mu = 0.175, current mu = 0.145) allocation failure;  [1:0xffffab1bd470] 27079 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.79 / 0.00 ms (average mu = 0.175, current mu = 0.145) allocation failure;  [1:0xffffab1bd470] 27087 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 4.21 / 0.00 ms (average mu = 0.175, current mu = 0.145) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff2e47838
2.0 cpu, 8192 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb1c0e470] 25900 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.81 / 0.00 ms (average mu = 0.140, current mu = 0.111) allocation failure;  [1:0xffffb1c0e470] 25909 ms: Scavenge 2043.2 (2065.9) -> 2042.5 (2066.7) MB, 6.01 / 0.00 ms (average mu = 0.140, current mu = 0.111) allocation failure;  [1:0xffffb1c0e470] 25918 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 5.43 / 0.00 ms (average mu = 0.140, current mu = 0.111) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe3bd59b8
3.0 cpu, 8192 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 200000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff92c3f470] 25705 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 4.00 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;  [1:0xffff92c3f470] 25713 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.54 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;  [1:0xffff92c3f470] 25720 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 3.65 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff82324d8
4.0 cpu, 8192 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 200000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd6553568
0.5 cpu, 16384 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 200000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe43a0138
1.0 cpu, 16384 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 200000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd63f25f8
2.0 cpu, 16384 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 200000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd0a1fbc8
3.0 cpu, 16384 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 200000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 200000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff8a527e8
4.0 cpu, 16384 ram, 200000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 300000000 iterations, object type,
0.5 cpu, 128 ram, 300000000 iterations, array_ type,
0.5 cpu, 128 ram, 300000000 iterations, map___ type,
1.0 cpu, 128 ram, 300000000 iterations, object type,
1.0 cpu, 128 ram, 300000000 iterations, array_ type,
1.0 cpu, 128 ram, 300000000 iterations, map___ type,
2.0 cpu, 128 ram, 300000000 iterations, object type,
2.0 cpu, 128 ram, 300000000 iterations, array_ type,
2.0 cpu, 128 ram, 300000000 iterations, map___ type,
3.0 cpu, 128 ram, 300000000 iterations, object type,
3.0 cpu, 128 ram, 300000000 iterations, array_ type,
3.0 cpu, 128 ram, 300000000 iterations, map___ type,
4.0 cpu, 128 ram, 300000000 iterations, object type,
4.0 cpu, 128 ram, 300000000 iterations, array_ type,
4.0 cpu, 128 ram, 300000000 iterations, map___ type,
0.5 cpu, 256 ram, 300000000 iterations, object type,
0.5 cpu, 256 ram, 300000000 iterations, array_ type,
0.5 cpu, 256 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8ef74470] 6588 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 305.18 / 0.00 ms (average mu = 0.617, current mu = 0.000) last resort; GC in old space requested [1:0xffff8ef74470] 6899 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 310.06 / 0.00 ms (average mu = 0.431, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 300000000 iterations, object type,
1.0 cpu, 256 ram, 300000000 iterations, array_ type,
1.0 cpu, 256 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb4d42470] 2970 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 142.00 / 0.00 ms (average mu = 0.625, current mu = 0.000) last resort; GC in old space requested [1:0xffffb4d42470] 3113 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 142.51 / 0.00 ms (average mu = 0.436, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 300000000 iterations, object type,
2.0 cpu, 256 ram, 300000000 iterations, array_ type,
2.0 cpu, 256 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8ab29470] 2533 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.34 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffff8ab29470] 2641 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 108.13 / 0.00 ms (average mu = 0.474, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 300000000 iterations, object type,
3.0 cpu, 256 ram, 300000000 iterations, array_ type,
3.0 cpu, 256 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb7d52470] 2538 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.65 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffffb7d52470] 2643 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.94 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 300000000 iterations, object type,
4.0 cpu, 256 ram, 300000000 iterations, array_ type,
4.0 cpu, 256 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8b16d470] 2552 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.46 / 0.00 ms (average mu = 0.661, current mu = 0.000) last resort; GC in old space requested [1:0xffff8b16d470] 2660 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.57 / 0.00 ms (average mu = 0.479, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa1aa0470] 5383 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.86 / 0.00 ms (average mu = 0.623, current mu = 0.621) allocation failure;  [1:0xffffa1aa0470] 5386 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.73 / 0.00 ms (average mu = 0.623, current mu = 0.621) allocation failure;  [1:0xffffa1aa0470] 6251 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 779.28 / 0.00 ms (average mu = 0.480, current mu = 0.351) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7fe22470] 3628 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure;  [1:0xffff7fe22470] 3630 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure;  [1:0xffff7fe22470] 3797 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.26 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7fbc7470] 6824 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 307.18 / 0.00 ms (average mu = 0.617, current mu = 0.000) last resort; GC in old space requested [1:0xffff7fbc7470] 7126 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 302.44 / 0.00 ms (average mu = 0.436, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff89194470] 2608 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.610, current mu = 0.612) allocation failure;  [1:0xffff89194470] 2610 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.73 / 0.00 ms (average mu = 0.610, current mu = 0.612) allocation failure;  [1:0xffff89194470] 3012 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 367.42 / 0.00 ms (average mu = 0.481, current mu = 0.366) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffab00b470] 1727 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.06 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffab00b470] 1730 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffab00b470] 1793 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.07 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff939f1470] 2932 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 132.22 / 0.00 ms (average mu = 0.616, current mu = 0.000) last resort; GC in old space requested [1:0xffff939f1470] 3070 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 137.79 / 0.00 ms (average mu = 0.432, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7ce74470] 2012 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.76 / 0.00 ms (average mu = 0.587, current mu = 0.573) allocation failure;  [1:0xffff7ce74470] 2014 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.75 / 0.00 ms (average mu = 0.587, current mu = 0.573) allocation failure;  [1:0xffff7ce74470] 2402 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 353.51 / 0.00 ms (average mu = 0.416, current mu = 0.259) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9b432470] 1694 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9b432470] 1696 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9b432470] 1761 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.09 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffab46a470] 2566 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.05 / 0.00 ms (average mu = 0.650, current mu = 0.000) last resort; GC in old space requested [1:0xffffab46a470] 2672 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.72 / 0.00 ms (average mu = 0.477, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8bdb0470] 2055 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.81 / 0.00 ms (average mu = 0.572, current mu = 0.549) allocation failure;  [1:0xffff8bdb0470] 2058 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.76 / 0.00 ms (average mu = 0.572, current mu = 0.549) allocation failure;  [1:0xffff8bdb0470] 2450 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 356.79 / 0.00 ms (average mu = 0.410, current mu = 0.257) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb737a470] 1684 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb737a470] 1686 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb737a470] 1749 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.08 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3fe2470] 2522 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.98 / 0.00 ms (average mu = 0.643, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3fe2470] 2629 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.16 / 0.00 ms (average mu = 0.467, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa1404470] 2041 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.568, current mu = 0.541) allocation failure;  [1:0xffffa1404470] 2043 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.71 / 0.00 ms (average mu = 0.568, current mu = 0.541) allocation failure;  [1:0xffffa1404470] 2431 ms: Mark-Compact 342.6 (346.6) -> 266.6 (271.8) MB, 352.84 / 0.00 ms (average mu = 0.410, current mu = 0.259) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa49dc470] 1815 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffa49dc470] 1817 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffa49dc470] 1883 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.04 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb84d6470] 2517 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 111.45 / 0.00 ms (average mu = 0.649, current mu = 0.000) last resort; GC in old space requested [1:0xffffb84d6470] 2626 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 108.66 / 0.00 ms (average mu = 0.469, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa08e2470] 25101 ms: Scavenge 505.6 (514.0) -> 504.9 (514.5) MB, 2.66 / 0.00 ms (average mu = 0.384, current mu = 0.383) allocation failure;  [1:0xffffa08e2470] 25191 ms: Scavenge 506.1 (514.5) -> 505.5 (515.2) MB, 87.08 / 0.00 ms (average mu = 0.384, current mu = 0.383) allocation failure;  [1:0xffffa08e2470] 25200 ms: Scavenge 506.8 (515.2) -> 506.2 (519.7) MB, 4.08 / 0.00 ms (average mu = 0.384, current mu = 0.383) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffaa83c470] 8031 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffaa83c470] 8087 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.15 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffaa83c470] 8389 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.77 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffadc3b470] 14434 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 619.67 / 0.00 ms (average mu = 0.644, current mu = 0.000) last resort; GC in old space requested [1:0xffffadc3b470] 15057 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 622.37 / 0.00 ms (average mu = 0.457, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff966c7470] 9935 ms: Scavenge 506.0 (514.5) -> 505.4 (515.0) MB, 2.23 / 0.00 ms (average mu = 0.227, current mu = 0.129) allocation failure;  [1:0xffff966c7470] 10005 ms: Scavenge 506.5 (515.0) -> 505.9 (515.7) MB, 66.86 / 0.00 ms (average mu = 0.227, current mu = 0.129) allocation failure;  [1:0xffff966c7470] 10013 ms: Scavenge 507.2 (515.7) -> 506.6 (520.2) MB, 3.15 / 0.00 ms (average mu = 0.227, current mu = 0.129) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa402b470] 3798 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa402b470] 3807 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa402b470] 3949 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff93390470] 6468 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 292.10 / 0.00 ms (average mu = 0.636, current mu = 0.000) last resort; GC in old space requested [1:0xffff93390470] 6754 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 286.79 / 0.00 ms (average mu = 0.449, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff89a37470] 7540 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.34 / 0.00 ms (average mu = 0.155, current mu = 0.107) allocation failure;  [1:0xffff89a37470] 7546 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 2.67 / 0.00 ms (average mu = 0.155, current mu = 0.107) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9c39f470] 3711 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9c39f470] 3720 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9c39f470] 3858 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.05 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb4d21470] 5631 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 212.48 / 0.00 ms (average mu = 0.688, current mu = 0.000) last resort; GC in old space requested [1:0xffffb4d21470] 5844 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 213.12 / 0.00 ms (average mu = 0.507, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb063a470] 7264 ms: Scavenge 508.3 (516.7) -> 507.6 (517.2) MB, 2.49 / 0.00 ms (average mu = 0.137, current mu = 0.103) allocation failure;  [1:0xffffb063a470] 7270 ms: Scavenge 508.8 (517.2) -> 508.2 (518.0) MB, 2.78 / 0.00 ms (average mu = 0.137, current mu = 0.103) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa82ee470] 3706 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffa82ee470] 3714 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffa82ee470] 3855 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.10 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7f30c470] 5516 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 228.76 / 0.00 ms (average mu = 0.670, current mu = 0.000) last resort; GC in old space requested [1:0xffff7f30c470] 5731 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 214.27 / 0.00 ms (average mu = 0.493, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff982a1470] 7165 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.50 / 0.00 ms (average mu = 0.139, current mu = 0.106) allocation failure;  [1:0xffff982a1470] 7171 ms: Scavenge 508.7 (517.2) -> 508.1 (518.0) MB, 2.83 / 0.00 ms (average mu = 0.139, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 300000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8cb35470] 3696 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff8cb35470] 3704 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff8cb35470] 3844 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.01 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 300000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff98578470] 5520 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 229.03 / 0.00 ms (average mu = 0.673, current mu = 0.000) last resort; GC in old space requested [1:0xffff98578470] 5751 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 230.64 / 0.00 ms (average mu = 0.484, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9934f470] 50640 ms: Scavenge 1013.4 (1028.7) -> 1012.0 (1029.5) MB, 87.48 / 0.00 ms (average mu = 0.380, current mu = 0.413) allocation failure;  [1:0xffff9934f470] 50762 ms: Scavenge 1014.1 (1029.5) -> 1013.0 (1031.0) MB, 104.78 / 0.00 ms (average mu = 0.380, current mu = 0.413) allocation failure;  [1:0xffff9934f470] 50863 ms: Scavenge 1015.7 (1031.0) -> 1014.4 (1040.2) MB, 12.25 / 0.00 ms (average mu = 0.380, current mu = 0.413) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffffcfb7138
0.5 cpu, 2048 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa6c40470] 19694 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 17.22 / 0.00 ms (average mu = 0.285, current mu = 0.309) allocation failure;  [1:0xffffa6c40470] 19700 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.96 / 0.00 ms (average mu = 0.285, current mu = 0.309) allocation failure;  [1:0xffffa6c40470] 19707 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.89 / 0.00 ms (average mu = 0.285, current mu = 0.309) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe5ab5988
1.0 cpu, 2048 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff89afa470] 13319 ms: Scavenge 1016.1 (1029.5) -> 1015.5 (1030.0) MB, 2.69 / 0.00 ms (average mu = 0.194, current mu = 0.157) allocation failure;  [1:0xffff89afa470] 13325 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 3.34 / 0.00 ms (average mu = 0.194, current mu = 0.157) allocation failure;  [1:0xffff89afa470] 13332 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 3.06 / 0.00 ms (average mu = 0.194, current mu = 0.157) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffda4fb2d8
2.0 cpu, 2048 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff94470470] 13016 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.85 / 0.00 ms (average mu = 0.154, current mu = 0.117) allocation failure;  [1:0xffff94470470] 13022 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.97 / 0.00 ms (average mu = 0.154, current mu = 0.117) allocation failure;  [1:0xffff94470470] 13029 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.91 / 0.00 ms (average mu = 0.154, current mu = 0.117) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc00b06c8
3.0 cpu, 2048 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa8145470] 13158 ms: Scavenge 1016.1 (1029.5) -> 1015.5 (1030.0) MB, 2.70 / 0.00 ms (average mu = 0.146, current mu = 0.105) allocation failure;  [1:0xffffa8145470] 13164 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 3.01 / 0.00 ms (average mu = 0.146, current mu = 0.105) allocation failure;  [1:0xffffa8145470] 13171 ms: Scavenge 1017.3 (1030.7) -> 1016.7 (1035.2) MB, 2.98 / 0.00 ms (average mu = 0.146, current mu = 0.105) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffde970a78
4.0 cpu, 2048 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8ff77470] 133574 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 94.71 / 0.00 ms (average mu = 0.209, current mu = 0.155) allocation failure;  [1:0xffff8ff77470] 133677 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 96.54 / 0.00 ms (average mu = 0.209, current mu = 0.155) allocation failure;  [1:0xffff8ff77470] 133782 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 89.94 / 0.00 ms (average mu = 0.209, current mu = 0.155) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe7d481e8
0.5 cpu, 4096 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb8845470] 39360 ms: Scavenge 2045.3 (2068.2) -> 2044.6 (2068.7) MB, 3.73 / 0.00 ms (average mu = 0.301, current mu = 0.325) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff7ed0908
1.0 cpu, 4096 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb89e6470] 26785 ms: Scavenge 2042.6 (2065.4) -> 2041.9 (2065.9) MB, 3.79 / 0.00 ms (average mu = 0.173, current mu = 0.144) allocation failure;  [1:0xffffb89e6470] 26792 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 3.95 / 0.00 ms (average mu = 0.173, current mu = 0.144) allocation failure;  [1:0xffffb89e6470] 26800 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 4.12 / 0.00 ms (average mu = 0.173, current mu = 0.144) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc0d95158
2.0 cpu, 4096 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff90891470] 25849 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 4.15 / 0.00 ms (average mu = 0.133, current mu = 0.103) allocation failure;  [1:0xffff90891470] 25856 ms: Scavenge 2043.4 (2066.2) -> 2042.7 (2066.9) MB, 3.91 / 0.00 ms (average mu = 0.133, current mu = 0.103) allocation failure;  [1:0xffff90891470] 25864 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 3.91 / 0.00 ms (average mu = 0.133, current mu = 0.103) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffec298678
3.0 cpu, 4096 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb535d470] 25758 ms: Scavenge 2042.8 (2065.4) -> 2042.1 (2065.9) MB, 3.80 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;  [1:0xffffb535d470] 25765 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.68 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;  [1:0xffffb535d470] 25772 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.08 / 0.00 ms (average mu = 0.124, current mu = 0.093) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd1cda458
4.0 cpu, 4096 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb26d4470] 121735 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.67 / 0.00 ms (average mu = 0.213, current mu = 0.159) allocation failure;  [1:0xffffb26d4470] 121745 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 6.18 / 0.00 ms (average mu = 0.213, current mu = 0.159) allocation failure;  [1:0xffffb26d4470] 121831 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 82.10 / 0.00 ms (average mu = 0.213, current mu = 0.159) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff6a94708
0.5 cpu, 8192 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffad567470] 40735 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.53 / 0.00 ms (average mu = 0.261, current mu = 0.333) allocation failure;  [1:0xffffad567470] 40742 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.88 / 0.00 ms (average mu = 0.261, current mu = 0.333) allocation failure;  [1:0xffffad567470] 40749 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 3.78 / 0.00 ms (average mu = 0.261, current mu = 0.333) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffead92fd8
1.0 cpu, 8192 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9dc19470] 27391 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.81 / 0.00 ms (average mu = 0.169, current mu = 0.165) allocation failure;  [1:0xffff9dc19470] 27399 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.39 / 0.00 ms (average mu = 0.169, current mu = 0.165) allocation failure;  [1:0xffff9dc19470] 27407 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.27 / 0.00 ms (average mu = 0.169, current mu = 0.165) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdb944848
2.0 cpu, 8192 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb6496470] 25745 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.69 / 0.00 ms (average mu = 0.140, current mu = 0.110) allocation failure;  [1:0xffffb6496470] 25752 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 3.90 / 0.00 ms (average mu = 0.140, current mu = 0.110) allocation failure;  [1:0xffffb6496470] 25761 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.64 / 0.00 ms (average mu = 0.140, current mu = 0.110) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc018be08
3.0 cpu, 8192 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 300000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaebe6470] 25260 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.67 / 0.00 ms (average mu = 0.125, current mu = 0.093) allocation failure;  [1:0xffffaebe6470] 25267 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.70 / 0.00 ms (average mu = 0.125, current mu = 0.093) allocation failure;  [1:0xffffaebe6470] 25274 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.01 / 0.00 ms (average mu = 0.125, current mu = 0.093) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd6829b78
4.0 cpu, 8192 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 300000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff2b1db68
0.5 cpu, 16384 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 300000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe0f17d08
1.0 cpu, 16384 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 300000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe6ec23a8
2.0 cpu, 16384 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 300000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcf083be8
3.0 cpu, 16384 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 300000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 300000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffffae63438
4.0 cpu, 16384 ram, 300000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 400000000 iterations, object type,
0.5 cpu, 128 ram, 400000000 iterations, array_ type,
0.5 cpu, 128 ram, 400000000 iterations, map___ type,
1.0 cpu, 128 ram, 400000000 iterations, object type,
1.0 cpu, 128 ram, 400000000 iterations, array_ type,
1.0 cpu, 128 ram, 400000000 iterations, map___ type,
2.0 cpu, 128 ram, 400000000 iterations, object type,
2.0 cpu, 128 ram, 400000000 iterations, array_ type,
2.0 cpu, 128 ram, 400000000 iterations, map___ type,
3.0 cpu, 128 ram, 400000000 iterations, object type,
3.0 cpu, 128 ram, 400000000 iterations, array_ type,
3.0 cpu, 128 ram, 400000000 iterations, map___ type,
4.0 cpu, 128 ram, 400000000 iterations, object type,
4.0 cpu, 128 ram, 400000000 iterations, array_ type,
4.0 cpu, 128 ram, 400000000 iterations, map___ type,
0.5 cpu, 256 ram, 400000000 iterations, object type,
0.5 cpu, 256 ram, 400000000 iterations, array_ type,
0.5 cpu, 256 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9add9470] 6794 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 374.67 / 0.00 ms (average mu = 0.595, current mu = 0.000) last resort; GC in old space requested [1:0xffff9add9470] 7094 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 300.57 / 0.00 ms (average mu = 0.426, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 400000000 iterations, object type,
1.0 cpu, 256 ram, 400000000 iterations, array_ type,
1.0 cpu, 256 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb307e470] 2907 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 136.62 / 0.00 ms (average mu = 0.613, current mu = 0.000) last resort; GC in old space requested [1:0xffffb307e470] 3045 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 138.18 / 0.00 ms (average mu = 0.429, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 400000000 iterations, object type,
2.0 cpu, 256 ram, 400000000 iterations, array_ type,
2.0 cpu, 256 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbc752470] 2540 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 110.58 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffffbc752470] 2646 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.78 / 0.00 ms (average mu = 0.479, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 400000000 iterations, object type,
3.0 cpu, 256 ram, 400000000 iterations, array_ type,
3.0 cpu, 256 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa0c63470] 2574 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 119.36 / 0.00 ms (average mu = 0.634, current mu = 0.000) last resort; GC in old space requested [1:0xffffa0c63470] 2690 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 116.46 / 0.00 ms (average mu = 0.453, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 400000000 iterations, object type,
4.0 cpu, 256 ram, 400000000 iterations, array_ type,
4.0 cpu, 256 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffab3c3470] 2915 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 106.87 / 0.00 ms (average mu = 0.671, current mu = 0.000) last resort; GC in old space requested [1:0xffffab3c3470] 3024 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 109.02 / 0.00 ms (average mu = 0.487, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffba701470] 8535 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.92 / 0.00 ms (average mu = 0.443, current mu = 0.435) allocation failure;  [1:0xffffba701470] 8538 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 1.16 / 0.00 ms (average mu = 0.443, current mu = 0.435) allocation failure;  [1:0xffffba701470] 10411 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 1774.77 / 0.00 ms (average mu = 0.384, current mu = 0.338) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7f6a6470] 3612 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7f6a6470] 3615 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7f6a6470] 3733 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.13 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffab5fb470] 6377 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 365.32 / 0.00 ms (average mu = 0.583, current mu = 0.000) last resort; GC in old space requested [1:0xffffab5fb470] 6690 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 312.92 / 0.00 ms (average mu = 0.410, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff866b4470] 2734 ms: Scavenge 228.6 (232.5) -> 228.2 (233.0) MB, 0.74 / 0.00 ms (average mu = 0.508, current mu = 0.443) allocation failure;  [1:0xffff866b4470] 2737 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.95 / 0.00 ms (average mu = 0.508, current mu = 0.443) allocation failure;  [1:0xffff866b4470] 3143 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 369.74 / 0.00 ms (average mu = 0.455, current mu = 0.403) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa1aa7470] 1715 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffa1aa7470] 1718 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffa1aa7470] 1782 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.08 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb2cad470] 2963 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 145.85 / 0.00 ms (average mu = 0.598, current mu = 0.000) last resort; GC in old space requested [1:0xffffb2cad470] 3100 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 137.18 / 0.00 ms (average mu = 0.422, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb9752470] 1998 ms: Scavenge 228.6 (232.5) -> 228.2 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.583, current mu = 0.566) allocation failure;  [1:0xffffb9752470] 2000 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.67 / 0.00 ms (average mu = 0.583, current mu = 0.566) allocation failure;  [1:0xffffb9752470] 2385 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 349.29 / 0.00 ms (average mu = 0.426, current mu = 0.287) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9ee8f470] 1671 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.996) allocation failure;  [1:0xffff9ee8f470] 1673 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.996, current mu = 0.996) allocation failure;  [1:0xffff9ee8f470] 1739 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.07 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7e447470] 2535 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.74 / 0.00 ms (average mu = 0.638, current mu = 0.000) last resort; GC in old space requested [1:0xffff7e447470] 2643 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.47 / 0.00 ms (average mu = 0.465, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff97346470] 1970 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.74 / 0.00 ms (average mu = 0.593, current mu = 0.578) allocation failure;  [1:0xffff97346470] 1972 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.83 / 0.00 ms (average mu = 0.593, current mu = 0.578) allocation failure;  [1:0xffff97346470] 2352 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 344.97 / 0.00 ms (average mu = 0.421, current mu = 0.264) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8ad17470] 1668 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff8ad17470] 1670 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff8ad17470] 1734 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.13 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7da83470] 2532 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.35 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffff7da83470] 2638 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.60 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff88ff2470] 1977 ms: Scavenge 228.4 (232.8) -> 228.1 (233.0) MB, 0.68 / 0.00 ms (average mu = 0.592, current mu = 0.573) allocation failure;  [1:0xffff88ff2470] 1980 ms: Scavenge 228.7 (233.0) -> 228.4 (233.3) MB, 0.68 / 0.00 ms (average mu = 0.592, current mu = 0.573) allocation failure;  [1:0xffff88ff2470] 2366 ms: Mark-Compact 342.4 (346.6) -> 266.5 (271.5) MB, 351.50 / 0.00 ms (average mu = 0.418, current mu = 0.259) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb85df470] 1694 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb85df470] 1697 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb85df470] 1762 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.35 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8a068470] 2552 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.64 / 0.00 ms (average mu = 0.653, current mu = 0.000) last resort; GC in old space requested [1:0xffff8a068470] 2660 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 108.19 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa79e0470] 34505 ms: Scavenge 502.9 (511.2) -> 502.3 (512.0) MB, 12.34 / 0.00 ms (average mu = 0.229, current mu = 0.185) allocation failure;  [1:0xffffa79e0470] 34708 ms: Scavenge 503.6 (512.0) -> 503.0 (516.5) MB, 5.81 / 0.00 ms (average mu = 0.229, current mu = 0.185) allocation failure;  [1:0xffffa79e0470] 34993 ms: Scavenge 506.2 (516.5) -> 504.7 (517.2) MB, 182.09 / 0.00 ms (average mu = 0.229, current mu = 0.185) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff86a78470] 8044 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff86a78470] 8053 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff86a78470] 8348 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.13 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa835c470] 14383 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 665.85 / 0.00 ms (average mu = 0.639, current mu = 0.000) last resort; GC in old space requested [1:0xffffa835c470] 15030 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 647.70 / 0.00 ms (average mu = 0.450, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff89d64470] 10096 ms: Scavenge 505.9 (514.2) -> 505.2 (514.7) MB, 2.40 / 0.00 ms (average mu = 0.260, current mu = 0.260) allocation failure;  [1:0xffff89d64470] 10102 ms: Scavenge 506.4 (514.7) -> 505.8 (515.5) MB, 2.43 / 0.00 ms (average mu = 0.260, current mu = 0.260) allocation failure;  [1:0xffff89d64470] 10108 ms: Scavenge 507.1 (515.5) -> 506.5 (520.0) MB, 2.39 / 0.00 ms (average mu = 0.260, current mu = 0.260) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7ec9d470] 3781 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7ec9d470] 3789 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7ec9d470] 3943 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.11 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffab4bf470] 6622 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 290.34 / 0.00 ms (average mu = 0.636, current mu = 0.000) last resort; GC in old space requested [1:0xffffab4bf470] 6899 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 277.37 / 0.00 ms (average mu = 0.456, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff98e06470] 7391 ms: Scavenge 508.5 (517.0) -> 507.8 (517.5) MB, 10.73 / 0.00 ms (average mu = 0.149, current mu = 0.124) allocation failure;  [1:0xffff98e06470] 7397 ms: Scavenge 509.0 (517.5) -> 508.4 (518.2) MB, 2.71 / 0.00 ms (average mu = 0.149, current mu = 0.124) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa42c9470] 3686 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.12 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffa42c9470] 3695 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffffa42c9470] 3836 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.13 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffac09e470] 5708 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 211.74 / 0.00 ms (average mu = 0.691, current mu = 0.000) last resort; GC in old space requested [1:0xffffac09e470] 5921 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 212.94 / 0.00 ms (average mu = 0.510, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa4d17470] 7131 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.30 / 0.00 ms (average mu = 0.138, current mu = 0.105) allocation failure;  [1:0xffffa4d17470] 7136 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 2.35 / 0.00 ms (average mu = 0.138, current mu = 0.105) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffac65c470] 3657 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffac65c470] 3666 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffac65c470] 3807 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.29 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbb1b9470] 5536 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 222.75 / 0.00 ms (average mu = 0.678, current mu = 0.000) last resort; GC in old space requested [1:0xffffbb1b9470] 5749 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 213.18 / 0.00 ms (average mu = 0.499, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb7586470] 7308 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.45 / 0.00 ms (average mu = 0.133, current mu = 0.099) allocation failure;  [1:0xffffb7586470] 7314 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 2.52 / 0.00 ms (average mu = 0.133, current mu = 0.099) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 400000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff93e00470] 3669 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff93e00470] 3677 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff93e00470] 3819 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.39 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 400000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffab92b470] 5797 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 228.13 / 0.00 ms (average mu = 0.673, current mu = 0.000) last resort; GC in old space requested [1:0xffffab92b470] 6027 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 229.76 / 0.00 ms (average mu = 0.487, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff93036470] 97459 ms: Mark-Compact (reduce) 1021.0 (1035.7) -> 1020.9 (1033.2) MB, 9613.15 / 0.00 ms (+ 0.5 ms in 1 steps since start of marking, biggest step 0.5 ms, walltime since start of marking 9617 ms) (average mu = 0.174, current mu = 0.[1:0xffff93036470] 97550 ms: Scavenge 1021.9 (1033.2) -> 1021.4 (1036.2) MB, 4.24 / 0.00 ms (average mu = 0.174, current mu = 0.171) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd92ef508
0.5 cpu, 2048 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8c6d8470] 21007 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 3.18 / 0.00 ms (average mu = 0.227, current mu = 0.176) allocation failure;  [1:0xffff8c6d8470] 21013 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 2.77 / 0.00 ms (average mu = 0.227, current mu = 0.176) allocation failure;  [1:0xffff8c6d8470] 21019 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 2.91 / 0.00 ms (average mu = 0.227, current mu = 0.176) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd8363118
1.0 cpu, 2048 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb8094470] 13284 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.90 / 0.00 ms (average mu = 0.197, current mu = 0.160) allocation failure;  [1:0xffffb8094470] 13289 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 2.81 / 0.00 ms (average mu = 0.197, current mu = 0.160) allocation failure;  [1:0xffffb8094470] 13296 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 3.03 / 0.00 ms (average mu = 0.197, current mu = 0.160) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd48a0508
2.0 cpu, 2048 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffabb80470] 13011 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.76 / 0.00 ms (average mu = 0.156, current mu = 0.122) allocation failure;  [1:0xffffabb80470] 13017 ms: Scavenge 1016.7 (1030.0) -> 1016.0 (1030.7) MB, 2.96 / 0.00 ms (average mu = 0.156, current mu = 0.122) allocation failure;  [1:0xffffabb80470] 13023 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.99 / 0.00 ms (average mu = 0.156, current mu = 0.122) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcb7a4d68
3.0 cpu, 2048 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa9eed470] 12872 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.81 / 0.00 ms (average mu = 0.154, current mu = 0.112) allocation failure;  [1:0xffffa9eed470] 12878 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 2.89 / 0.00 ms (average mu = 0.154, current mu = 0.112) allocation failure;  [1:0xffffa9eed470] 12884 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 2.95 / 0.00 ms (average mu = 0.154, current mu = 0.112) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff2208c58
4.0 cpu, 2048 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaceca470] 135578 ms: Scavenge 2046.1 (2067.9) -> 2045.8 (2067.4) MB, 3.06 / 0.00 ms (average mu = 0.268, current mu = 0.412) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc6fb3128
0.5 cpu, 4096 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa9128470] 41386 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.63 / 0.00 ms (average mu = 0.276, current mu = 0.327) allocation failure;  [1:0xffffa9128470] 41418 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.60 / 0.00 ms (average mu = 0.276, current mu = 0.327) allocation failure;  [1:0xffffa9128470] 41425 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.12 / 0.00 ms (average mu = 0.276, current mu = 0.327) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd8fe1338
1.0 cpu, 4096 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa05a8470] 26173 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.59 / 0.00 ms (average mu = 0.171, current mu = 0.135) allocation failure;  [1:0xffffa05a8470] 26180 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 3.92 / 0.00 ms (average mu = 0.171, current mu = 0.135) allocation failure;  [1:0xffffa05a8470] 26188 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 4.25 / 0.00 ms (average mu = 0.171, current mu = 0.135) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe02f18c8
2.0 cpu, 4096 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8af94470] 25291 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.80 / 0.00 ms (average mu = 0.136, current mu = 0.109) allocation failure;  [1:0xffff8af94470] 25298 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 3.99 / 0.00 ms (average mu = 0.136, current mu = 0.109) allocation failure;  [1:0xffff8af94470] 25306 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 3.87 / 0.00 ms (average mu = 0.136, current mu = 0.109) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe45af6a8
3.0 cpu, 4096 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff82c96470] 25246 ms: Scavenge 2042.7 (2065.4) -> 2042.1 (2065.9) MB, 3.79 / 0.00 ms (average mu = 0.128, current mu = 0.094) allocation failure;  [1:0xffff82c96470] 25254 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.50 / 0.00 ms (average mu = 0.128, current mu = 0.094) allocation failure;  [1:0xffff82c96470] 25261 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 4.08 / 0.00 ms (average mu = 0.128, current mu = 0.094) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe24122c8
4.0 cpu, 4096 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff97fd6470] 141406 ms: Scavenge 2042.7 (2065.4) -> 2042.1 (2065.9) MB, 5.26 / 0.00 ms (average mu = 0.195, current mu = 0.147) allocation failure;  [1:0xffff97fd6470] 141416 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 5.98 / 0.00 ms (average mu = 0.195, current mu = 0.147) allocation failure;  [1:0xffff97fd6470] 141602 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 97.61 / 0.00 ms (average mu = 0.195, current mu = 0.147) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff356e7b8
0.5 cpu, 8192 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9ac49470] 41678 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.71 / 0.00 ms (average mu = 0.237, current mu = 0.215) allocation failure;  [1:0xffff9ac49470] 41685 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.88 / 0.00 ms (average mu = 0.237, current mu = 0.215) allocation failure;  [1:0xffff9ac49470] 41693 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 3.99 / 0.00 ms (average mu = 0.237, current mu = 0.215) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe48340f8
1.0 cpu, 8192 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff82810470] 27219 ms: Scavenge 2042.7 (2065.4) -> 2042.1 (2065.9) MB, 3.87 / 0.00 ms (average mu = 0.172, current mu = 0.148) allocation failure;  [1:0xffff82810470] 27227 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.87 / 0.00 ms (average mu = 0.172, current mu = 0.148) allocation failure;  [1:0xffff82810470] 27235 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 4.36 / 0.00 ms (average mu = 0.172, current mu = 0.148) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe4d74578
2.0 cpu, 8192 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8440c470] 25290 ms: Scavenge 2042.6 (2065.4) -> 2042.0 (2065.9) MB, 4.09 / 0.00 ms (average mu = 0.141, current mu = 0.115) allocation failure;  [1:0xffff8440c470] 25297 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 4.12 / 0.00 ms (average mu = 0.141, current mu = 0.115) allocation failure;  [1:0xffff8440c470] 25305 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 4.25 / 0.00 ms (average mu = 0.141, current mu = 0.115) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffffc3faaf8
3.0 cpu, 8192 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 400000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff98149470] 25439 ms: Scavenge 2042.6 (2065.4) -> 2041.9 (2065.9) MB, 4.30 / 0.00 ms (average mu = 0.123, current mu = 0.093) allocation failure;  [1:0xffff98149470] 25447 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 5.40 / 0.00 ms (average mu = 0.123, current mu = 0.093) allocation failure;  [1:0xffff98149470] 25455 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 3.79 / 0.00 ms (average mu = 0.123, current mu = 0.093) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff976cc78
4.0 cpu, 8192 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 400000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd38be928
0.5 cpu, 16384 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 400000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffffed313a8
1.0 cpu, 16384 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 400000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe7476708
2.0 cpu, 16384 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 400000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffea68ba08
3.0 cpu, 16384 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 400000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 400000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc1542118
4.0 cpu, 16384 ram, 400000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 500000000 iterations, object type,
0.5 cpu, 128 ram, 500000000 iterations, array_ type,
0.5 cpu, 128 ram, 500000000 iterations, map___ type,
1.0 cpu, 128 ram, 500000000 iterations, object type,
1.0 cpu, 128 ram, 500000000 iterations, array_ type,
1.0 cpu, 128 ram, 500000000 iterations, map___ type,
2.0 cpu, 128 ram, 500000000 iterations, object type,
2.0 cpu, 128 ram, 500000000 iterations, array_ type,
2.0 cpu, 128 ram, 500000000 iterations, map___ type,
3.0 cpu, 128 ram, 500000000 iterations, object type,
3.0 cpu, 128 ram, 500000000 iterations, array_ type,
3.0 cpu, 128 ram, 500000000 iterations, map___ type,
4.0 cpu, 128 ram, 500000000 iterations, object type,
4.0 cpu, 128 ram, 500000000 iterations, array_ type,
4.0 cpu, 128 ram, 500000000 iterations, map___ type,
0.5 cpu, 256 ram, 500000000 iterations, object type,
0.5 cpu, 256 ram, 500000000 iterations, array_ type,
0.5 cpu, 256 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa9afd470] 6672 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 297.95 / 0.00 ms (average mu = 0.610, current mu = 0.000) last resort; GC in old space requested [1:0xffffa9afd470] 6966 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 293.81 / 0.00 ms (average mu = 0.433, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 500000000 iterations, object type,
1.0 cpu, 256 ram, 500000000 iterations, array_ type,
1.0 cpu, 256 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff839f6470] 3018 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 138.97 / 0.00 ms (average mu = 0.609, current mu = 0.000) last resort; GC in old space requested [1:0xffff839f6470] 3161 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 142.25 / 0.00 ms (average mu = 0.426, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 500000000 iterations, object type,
2.0 cpu, 256 ram, 500000000 iterations, array_ type,
2.0 cpu, 256 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa7e34470] 2551 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.75 / 0.00 ms (average mu = 0.661, current mu = 0.000) last resort; GC in old space requested [1:0xffffa7e34470] 2658 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.08 / 0.00 ms (average mu = 0.480, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 500000000 iterations, object type,
3.0 cpu, 256 ram, 500000000 iterations, array_ type,
3.0 cpu, 256 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff91de8470] 2549 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.78 / 0.00 ms (average mu = 0.659, current mu = 0.000) last resort; GC in old space requested [1:0xffff91de8470] 2665 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 115.89 / 0.00 ms (average mu = 0.467, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 500000000 iterations, object type,
4.0 cpu, 256 ram, 500000000 iterations, array_ type,
4.0 cpu, 256 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff82fda470] 2534 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.29 / 0.00 ms (average mu = 0.659, current mu = 0.000) last resort; GC in old space requested [1:0xffff82fda470] 2649 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 115.32 / 0.00 ms (average mu = 0.468, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaaa29470] 5485 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.84 / 0.00 ms (average mu = 0.629, current mu = 0.624) allocation failure;  [1:0xffffaaa29470] 5488 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 1.17 / 0.00 ms (average mu = 0.629, current mu = 0.624) allocation failure;  [1:0xffffaaa29470] 7812 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 2226.53 / 0.00 ms (average mu = 0.325, current mu = 0.208) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9ab1d470] 3610 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.987, current mu = 0.998) allocation failure;  [1:0xffff9ab1d470] 3612 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.987, current mu = 0.998) allocation failure;  [1:0xffff9ab1d470] 3778 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.45 / 0.00 ms (average mu = 0.995, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8e5cd470] 6691 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 354.77 / 0.00 ms (average mu = 0.541, current mu = 0.000) last resort; GC in old space requested [1:0xffff8e5cd470] 7004 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 312.85 / 0.00 ms (average mu = 0.385, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa5644470] 2896 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.83 / 0.00 ms (average mu = 0.469, current mu = 0.447) allocation failure;  [1:0xffffa5644470] 2899 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.81 / 0.00 ms (average mu = 0.469, current mu = 0.447) allocation failure;  [1:0xffffa5644470] 3286 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 350.74 / 0.00 ms (average mu = 0.442, current mu = 0.413) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb16e8470] 1894 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb16e8470] 1896 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb16e8470] 1960 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.11 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3d41470] 3088 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 139.80 / 0.00 ms (average mu = 0.587, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3d41470] 3226 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 138.07 / 0.00 ms (average mu = 0.421, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb05e9470] 2069 ms: Scavenge 228.6 (232.5) -> 228.2 (233.0) MB, 0.74 / 0.00 ms (average mu = 0.579, current mu = 0.559) allocation failure;  [1:0xffffb05e9470] 2071 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.72 / 0.00 ms (average mu = 0.579, current mu = 0.559) allocation failure;  [1:0xffffb05e9470] 2456 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 350.38 / 0.00 ms (average mu = 0.419, current mu = 0.270) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff93555470] 1689 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.996) allocation failure;  [1:0xffff93555470] 1691 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.996) allocation failure;  [1:0xffff93555470] 1757 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.20 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8ddcd470] 2536 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.02 / 0.00 ms (average mu = 0.652, current mu = 0.000) last resort; GC in old space requested [1:0xffff8ddcd470] 2645 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 108.29 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8fc6e470] 2013 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.72 / 0.00 ms (average mu = 0.593, current mu = 0.574) allocation failure;  [1:0xffff8fc6e470] 2015 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.79 / 0.00 ms (average mu = 0.593, current mu = 0.574) allocation failure;  [1:0xffff8fc6e470] 2403 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 353.18 / 0.00 ms (average mu = 0.420, current mu = 0.262) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffabd3b470] 1687 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffabd3b470] 1689 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffabd3b470] 1755 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.28 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb839c470] 2487 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.68 / 0.00 ms (average mu = 0.656, current mu = 0.000) last resort; GC in old space requested [1:0xffffb839c470] 2613 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 125.95 / 0.00 ms (average mu = 0.452, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff919f3470] 2047 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.72 / 0.00 ms (average mu = 0.577, current mu = 0.560) allocation failure;  [1:0xffff919f3470] 2049 ms: Scavenge 228.7 (232.8) -> 228.3 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.577, current mu = 0.560) allocation failure;  [1:0xffff919f3470] 2435 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 350.58 / 0.00 ms (average mu = 0.414, current mu = 0.261) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9c5f0470] 1710 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9c5f0470] 1712 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff9c5f0470] 1777 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 0.98 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa3f7c470] 2538 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 107.31 / 0.00 ms (average mu = 0.662, current mu = 0.000) last resort; GC in old space requested [1:0xffffa3f7c470] 2646 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.53 / 0.00 ms (average mu = 0.480, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa6967470] 36792 ms: Scavenge 506.1 (514.5) -> 505.4 (515.0) MB, 89.77 / 0.00 ms (average mu = 0.203, current mu = 0.157) allocation failure;  [1:0xffffa6967470] 36897 ms: Scavenge 506.6 (515.0) -> 506.0 (515.7) MB, 3.68 / 0.00 ms (average mu = 0.203, current mu = 0.157) allocation failure;  [1:0xffffa6967470] 37011 ms: Scavenge 507.3 (515.7) -> 506.7 (520.2) MB, 3.13 / 0.00 ms (average mu = 0.203, current mu = 0.157) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8d6c6470] 8004 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff8d6c6470] 8013 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff8d6c6470] 8315 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.08 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff858d5470] 14392 ms: Mark-Compact (reduce) 353.9 (364.7) -> 353.9 (357.7) MB, 674.28 / 0.00 ms (average mu = 0.621, current mu = 0.000) last resort; GC in old space requested [1:0xffff858d5470] 15092 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 699.41 / 0.00 ms (average mu = 0.428, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa8dab470] 9711 ms: Scavenge 509.0 (517.5) -> 508.3 (518.0) MB, 2.52 / 0.00 ms (average mu = 0.271, current mu = 0.272) allocation failure;  [1:0xffffa8dab470] 9717 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 2.75 / 0.00 ms (average mu = 0.271, current mu = 0.272) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffac481470] 3788 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffac481470] 3797 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffac481470] 3939 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.05 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa9e03470] 6530 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 273.29 / 0.00 ms (average mu = 0.656, current mu = 0.000) last resort; GC in old space requested [1:0xffffa9e03470] 6820 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 289.94 / 0.00 ms (average mu = 0.461, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8ec37470] 7033 ms: Scavenge 505.7 (514.0) -> 505.0 (514.5) MB, 2.39 / 0.00 ms (average mu = 0.185, current mu = 0.109) allocation failure;  [1:0xffff8ec37470] 7039 ms: Scavenge 506.2 (514.5) -> 505.5 (515.2) MB, 2.55 / 0.00 ms (average mu = 0.185, current mu = 0.109) allocation failure;  [1:0xffff8ec37470] 7045 ms: Scavenge 506.9 (515.2) -> 506.2 (520.0) MB, 2.75 / 0.00 ms (average mu = 0.185, current mu = 0.109) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff80ca6470] 3669 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.12 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff80ca6470] 3677 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff80ca6470] 3818 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.41 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9a646470] 5685 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 226.58 / 0.00 ms (average mu = 0.669, current mu = 0.000) last resort; GC in old space requested [1:0xffff9a646470] 5896 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 210.26 / 0.00 ms (average mu = 0.496, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9835e470] 7186 ms: Scavenge 508.3 (516.7) -> 507.6 (517.2) MB, 2.27 / 0.00 ms (average mu = 0.135, current mu = 0.101) allocation failure;  [1:0xffff9835e470] 7192 ms: Scavenge 508.8 (517.2) -> 508.2 (518.0) MB, 2.48 / 0.00 ms (average mu = 0.135, current mu = 0.101) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9c3f9470] 3703 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9c3f9470] 3712 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9c3f9470] 3854 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.55 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa0df7470] 5560 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 211.75 / 0.00 ms (average mu = 0.678, current mu = 0.000) last resort; GC in old space requested [1:0xffffa0df7470] 5772 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 212.05 / 0.00 ms (average mu = 0.500, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff92764470] 7161 ms: Scavenge 508.5 (517.0) -> 507.8 (517.5) MB, 2.35 / 0.00 ms (average mu = 0.136, current mu = 0.101) allocation failure;  [1:0xffff92764470] 7167 ms: Scavenge 509.0 (517.5) -> 508.4 (518.2) MB, 2.54 / 0.00 ms (average mu = 0.136, current mu = 0.101) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 500000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb7fa0470] 3704 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffb7fa0470] 3713 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffb7fa0470] 3855 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 500000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff90d9e470] 5501 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 212.36 / 0.00 ms (average mu = 0.684, current mu = 0.000) last resort; GC in old space requested [1:0xffff90d9e470] 5717 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 215.63 / 0.00 ms (average mu = 0.500, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9a8ee470] 95662 ms: Mark-Compact (reduce) 1021.5 (1036.2) -> 1021.4 (1033.7) MB, 8296.75 / 0.00 ms (+ 0.7 ms in 1 steps since start of marking, biggest step 0.7 ms, walltime since start of marking 8299 ms) (average mu = 0.177, current mu = 0.[1:0xffff9a8ee470] 95760 ms: Scavenge 1022.4 (1033.7) -> 1022.0 (1036.7) MB, 84.47 / 0.00 ms (average mu = 0.177, current mu = 0.162) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd8056548
0.5 cpu, 2048 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb0d1e470] 21313 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 3.15 / 0.00 ms (average mu = 0.210, current mu = 0.192) allocation failure;  [1:0xffffb0d1e470] 21320 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.20 / 0.00 ms (average mu = 0.210, current mu = 0.192) allocation failure;  [1:0xffffb0d1e470] 21327 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 3.02 / 0.00 ms (average mu = 0.210, current mu = 0.192) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffffb33f488
1.0 cpu, 2048 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffae65d470] 17730 ms: Scavenge 1013.4 (1028.5) -> 1011.9 (1029.2) MB, 4.13 / 0.00 ms (average mu = 0.129, current mu = 0.082) allocation failure;  [1:0xffffae65d470] 17741 ms: Scavenge 1014.0 (1029.2) -> 1012.9 (1031.0) MB, 5.30 / 0.00 ms (average mu = 0.129, current mu = 0.082) allocation failure;  [1:0xffffae65d470] 17753 ms: Scavenge 1015.6 (1031.0) -> 1014.3 (1040.0) MB, 4.69 / 0.00 ms (average mu = 0.129, current mu = 0.082) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffedb5c2a8
2.0 cpu, 2048 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb82d9470] 13005 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.79 / 0.00 ms (average mu = 0.153, current mu = 0.110) allocation failure;  [1:0xffffb82d9470] 13012 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.97 / 0.00 ms (average mu = 0.153, current mu = 0.110) allocation failure;  [1:0xffffb82d9470] 13018 ms: Scavenge 1017.3 (1030.7) -> 1016.7 (1035.2) MB, 2.84 / 0.00 ms (average mu = 0.153, current mu = 0.110) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc569bd98
3.0 cpu, 2048 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffba8ef470] 13128 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.62 / 0.00 ms (average mu = 0.153, current mu = 0.114) allocation failure;  [1:0xffffba8ef470] 13134 ms: Scavenge 1016.7 (1030.0) -> 1016.0 (1030.7) MB, 3.16 / 0.00 ms (average mu = 0.153, current mu = 0.114) allocation failure;  [1:0xffffba8ef470] 13141 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 3.03 / 0.00 ms (average mu = 0.153, current mu = 0.114) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff90566a8
4.0 cpu, 2048 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9f2d5470] 174510 ms: Mark-Compact 2048.0 (2069.9) -> 2047.5 (2069.4) MB, 7988.60 / 0.00 ms (average mu = 0.062, current mu = 0.001) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd9e3d7a8
0.5 cpu, 4096 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8bd19470] 38946 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.68 / 0.00 ms (average mu = 0.302, current mu = 0.326) allocation failure;  [1:0xffff8bd19470] 38953 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 3.97 / 0.00 ms (average mu = 0.302, current mu = 0.326) allocation failure;  [1:0xffff8bd19470] 39000 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 5.23 / 0.00 ms (average mu = 0.302, current mu = 0.326) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffff53e0c8
1.0 cpu, 4096 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb213e470] 26551 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.84 / 0.00 ms (average mu = 0.180, current mu = 0.154) allocation failure;  [1:0xffffb213e470] 26558 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.93 / 0.00 ms (average mu = 0.180, current mu = 0.154) allocation failure;  [1:0xffffb213e470] 26577 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 4.31 / 0.00 ms (average mu = 0.180, current mu = 0.154) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd5581cb8
2.0 cpu, 4096 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8ea55470] 25509 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.02 / 0.00 ms (average mu = 0.143, current mu = 0.114) allocation failure;  [1:0xffff8ea55470] 25516 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.78 / 0.00 ms (average mu = 0.143, current mu = 0.114) allocation failure;  [1:0xffff8ea55470] 25523 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.01 / 0.00 ms (average mu = 0.143, current mu = 0.114) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc7949e48
3.0 cpu, 4096 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa73a0470] 27276 ms: Scavenge 2039.9 (2062.9) -> 2039.2 (2063.2) MB, 3.43 / 0.00 ms (average mu = 0.144, current mu = 0.102) allocation failure;  [1:0xffffa73a0470] 27283 ms: Scavenge 2040.4 (2063.2) -> 2039.8 (2063.9) MB, 3.74 / 0.00 ms (average mu = 0.144, current mu = 0.102) allocation failure;  [1:0xffffa73a0470] 27293 ms: Scavenge 2041.1 (2063.9) -> 2040.5 (2068.4) MB, 5.09 / 0.00 ms (average mu = 0.144, current mu = 0.102) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff81faa98
4.0 cpu, 4096 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa6feb470] 182073 ms: Scavenge 2046.8 (2068.7) -> 2046.5 (2068.2) MB, 79.57 / 0.00 ms (average mu = 0.195, current mu = 0.149) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff4365548
0.5 cpu, 8192 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff96c17470] 44209 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 3.78 / 0.00 ms (average mu = 0.207, current mu = 0.180) allocation failure;  [1:0xffff96c17470] 44216 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 3.78 / 0.00 ms (average mu = 0.207, current mu = 0.180) allocation failure;  [1:0xffff96c17470] 44223 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.98 / 0.00 ms (average mu = 0.207, current mu = 0.180) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe82317d8
1.0 cpu, 8192 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa371f470] 26409 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.85 / 0.00 ms (average mu = 0.183, current mu = 0.155) allocation failure;  [1:0xffffa371f470] 26416 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 3.78 / 0.00 ms (average mu = 0.183, current mu = 0.155) allocation failure;  [1:0xffffa371f470] 26423 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.89 / 0.00 ms (average mu = 0.183, current mu = 0.155) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc105a7c8
2.0 cpu, 8192 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa6dea470] 25250 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.85 / 0.00 ms (average mu = 0.138, current mu = 0.108) allocation failure;  [1:0xffffa6dea470] 25258 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.09 / 0.00 ms (average mu = 0.138, current mu = 0.108) allocation failure;  [1:0xffffa6dea470] 25265 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 4.17 / 0.00 ms (average mu = 0.138, current mu = 0.108) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffce9d6078
3.0 cpu, 8192 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 500000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbbff9470] 25333 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 3.41 / 0.00 ms (average mu = 0.123, current mu = 0.092) allocation failure;  [1:0xffffbbff9470] 25340 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.04 / 0.00 ms (average mu = 0.123, current mu = 0.092) allocation failure;  [1:0xffffbbff9470] 25348 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.94 / 0.00 ms (average mu = 0.123, current mu = 0.092) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdd57c2a8
4.0 cpu, 8192 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 500000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe004dd68
0.5 cpu, 16384 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 500000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe451f338
1.0 cpu, 16384 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 500000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffde0f27d8
2.0 cpu, 16384 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 500000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd5ae6678
3.0 cpu, 16384 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 500000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 500000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffddd257e8
4.0 cpu, 16384 ram, 500000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 600000000 iterations, object type,
0.5 cpu, 128 ram, 600000000 iterations, array_ type,
0.5 cpu, 128 ram, 600000000 iterations, map___ type,
1.0 cpu, 128 ram, 600000000 iterations, object type,
1.0 cpu, 128 ram, 600000000 iterations, array_ type,
1.0 cpu, 128 ram, 600000000 iterations, map___ type,
2.0 cpu, 128 ram, 600000000 iterations, object type,
2.0 cpu, 128 ram, 600000000 iterations, array_ type,
2.0 cpu, 128 ram, 600000000 iterations, map___ type,
3.0 cpu, 128 ram, 600000000 iterations, object type,
3.0 cpu, 128 ram, 600000000 iterations, array_ type,
3.0 cpu, 128 ram, 600000000 iterations, map___ type,
4.0 cpu, 128 ram, 600000000 iterations, object type,
4.0 cpu, 128 ram, 600000000 iterations, array_ type,
4.0 cpu, 128 ram, 600000000 iterations, map___ type,
0.5 cpu, 256 ram, 600000000 iterations, object type,
0.5 cpu, 256 ram, 600000000 iterations, array_ type,
0.5 cpu, 256 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffaa931470] 6525 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 305.26 / 0.00 ms (average mu = 0.611, current mu = 0.000) last resort; GC in old space requested [1:0xffffaa931470] 6892 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 367.46 / 0.00 ms (average mu = 0.405, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 600000000 iterations, object type,
1.0 cpu, 256 ram, 600000000 iterations, array_ type,
1.0 cpu, 256 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffad021470] 2917 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 127.81 / 0.00 ms (average mu = 0.630, current mu = 0.000) last resort; GC in old space requested [1:0xffffad021470] 3058 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 141.30 / 0.00 ms (average mu = 0.438, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 600000000 iterations, object type,
2.0 cpu, 256 ram, 600000000 iterations, array_ type,
2.0 cpu, 256 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff91950470] 2875 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.96 / 0.00 ms (average mu = 0.666, current mu = 0.000) last resort; GC in old space requested [1:0xffff91950470] 2991 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 115.81 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 600000000 iterations, object type,
3.0 cpu, 256 ram, 600000000 iterations, array_ type,
3.0 cpu, 256 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa9ba5470] 2543 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 106.78 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffffa9ba5470] 2650 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.17 / 0.00 ms (average mu = 0.476, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 600000000 iterations, object type,
4.0 cpu, 256 ram, 600000000 iterations, array_ type,
4.0 cpu, 256 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa6c04470] 2545 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.32 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffffa6c04470] 2661 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 116.04 / 0.00 ms (average mu = 0.464, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff87927470] 10398 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 1.52 / 0.00 ms (average mu = 0.379, current mu = 0.423) allocation failure;  [1:0xffff87927470] 10402 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 1.37 / 0.00 ms (average mu = 0.379, current mu = 0.423) allocation failure;  [1:0xffff87927470] 11905 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 1408.11 / 0.00 ms (average mu = 0.360, current mu = 0.337) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8c5af470] 3641 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.978, current mu = 0.999) allocation failure;  [1:0xffff8c5af470] 3643 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.978, current mu = 0.999) allocation failure;  [1:0xffff8c5af470] 3761 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.21 / 0.00 ms (average mu = 0.992, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff983b5470] 6798 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 304.92 / 0.00 ms (average mu = 0.606, current mu = 0.000) last resort; GC in old space requested [1:0xffff983b5470] 7101 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 302.65 / 0.00 ms (average mu = 0.431, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb1da9470] 2814 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.75 / 0.00 ms (average mu = 0.513, current mu = 0.453) allocation failure;  [1:0xffffb1da9470] 2817 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.80 / 0.00 ms (average mu = 0.513, current mu = 0.453) allocation failure;  [1:0xffffb1da9470] 3214 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 361.26 / 0.00 ms (average mu = 0.457, current mu = 0.398) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9b74f470] 1748 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9b74f470] 1751 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9b74f470] 1815 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.17 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff903da470] 2926 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 154.62 / 0.00 ms (average mu = 0.612, current mu = 0.000) last resort; GC in old space requested [1:0xffff903da470] 3067 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 140.77 / 0.00 ms (average mu = 0.431, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff883b6470] 2007 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.80 / 0.00 ms (average mu = 0.588, current mu = 0.570) allocation failure;  [1:0xffff883b6470] 2009 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.80 / 0.00 ms (average mu = 0.588, current mu = 0.570) allocation failure;  [1:0xffff883b6470] 2414 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 369.48 / 0.00 ms (average mu = 0.412, current mu = 0.256) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb2556470] 1718 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.06 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb2556470] 1721 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb2556470] 1786 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.18 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb724d470] 2522 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.48 / 0.00 ms (average mu = 0.654, current mu = 0.000) last resort; GC in old space requested [1:0xffffb724d470] 2638 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 116.61 / 0.00 ms (average mu = 0.463, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff96238470] 1997 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.69 / 0.00 ms (average mu = 0.589, current mu = 0.574) allocation failure;  [1:0xffff96238470] 2000 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.71 / 0.00 ms (average mu = 0.589, current mu = 0.574) allocation failure;  [1:0xffff96238470] 2386 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 352.19 / 0.00 ms (average mu = 0.417, current mu = 0.259) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb0d57470] 1706 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb0d57470] 1708 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffb0d57470] 1772 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 0.99 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff85614470] 2519 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.99 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffff85614470] 2625 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.16 / 0.00 ms (average mu = 0.477, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb0ece470] 2021 ms: Scavenge 228.4 (232.5) -> 228.1 (232.8) MB, 0.67 / 0.00 ms (average mu = 0.583, current mu = 0.565) allocation failure;  [1:0xffffb0ece470] 2024 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.86 / 0.00 ms (average mu = 0.583, current mu = 0.565) allocation failure;  [1:0xffffb0ece470] 2399 ms: Mark-Compact 342.4 (346.4) -> 266.5 (271.5) MB, 340.86 / 0.00 ms (average mu = 0.421, current mu = 0.266) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7f459470] 1706 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff7f459470] 1709 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff7f459470] 1773 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.51 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9b517470] 2519 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 121.45 / 0.00 ms (average mu = 0.637, current mu = 0.000) last resort; GC in old space requested [1:0xffff9b517470] 2626 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 106.93 / 0.00 ms (average mu = 0.464, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb0f09470] 31035 ms: Scavenge 510.0 (518.5) -> 509.3 (519.0) MB, 2.45 / 0.00 ms (average mu = 0.332, current mu = 0.374) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9e92f470] 8016 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9e92f470] 8025 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9e92f470] 8324 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.16 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff96f58470] 15147 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 665.82 / 0.00 ms (average mu = 0.635, current mu = 0.000) last resort; GC in old space requested [1:0xffff96f58470] 15881 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 734.01 / 0.00 ms (average mu = 0.437, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff84a96470] 12252 ms: Scavenge 507.5 (516.0) -> 506.9 (516.5) MB, 2.49 / 0.00 ms (average mu = 0.168, current mu = 0.148) allocation failure;  [1:0xffff84a96470] 12258 ms: Scavenge 508.0 (516.5) -> 507.4 (517.2) MB, 2.53 / 0.00 ms (average mu = 0.168, current mu = 0.148) allocation failure;  [1:0xffff84a96470] 12323 ms: Scavenge 508.7 (517.2) -> 508.1 (521.7) MB, 61.46 / 0.00 ms (average mu = 0.168, current mu = 0.148) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb14c2470] 3761 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffb14c2470] 3769 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffb14c2470] 3915 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.16 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff948b2470] 6529 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 273.29 / 0.00 ms (average mu = 0.660, current mu = 0.000) last resort; GC in old space requested [1:0xffff948b2470] 6809 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 280.49 / 0.00 ms (average mu = 0.469, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8a371470] 7434 ms: Scavenge 509.0 (517.5) -> 508.3 (518.0) MB, 2.28 / 0.00 ms (average mu = 0.138, current mu = 0.102) allocation failure;  [1:0xffff8a371470] 7440 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 2.81 / 0.00 ms (average mu = 0.138, current mu = 0.102) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff861f9470] 3711 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.17 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff861f9470] 3720 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff861f9470] 3863 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.15 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff84f4a470] 5645 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 212.70 / 0.00 ms (average mu = 0.683, current mu = 0.000) last resort; GC in old space requested [1:0xffff84f4a470] 5859 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 213.49 / 0.00 ms (average mu = 0.502, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff86da8470] 7253 ms: Scavenge 508.2 (516.5) -> 507.5 (517.0) MB, 2.30 / 0.00 ms (average mu = 0.137, current mu = 0.107) allocation failure;  [1:0xffff86da8470] 7259 ms: Scavenge 508.6 (517.0) -> 508.0 (517.7) MB, 2.48 / 0.00 ms (average mu = 0.137, current mu = 0.107) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff90f38470] 3705 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff90f38470] 3714 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff90f38470] 3856 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.16 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff81b70470] 5536 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 210.99 / 0.00 ms (average mu = 0.685, current mu = 0.000) last resort; GC in old space requested [1:0xffff81b70470] 5750 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 213.44 / 0.00 ms (average mu = 0.503, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa758c470] 7275 ms: Scavenge 508.3 (516.7) -> 507.6 (517.2) MB, 2.61 / 0.00 ms (average mu = 0.136, current mu = 0.099) allocation failure;  [1:0xffffa758c470] 7280 ms: Scavenge 508.8 (517.2) -> 508.2 (518.0) MB, 2.51 / 0.00 ms (average mu = 0.136, current mu = 0.099) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 600000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb9e88470] 3678 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffb9e88470] 3687 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffb9e88470] 3830 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.16 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 600000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa78c8470] 5523 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 212.77 / 0.00 ms (average mu = 0.683, current mu = 0.000) last resort; GC in old space requested [1:0xffffa78c8470] 5734 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 211.08 / 0.00 ms (average mu = 0.502, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff99cb6470] 59455 ms: Scavenge 1016.0 (1029.2) -> 1015.3 (1029.7) MB, 3.27 / 0.00 ms (average mu = 0.312, current mu = 0.441) allocation failure;  [1:0xffff99cb6470] 59462 ms: Scavenge 1016.5 (1029.7) -> 1015.9 (1030.5) MB, 3.22 / 0.00 ms (average mu = 0.312, current mu = 0.441) allocation failure;  [1:0xffff99cb6470] 59548 ms: Scavenge 1017.2 (1030.5) -> 1016.6 (1035.0) MB, 3.56 / 0.00 ms (average mu = 0.312, current mu = 0.441) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc4d98bc8
0.5 cpu, 2048 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaba20470] 21820 ms: Scavenge 1018.7 (1032.0) -> 1018.0 (1032.5) MB, 2.81 / 0.00 ms (average mu = 0.211, current mu = 0.170) allocation failure;  [1:0xffffaba20470] 21827 ms: Scavenge 1019.1 (1032.5) -> 1018.5 (1033.2) MB, 3.33 / 0.00 ms (average mu = 0.211, current mu = 0.170) allocation failure;  [1:0xffffaba20470] 21833 ms: Scavenge 1019.9 (1033.2) -> 1019.2 (1037.7) MB, 3.02 / 0.00 ms (average mu = 0.211, current mu = 0.170) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd3748568
1.0 cpu, 2048 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb71ef470] 13677 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 3.71 / 0.00 ms (average mu = 0.192, current mu = 0.160) allocation failure;  [1:0xffffb71ef470] 13683 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.07 / 0.00 ms (average mu = 0.192, current mu = 0.160) allocation failure;  [1:0xffffb71ef470] 13690 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 3.05 / 0.00 ms (average mu = 0.192, current mu = 0.160) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe63749c8
2.0 cpu, 2048 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa1e2f470] 13259 ms: Scavenge 1016.1 (1029.5) -> 1015.5 (1030.0) MB, 3.18 / 0.00 ms (average mu = 0.146, current mu = 0.107) allocation failure;  [1:0xffffa1e2f470] 13266 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 3.31 / 0.00 ms (average mu = 0.146, current mu = 0.107) allocation failure;  [1:0xffffa1e2f470] 13273 ms: Scavenge 1017.3 (1030.7) -> 1016.7 (1035.2) MB, 3.20 / 0.00 ms (average mu = 0.146, current mu = 0.107) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff540d848
3.0 cpu, 2048 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff84f1c470] 14149 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.68 / 0.00 ms (average mu = 0.150, current mu = 0.110) allocation failure;  [1:0xffff84f1c470] 14156 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 3.10 / 0.00 ms (average mu = 0.150, current mu = 0.110) allocation failure;  [1:0xffff84f1c470] 14163 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 3.15 / 0.00 ms (average mu = 0.150, current mu = 0.110) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdd09fcd8
4.0 cpu, 2048 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8f01b470] 95917 ms: Scavenge 2032.3 (2056.9) -> 2030.8 (2057.7) MB, 8.75 / 0.00 ms (average mu = 0.250, current mu = 0.162) allocation failure;  [1:0xffff8f01b470] 96115 ms: Scavenge 2033.0 (2057.7) -> 2031.8 (2059.2) MB, 99.10 / 0.00 ms (average mu = 0.250, current mu = 0.162) allocation failure;  [1:0xffff8f01b470] 96213 ms: Scavenge 2034.5 (2059.2) -> 2033.2 (2068.2) MB, 6.39 / 0.00 ms (average mu = 0.250, current mu = 0.162) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffca7fead8
0.5 cpu, 4096 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff83008470] 44142 ms: Scavenge 2042.8 (2065.4) -> 2042.1 (2065.9) MB, 3.67 / 0.00 ms (average mu = 0.198, current mu = 0.182) allocation failure;  [1:0xffff83008470] 44201 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 55.88 / 0.00 ms (average mu = 0.198, current mu = 0.182) allocation failure;  [1:0xffff83008470] 44210 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 5.10 / 0.00 ms (average mu = 0.198, current mu = 0.182) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc1465368
1.0 cpu, 4096 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa540a470] 26674 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.63 / 0.00 ms (average mu = 0.183, current mu = 0.156) allocation failure;  [1:0xffffa540a470] 26682 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.14 / 0.00 ms (average mu = 0.183, current mu = 0.156) allocation failure;  [1:0xffffa540a470] 26689 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.87 / 0.00 ms (average mu = 0.183, current mu = 0.156) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcb3ca128
2.0 cpu, 4096 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9f48d470] 25715 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 4.01 / 0.00 ms (average mu = 0.140, current mu = 0.116) allocation failure;  [1:0xffff9f48d470] 25722 ms: Scavenge 2043.4 (2066.2) -> 2042.7 (2066.9) MB, 4.16 / 0.00 ms (average mu = 0.140, current mu = 0.116) allocation failure;  [1:0xffff9f48d470] 25730 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 3.97 / 0.00 ms (average mu = 0.140, current mu = 0.116) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd1f08ba8
3.0 cpu, 4096 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa2211470] 25457 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 3.58 / 0.00 ms (average mu = 0.127, current mu = 0.099) allocation failure;  [1:0xffffa2211470] 25464 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.07 / 0.00 ms (average mu = 0.127, current mu = 0.099) allocation failure;  [1:0xffffa2211470] 25472 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.95 / 0.00 ms (average mu = 0.127, current mu = 0.099) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdad17298
4.0 cpu, 4096 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa834f470] 148694 ms: Mark-Compact (reduce) 2044.6 (2068.7) -> 2044.5 (2066.4) MB, 17516.43 / 0.00 ms (+ 1.5 ms in 1 steps since start of marking, biggest step 1.5 ms, walltime since start of marking 17526 ms) (average mu = 0.179, current mu = [1:0xffffa834f470] 148873 ms: Scavenge 2045.5 (2066.4) -> 2045.0 (2069.4) MB, 92.13 / 0.00 ms (average mu = 0.179, current mu = 0.162) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd574b558
0.5 cpu, 8192 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb3f7d470] 38455 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.98 / 0.00 ms (average mu = 0.324, current mu = 0.347) allocation failure;  [1:0xffffb3f7d470] 38462 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.88 / 0.00 ms (average mu = 0.324, current mu = 0.347) allocation failure;  [1:0xffffb3f7d470] 38469 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.2) MB, 4.00 / 0.00 ms (average mu = 0.324, current mu = 0.347) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffce9c0ae8
1.0 cpu, 8192 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9d8f9470] 26407 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.15 / 0.00 ms (average mu = 0.175, current mu = 0.149) allocation failure;  [1:0xffff9d8f9470] 26424 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 14.25 / 0.00 ms (average mu = 0.175, current mu = 0.149) allocation failure;  [1:0xffff9d8f9470] 26433 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.23 / 0.00 ms (average mu = 0.175, current mu = 0.149) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffea395778
2.0 cpu, 8192 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8b1b4470] 25209 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.95 / 0.00 ms (average mu = 0.139, current mu = 0.106) allocation failure;  [1:0xffff8b1b4470] 25216 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.24 / 0.00 ms (average mu = 0.139, current mu = 0.106) allocation failure;  [1:0xffff8b1b4470] 25224 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.10 / 0.00 ms (average mu = 0.139, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe3d47418
3.0 cpu, 8192 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 600000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbabca470] 25652 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 3.60 / 0.00 ms (average mu = 0.122, current mu = 0.089) allocation failure;  [1:0xffffbabca470] 25659 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.05 / 0.00 ms (average mu = 0.122, current mu = 0.089) allocation failure;  [1:0xffffbabca470] 25667 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.10 / 0.00 ms (average mu = 0.122, current mu = 0.089) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff47a10a8
4.0 cpu, 8192 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 600000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd3b6ee58
0.5 cpu, 16384 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 600000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd437a4a8
1.0 cpu, 16384 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 600000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff261cbd8
2.0 cpu, 16384 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 600000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe2fc9558
3.0 cpu, 16384 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 600000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 600000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc784f578
4.0 cpu, 16384 ram, 600000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 700000000 iterations, object type,
0.5 cpu, 128 ram, 700000000 iterations, array_ type,
0.5 cpu, 128 ram, 700000000 iterations, map___ type,
1.0 cpu, 128 ram, 700000000 iterations, object type,
1.0 cpu, 128 ram, 700000000 iterations, array_ type,
1.0 cpu, 128 ram, 700000000 iterations, map___ type,
2.0 cpu, 128 ram, 700000000 iterations, object type,
2.0 cpu, 128 ram, 700000000 iterations, array_ type,
2.0 cpu, 128 ram, 700000000 iterations, map___ type,
3.0 cpu, 128 ram, 700000000 iterations, object type,
3.0 cpu, 128 ram, 700000000 iterations, array_ type,
3.0 cpu, 128 ram, 700000000 iterations, map___ type,
4.0 cpu, 128 ram, 700000000 iterations, object type,
4.0 cpu, 128 ram, 700000000 iterations, array_ type,
4.0 cpu, 128 ram, 700000000 iterations, map___ type,
0.5 cpu, 256 ram, 700000000 iterations, object type,
0.5 cpu, 256 ram, 700000000 iterations, array_ type,
0.5 cpu, 256 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb5c56470] 6247 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 286.43 / 0.00 ms (average mu = 0.616, current mu = 0.000) last resort; GC in old space requested [1:0xffffb5c56470] 6544 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 296.84 / 0.00 ms (average mu = 0.433, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 700000000 iterations, object type,
1.0 cpu, 256 ram, 700000000 iterations, array_ type,
1.0 cpu, 256 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9d485470] 2728 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 127.51 / 0.00 ms (average mu = 0.600, current mu = 0.000) last resort; GC in old space requested [1:0xffff9d485470] 2865 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 137.30 / 0.00 ms (average mu = 0.411, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 700000000 iterations, object type,
2.0 cpu, 256 ram, 700000000 iterations, array_ type,
2.0 cpu, 256 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9647e470] 2335 ms: Mark-Compact (reduce) 177.9 (181.5) -> 177.9 (180.5) MB, 104.67 / 0.00 ms (average mu = 0.645, current mu = 0.000) last resort; GC in old space requested [1:0xffff9647e470] 2441 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 105.69 / 0.00 ms (average mu = 0.460, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 700000000 iterations, object type,
3.0 cpu, 256 ram, 700000000 iterations, array_ type,
3.0 cpu, 256 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb8a64470] 2335 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 103.20 / 0.00 ms (average mu = 0.644, current mu = 0.000) last resort; GC in old space requested [1:0xffffb8a64470] 2439 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.71 / 0.00 ms (average mu = 0.459, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 700000000 iterations, object type,
4.0 cpu, 256 ram, 700000000 iterations, array_ type,
4.0 cpu, 256 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9ab2f470] 2334 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.35 / 0.00 ms (average mu = 0.647, current mu = 0.000) last resort; GC in old space requested [1:0xffff9ab2f470] 2441 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 107.14 / 0.00 ms (average mu = 0.460, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff992a1470] 7774 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.95 / 0.00 ms (average mu = 0.570, current mu = 0.710) allocation failure;  [1:0xffff992a1470] 7777 ms: Scavenge 228.7 (232.8) -> 228.3 (233.0) MB, 0.92 / 0.00 ms (average mu = 0.570, current mu = 0.710) allocation failure;  [1:0xffff992a1470] 8581 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 710.93 / 0.00 ms (average mu = 0.517, current mu = 0.453) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa12f4470] 3543 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa12f4470] 3545 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffa12f4470] 3718 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.25 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8e13d470] 6328 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 295.22 / 0.00 ms (average mu = 0.619, current mu = 0.000) last resort; GC in old space requested [1:0xffff8e13d470] 6702 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 373.40 / 0.00 ms (average mu = 0.404, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9f76d470] 3207 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.72 / 0.00 ms (average mu = 0.438, current mu = 0.412) allocation failure;  [1:0xffff9f76d470] 3209 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.70 / 0.00 ms (average mu = 0.438, current mu = 0.412) allocation failure;  [1:0xffff9f76d470] 3791 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 547.66 / 0.00 ms (average mu = 0.371, current mu = 0.307) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9ef56470] 1707 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9ef56470] 1710 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9ef56470] 1774 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 0.97 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8b15d470] 2697 ms: Mark-Compact (reduce) 177.9 (182.0) -> 177.9 (180.7) MB, 138.34 / 0.00 ms (average mu = 0.602, current mu = 0.000) last resort; GC in old space requested [1:0xffff8b15d470] 2831 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.5) MB, 134.07 / 0.00 ms (average mu = 0.419, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb2e2f470] 2175 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.71 / 0.00 ms (average mu = 0.463, current mu = 0.394) allocation failure;  [1:0xffffb2e2f470] 2177 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.70 / 0.00 ms (average mu = 0.463, current mu = 0.394) allocation failure;  [1:0xffffb2e2f470] 2614 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 403.47 / 0.00 ms (average mu = 0.375, current mu = 0.292) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9b4a2470] 1640 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9b4a2470] 1643 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9b4a2470] 1707 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.11 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff96d04470] 2286 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.53 / 0.00 ms (average mu = 0.640, current mu = 0.000) last resort; GC in old space requested [1:0xffff96d04470] 2389 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 102.85 / 0.00 ms (average mu = 0.457, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff83d9a470] 1895 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.72 / 0.00 ms (average mu = 0.609, current mu = 0.601) allocation failure;  [1:0xffff83d9a470] 1898 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.73 / 0.00 ms (average mu = 0.609, current mu = 0.601) allocation failure;  [1:0xffff83d9a470] 2273 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 340.79 / 0.00 ms (average mu = 0.425, current mu = 0.261) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffad1e1470] 1783 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffad1e1470] 1785 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffad1e1470] 1849 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.04 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffad21e470] 2269 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.62 / 0.00 ms (average mu = 0.640, current mu = 0.000) last resort; GC in old space requested [1:0xffffad21e470] 2385 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 115.24 / 0.00 ms (average mu = 0.442, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8b4b0470] 1918 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.73 / 0.00 ms (average mu = 0.615, current mu = 0.625) allocation failure;  [1:0xffff8b4b0470] 1920 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.71 / 0.00 ms (average mu = 0.615, current mu = 0.625) allocation failure;  [1:0xffff8b4b0470] 2261 ms: Mark-Compact 342.6 (346.6) -> 266.7 (271.8) MB, 306.59 / 0.00 ms (average mu = 0.449, current mu = 0.289) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffae2c7470] 1662 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffae2c7470] 1665 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffae2c7470] 1727 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.15 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff87c11470] 2273 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.77 / 0.00 ms (average mu = 0.629, current mu = 0.000) last resort; GC in old space requested [1:0xffff87c11470] 2386 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 112.14 / 0.00 ms (average mu = 0.439, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8ad46470] 48119 ms: Scavenge 505.1 (513.5) -> 504.4 (514.0) MB, 4.93 / 0.00 ms (average mu = 0.163, current mu = 0.137) allocation failure;  [1:0xffff8ad46470] 48313 ms: Scavenge 505.6 (514.0) -> 505.0 (514.7) MB, 96.28 / 0.00 ms (average mu = 0.163, current mu = 0.137) allocation failure;  [1:0xffff8ad46470] 48418 ms: Scavenge 506.3 (514.7) -> 505.7 (519.2) MB, 9.80 / 0.00 ms (average mu = 0.163, current mu = 0.137) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb5c45470] 7853 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffb5c45470] 7912 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffb5c45470] 8213 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.26 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb78ba470] 12430 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 561.01 / 0.00 ms (average mu = 0.632, current mu = 0.000) last resort; GC in old space requested [1:0xffffb78ba470] 13023 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 592.90 / 0.00 ms (average mu = 0.437, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff99537470] 9614 ms: Scavenge 505.7 (514.0) -> 505.0 (514.5) MB, 2.32 / 0.00 ms (average mu = 0.246, current mu = 0.159) allocation failure;  [1:0xffff99537470] 9619 ms: Scavenge 506.2 (514.5) -> 505.5 (515.2) MB, 2.47 / 0.00 ms (average mu = 0.246, current mu = 0.159) allocation failure;  [1:0xffff99537470] 9664 ms: Scavenge 506.9 (515.2) -> 506.2 (520.0) MB, 41.30 / 0.00 ms (average mu = 0.246, current mu = 0.159) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9402d470] 3667 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9402d470] 3675 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9402d470] 3816 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffbc506470] 6110 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 290.51 / 0.00 ms (average mu = 0.634, current mu = 0.000) last resort; GC in old space requested [1:0xffffbc506470] 6405 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 295.04 / 0.00 ms (average mu = 0.438, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa3e6a470] 6857 ms: Scavenge 508.4 (516.7) -> 507.7 (517.2) MB, 2.29 / 0.00 ms (average mu = 0.168, current mu = 0.153) allocation failure;  [1:0xffffa3e6a470] 6862 ms: Scavenge 508.9 (517.2) -> 508.3 (518.0) MB, 2.43 / 0.00 ms (average mu = 0.168, current mu = 0.153) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff886e6470] 3597 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff886e6470] 3605 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff886e6470] 3746 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.21 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9e88f470] 5115 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (357.7) MB, 207.31 / 0.00 ms (average mu = 0.667, current mu = 0.000) last resort; GC in old space requested [1:0xffff9e88f470] 5321 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 206.52 / 0.00 ms (average mu = 0.486, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa4488470] 6676 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.23 / 0.00 ms (average mu = 0.153, current mu = 0.118) allocation failure;  [1:0xffffa4488470] 6681 ms: Scavenge 509.1 (517.5) -> 508.4 (518.2) MB, 2.43 / 0.00 ms (average mu = 0.153, current mu = 0.118) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7e082470] 3597 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7e082470] 3605 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7e082470] 3745 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.13 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff81cc4470] 5029 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 207.76 / 0.00 ms (average mu = 0.664, current mu = 0.000) last resort; GC in old space requested [1:0xffff81cc4470] 5237 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 208.46 / 0.00 ms (average mu = 0.481, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9a0b6470] 6673 ms: Scavenge 509.0 (517.5) -> 508.3 (518.0) MB, 2.31 / 0.00 ms (average mu = 0.149, current mu = 0.109) allocation failure;  [1:0xffff9a0b6470] 6678 ms: Scavenge 509.5 (518.0) -> 508.9 (518.7) MB, 2.56 / 0.00 ms (average mu = 0.149, current mu = 0.109) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 700000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffba399470] 3594 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffba399470] 3602 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffba399470] 3740 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.13 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 700000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff81ce2470] 4934 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 205.72 / 0.00 ms (average mu = 0.664, current mu = 0.000) last resort; GC in old space requested [1:0xffff81ce2470] 5145 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (357.7) MB, 211.14 / 0.00 ms (average mu = 0.476, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb9399470] 68114 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.91 / 0.00 ms (average mu = 0.369, current mu = 0.490) allocation failure;  [1:0xffffb9399470] 68205 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 87.91 / 0.00 ms (average mu = 0.369, current mu = 0.490) allocation failure;  [1:0xffffb9399470] 68216 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 4.39 / 0.00 ms (average mu = 0.369, current mu = 0.490) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff46e0d98
0.5 cpu, 2048 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffba90a470] 21755 ms: Scavenge 1013.3 (1028.5) -> 1011.8 (1029.2) MB, 4.25 / 0.00 ms (average mu = 0.194, current mu = 0.145) allocation failure;  [1:0xffffba90a470] 21839 ms: Scavenge 1013.9 (1029.2) -> 1012.8 (1030.7) MB, 6.41 / 0.00 ms (average mu = 0.194, current mu = 0.145) allocation failure;  [1:0xffffba90a470] 21852 ms: Scavenge 1015.5 (1030.7) -> 1014.2 (1039.7) MB, 5.00 / 0.00 ms (average mu = 0.194, current mu = 0.145) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd2dd3018
1.0 cpu, 2048 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbc705470] 12772 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.73 / 0.00 ms (average mu = 0.195, current mu = 0.158) allocation failure;  [1:0xffffbc705470] 12778 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 2.95 / 0.00 ms (average mu = 0.195, current mu = 0.158) allocation failure;  [1:0xffffbc705470] 12784 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.88 / 0.00 ms (average mu = 0.195, current mu = 0.158) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc2989298
2.0 cpu, 2048 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8a73e470] 12093 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.63 / 0.00 ms (average mu = 0.171, current mu = 0.133) allocation failure;  [1:0xffff8a73e470] 12099 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 2.75 / 0.00 ms (average mu = 0.171, current mu = 0.133) allocation failure;  [1:0xffff8a73e470] 12105 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 3.00 / 0.00 ms (average mu = 0.171, current mu = 0.133) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff57c3dc8
3.0 cpu, 2048 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa55f9470] 12054 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.78 / 0.00 ms (average mu = 0.169, current mu = 0.125) allocation failure;  [1:0xffffa55f9470] 12060 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.86 / 0.00 ms (average mu = 0.169, current mu = 0.125) allocation failure;  [1:0xffffa55f9470] 12066 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.57 / 0.00 ms (average mu = 0.169, current mu = 0.125) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc75e5c38
4.0 cpu, 2048 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb531e470] 106201 ms: Scavenge 2032.4 (2056.9) -> 2031.0 (2057.7) MB, 102.97 / 0.00 ms (average mu = 0.258, current mu = 0.193) allocation failure;  [1:0xffffb531e470] 106688 ms: Scavenge 2033.1 (2057.7) -> 2031.9 (2059.4) MB, 93.76 / 0.00 ms (average mu = 0.258, current mu = 0.193) allocation failure;  [1:0xffffb531e470] 106906 ms: Scavenge 2034.7 (2059.4) -> 2033.4 (2068.4) MB, 112.38 / 0.00 ms (average mu = 0.258, current mu = 0.193) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff19bc2c8
0.5 cpu, 4096 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa3fed470] 38438 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.73 / 0.00 ms (average mu = 0.266, current mu = 0.271) allocation failure;  [1:0xffffa3fed470] 38449 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 8.12 / 0.00 ms (average mu = 0.266, current mu = 0.271) allocation failure;  [1:0xffffa3fed470] 38542 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 18.52 / 0.00 ms (average mu = 0.266, current mu = 0.271) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd2546088
1.0 cpu, 4096 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa8f52470] 25476 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.54 / 0.00 ms (average mu = 0.174, current mu = 0.141) allocation failure;  [1:0xffffa8f52470] 25483 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 3.76 / 0.00 ms (average mu = 0.174, current mu = 0.141) allocation failure;  [1:0xffffa8f52470] 25490 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.71 / 0.00 ms (average mu = 0.174, current mu = 0.141) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffeca0f4c8
2.0 cpu, 4096 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff95f14470] 23591 ms: Scavenge 2042.6 (2065.4) -> 2042.0 (2065.9) MB, 3.55 / 0.00 ms (average mu = 0.149, current mu = 0.114) allocation failure;  [1:0xffff95f14470] 23599 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 3.91 / 0.00 ms (average mu = 0.149, current mu = 0.114) allocation failure;  [1:0xffff95f14470] 23606 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 3.88 / 0.00 ms (average mu = 0.149, current mu = 0.114) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffedfa5e88
3.0 cpu, 4096 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff91a55470] 23356 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.96 / 0.00 ms (average mu = 0.142, current mu = 0.106) allocation failure;  [1:0xffff91a55470] 23363 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.96 / 0.00 ms (average mu = 0.142, current mu = 0.106) allocation failure;  [1:0xffff91a55470] 23370 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 3.64 / 0.00 ms (average mu = 0.142, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd1a3c798
4.0 cpu, 4096 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa857b470] 176398 ms: Scavenge 2045.4 (2067.2) -> 2045.2 (2066.7) MB, 6.50 / 0.00 ms (average mu = 0.199, current mu = 0.174) allocation failure;  [1:0xffffa857b470] 176500 ms: Scavenge 2045.9 (2066.7) -> 2045.6 (2069.9) MB, 97.93 / 0.00 ms (average mu = 0.199, current mu = 0.174) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc85833f8
0.5 cpu, 8192 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff95855470] 39661 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.59 / 0.00 ms (average mu = 0.227, current mu = 0.175) allocation failure;  [1:0xffff95855470] 39735 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 71.51 / 0.00 ms (average mu = 0.227, current mu = 0.175) allocation failure;  [1:0xffff95855470] 39744 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 4.57 / 0.00 ms (average mu = 0.227, current mu = 0.175) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe1a1fa38
1.0 cpu, 8192 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa31d8470] 24424 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 3.73 / 0.00 ms (average mu = 0.200, current mu = 0.181) allocation failure;  [1:0xffffa31d8470] 24431 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 3.96 / 0.00 ms (average mu = 0.200, current mu = 0.181) allocation failure;  [1:0xffffa31d8470] 24446 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.03 / 0.00 ms (average mu = 0.200, current mu = 0.181) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd1e0cfd8
2.0 cpu, 8192 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb43c9470] 23612 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.82 / 0.00 ms (average mu = 0.148, current mu = 0.118) allocation failure;  [1:0xffffb43c9470] 23620 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 4.03 / 0.00 ms (average mu = 0.148, current mu = 0.118) allocation failure;  [1:0xffffb43c9470] 23627 ms: Scavenge 2044.0 (2066.7) -> 2043.4 (2071.4) MB, 4.28 / 0.00 ms (average mu = 0.148, current mu = 0.118) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe04c2f48
3.0 cpu, 8192 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 700000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8fe70470] 23418 ms: Scavenge 2043.0 (2065.7) -> 2042.3 (2066.2) MB, 3.67 / 0.00 ms (average mu = 0.138, current mu = 0.104) allocation failure;  [1:0xffff8fe70470] 23425 ms: Scavenge 2043.5 (2066.2) -> 2042.8 (2066.9) MB, 3.77 / 0.00 ms (average mu = 0.138, current mu = 0.104) allocation failure;  [1:0xffff8fe70470] 23432 ms: Scavenge 2044.2 (2066.9) -> 2043.5 (2071.7) MB, 3.79 / 0.00 ms (average mu = 0.138, current mu = 0.104) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffeaca16c8
4.0 cpu, 8192 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 700000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc13d7498
0.5 cpu, 16384 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 700000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd16a9bf8
1.0 cpu, 16384 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 700000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd62ea478
2.0 cpu, 16384 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 700000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc13afbe8
3.0 cpu, 16384 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 700000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 700000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd6f33de8
4.0 cpu, 16384 ram, 700000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 800000000 iterations, object type,
0.5 cpu, 128 ram, 800000000 iterations, array_ type,
0.5 cpu, 128 ram, 800000000 iterations, map___ type,
1.0 cpu, 128 ram, 800000000 iterations, object type,
1.0 cpu, 128 ram, 800000000 iterations, array_ type,
1.0 cpu, 128 ram, 800000000 iterations, map___ type,
2.0 cpu, 128 ram, 800000000 iterations, object type,
2.0 cpu, 128 ram, 800000000 iterations, array_ type,
2.0 cpu, 128 ram, 800000000 iterations, map___ type,
3.0 cpu, 128 ram, 800000000 iterations, object type,
3.0 cpu, 128 ram, 800000000 iterations, array_ type,
3.0 cpu, 128 ram, 800000000 iterations, map___ type,
4.0 cpu, 128 ram, 800000000 iterations, object type,
4.0 cpu, 128 ram, 800000000 iterations, array_ type,
4.0 cpu, 128 ram, 800000000 iterations, map___ type,
0.5 cpu, 256 ram, 800000000 iterations, object type,
0.5 cpu, 256 ram, 800000000 iterations, array_ type,
0.5 cpu, 256 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9bb3e470] 7058 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 321.00 / 0.00 ms (average mu = 0.497, current mu = 0.000) last resort; GC in old space requested [1:0xffff9bb3e470] 7366 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 307.83 / 0.00 ms (average mu = 0.365, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 800000000 iterations, object type,
1.0 cpu, 256 ram, 800000000 iterations, array_ type,
1.0 cpu, 256 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb66c1470] 2618 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 138.79 / 0.00 ms (average mu = 0.586, current mu = 0.000) last resort; GC in old space requested [1:0xffffb66c1470] 2757 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 138.27 / 0.00 ms (average mu = 0.400, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 800000000 iterations, object type,
2.0 cpu, 256 ram, 800000000 iterations, array_ type,
2.0 cpu, 256 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8583a470] 2260 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 112.79 / 0.00 ms (average mu = 0.630, current mu = 0.000) last resort; GC in old space requested [1:0xffff8583a470] 2363 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 102.93 / 0.00 ms (average mu = 0.451, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 800000000 iterations, object type,
3.0 cpu, 256 ram, 800000000 iterations, array_ type,
3.0 cpu, 256 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa44e9470] 2250 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 114.05 / 0.00 ms (average mu = 0.623, current mu = 0.000) last resort; GC in old space requested [1:0xffffa44e9470] 2364 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 113.82 / 0.00 ms (average mu = 0.432, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 800000000 iterations, object type,
4.0 cpu, 256 ram, 800000000 iterations, array_ type,
4.0 cpu, 256 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa4159470] 2413 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 115.84 / 0.00 ms (average mu = 0.608, current mu = 0.000) last resort; GC in old space requested [1:0xffffa4159470] 2524 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 110.84 / 0.00 ms (average mu = 0.435, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb2b54470] 9269 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.94 / 0.00 ms (average mu = 0.281, current mu = 0.206) allocation failure;  [1:0xffffb2b54470] 9272 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.93 / 0.00 ms (average mu = 0.281, current mu = 0.206) allocation failure;  [1:0xffffb2b54470] 10144 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 771.93 / 0.00 ms (average mu = 0.419, current mu = 0.592) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff80af7470] 3598 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff80af7470] 3601 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff80af7470] 3779 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.37 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8e54b470] 7499 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 1406.41 / 0.00 ms (average mu = 0.349, current mu = 0.000) last resort; GC in old space requested [1:0xffff8e54b470] 8101 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 602.31 / 0.00 ms (average mu = 0.237, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff986ee470] 2705 ms: Scavenge 228.4 (232.5) -> 228.0 (232.8) MB, 0.71 / 0.00 ms (average mu = 0.507, current mu = 0.484) allocation failure;  [1:0xffff986ee470] 2707 ms: Scavenge 228.7 (232.8) -> 228.4 (233.0) MB, 0.71 / 0.00 ms (average mu = 0.507, current mu = 0.484) allocation failure;  [1:0xffff986ee470] 3100 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 359.00 / 0.00 ms (average mu = 0.449, current mu = 0.388) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffbc7bc470] 1672 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffbc7bc470] 1675 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffbc7bc470] 1740 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.01 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8b7b9470] 2583 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 140.33 / 0.00 ms (average mu = 0.567, current mu = 0.000) last resort; GC in old space requested [1:0xffff8b7b9470] 2713 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 130.17 / 0.00 ms (average mu = 0.392, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffade53470] 1928 ms: Scavenge 228.6 (232.5) -> 228.2 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.589, current mu = 0.569) allocation failure;  [1:0xffffade53470] 1930 ms: Scavenge 228.9 (233.0) -> 228.6 (233.3) MB, 0.70 / 0.00 ms (average mu = 0.589, current mu = 0.569) allocation failure;  [1:0xffffade53470] 2309 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 344.88 / 0.00 ms (average mu = 0.415, current mu = 0.257) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa8fc4470] 1645 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffa8fc4470] 1647 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffa8fc4470] 1709 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.08 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb7c5e470] 2237 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 104.36 / 0.00 ms (average mu = 0.629, current mu = 0.000) last resort; GC in old space requested [1:0xffffb7c5e470] 2342 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 104.11 / 0.00 ms (average mu = 0.447, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff93c40470] 1939 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.69 / 0.00 ms (average mu = 0.588, current mu = 0.571) allocation failure;  [1:0xffff93c40470] 1941 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.68 / 0.00 ms (average mu = 0.588, current mu = 0.571) allocation failure;  [1:0xffff93c40470] 2321 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 346.17 / 0.00 ms (average mu = 0.415, current mu = 0.259) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffaffae470] 1644 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffaffae470] 1646 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffffaffae470] 1713 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.16 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb6cca470] 2226 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 124.68 / 0.00 ms (average mu = 0.604, current mu = 0.000) last resort; GC in old space requested [1:0xffffb6cca470] 2357 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 131.87 / 0.00 ms (average mu = 0.400, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9b991470] 1902 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.69 / 0.00 ms (average mu = 0.606, current mu = 0.599) allocation failure;  [1:0xffff9b991470] 1905 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.67 / 0.00 ms (average mu = 0.606, current mu = 0.599) allocation failure;  [1:0xffff9b991470] 2281 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 342.60 / 0.00 ms (average mu = 0.422, current mu = 0.258) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8bf15470] 1659 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff8bf15470] 1662 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff8bf15470] 1727 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.23 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa779c470] 2238 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 113.34 / 0.00 ms (average mu = 0.621, current mu = 0.000) last resort; GC in old space requested [1:0xffffa779c470] 2349 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 111.35 / 0.00 ms (average mu = 0.433, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7ed21470] 39081 ms: Scavenge 506.0 (514.5) -> 505.3 (515.0) MB, 96.41 / 0.00 ms (average mu = 0.232, current mu = 0.160) allocation failure;  [1:0xffff7ed21470] 39089 ms: Scavenge 506.5 (515.0) -> 505.9 (515.7) MB, 4.10 / 0.00 ms (average mu = 0.232, current mu = 0.160) allocation failure;  [1:0xffff7ed21470] 39188 ms: Scavenge 507.2 (515.7) -> 506.6 (520.2) MB, 18.83 / 0.00 ms (average mu = 0.232, current mu = 0.160) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7f7f9470] 7834 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.992, current mu = 0.999) allocation failure;  [1:0xffff7f7f9470] 7842 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.992, current mu = 0.999) allocation failure;  [1:0xffff7f7f9470] 8145 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.10 / 0.00 ms (average mu = 0.997, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb1868470] 13804 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 795.51 / 0.00 ms (average mu = 0.580, current mu = 0.000) last resort; GC in old space requested [1:0xffffb1868470] 18119 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 4315.24 / 0.00 ms (average mu = 0.156, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff93f6a470] 11010 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.38 / 0.00 ms (average mu = 0.230, current mu = 0.185) allocation failure;  [1:0xffff93f6a470] 11015 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 2.23 / 0.00 ms (average mu = 0.230, current mu = 0.185) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9f4d6470] 3665 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9f4d6470] 3674 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff9f4d6470] 3814 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.04 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff92edc470] 6126 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 279.41 / 0.00 ms (average mu = 0.597, current mu = 0.000) last resort; GC in old space requested [1:0xffff92edc470] 6390 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 264.26 / 0.00 ms (average mu = 0.427, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb8477470] 7137 ms: Scavenge 508.2 (516.5) -> 507.5 (517.0) MB, 2.27 / 0.00 ms (average mu = 0.137, current mu = 0.082) allocation failure;  [1:0xffffb8477470] 7143 ms: Scavenge 508.7 (517.0) -> 508.1 (517.7) MB, 2.75 / 0.00 ms (average mu = 0.137, current mu = 0.082) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff890ef470] 3567 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff890ef470] 3576 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff890ef470] 3715 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.12 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffad5f5470] 5079 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 207.03 / 0.00 ms (average mu = 0.664, current mu = 0.000) last resort; GC in old space requested [1:0xffffad5f5470] 5302 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 222.76 / 0.00 ms (average mu = 0.472, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff82962470] 6655 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.25 / 0.00 ms (average mu = 0.151, current mu = 0.125) allocation failure;  [1:0xffff82962470] 6660 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 2.34 / 0.00 ms (average mu = 0.151, current mu = 0.125) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffac6f2470] 3582 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffac6f2470] 3590 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffac6f2470] 3734 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.06 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7fa6f470] 5015 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 208.87 / 0.00 ms (average mu = 0.668, current mu = 0.000) last resort; GC in old space requested [1:0xffff7fa6f470] 5219 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 204.09 / 0.00 ms (average mu = 0.486, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7df2e470] 6517 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.24 / 0.00 ms (average mu = 0.153, current mu = 0.115) allocation failure;  [1:0xffff7df2e470] 6523 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 2.46 / 0.00 ms (average mu = 0.153, current mu = 0.115) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 800000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8906e470] 3611 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff8906e470] 3620 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.05 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure;  [1:0xffff8906e470] 3761 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.13 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 800000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb018e470] 4953 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 204.40 / 0.00 ms (average mu = 0.660, current mu = 0.000) last resort; GC in old space requested [1:0xffffb018e470] 5156 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 203.62 / 0.00 ms (average mu = 0.478, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff847d4470] 75006 ms: Scavenge 1013.4 (1028.5) -> 1011.9 (1029.2) MB, 7.81 / 0.00 ms (average mu = 0.189, current mu = 0.135) allocation failure;  [1:0xffff847d4470] 75209 ms: Scavenge 1014.0 (1029.2) -> 1012.9 (1031.0) MB, 9.27 / 0.00 ms (average mu = 0.189, current mu = 0.135) allocation failure;  [1:0xffff847d4470] 75680 ms: Scavenge 1015.6 (1031.0) -> 1014.3 (1040.0) MB, 89.31 / 0.00 ms (average mu = 0.189, current mu = 0.135) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe20c35b8
0.5 cpu, 2048 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb8cfd470] 19531 ms: Scavenge 1013.5 (1028.7) -> 1012.0 (1029.2) MB, 4.04 / 0.00 ms (average mu = 0.221, current mu = 0.166) allocation failure;  [1:0xffffb8cfd470] 19602 ms: Scavenge 1014.1 (1029.2) -> 1013.0 (1031.0) MB, 5.85 / 0.00 ms (average mu = 0.221, current mu = 0.166) allocation failure;  [1:0xffffb8cfd470] 19615 ms: Scavenge 1015.7 (1031.0) -> 1014.4 (1040.0) MB, 4.88 / 0.00 ms (average mu = 0.221, current mu = 0.166) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff0561008
1.0 cpu, 2048 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9bdb9470] 12958 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.58 / 0.00 ms (average mu = 0.192, current mu = 0.156) allocation failure;  [1:0xffff9bdb9470] 12964 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 2.94 / 0.00 ms (average mu = 0.192, current mu = 0.156) allocation failure;  [1:0xffff9bdb9470] 12971 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.92 / 0.00 ms (average mu = 0.192, current mu = 0.156) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffeaed42c8
2.0 cpu, 2048 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff89395470] 12490 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.55 / 0.00 ms (average mu = 0.165, current mu = 0.122) allocation failure;  [1:0xffff89395470] 12496 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.86 / 0.00 ms (average mu = 0.165, current mu = 0.122) allocation failure;  [1:0xffff89395470] 12503 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 2.82 / 0.00 ms (average mu = 0.165, current mu = 0.122) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdcf6bfc8
3.0 cpu, 2048 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff92795470] 12567 ms: Scavenge 1016.1 (1029.2) -> 1015.4 (1029.7) MB, 2.68 / 0.00 ms (average mu = 0.159, current mu = 0.114) allocation failure;  [1:0xffff92795470] 12573 ms: Scavenge 1016.6 (1029.7) -> 1016.0 (1030.5) MB, 2.79 / 0.00 ms (average mu = 0.159, current mu = 0.114) allocation failure;  [1:0xffff92795470] 12580 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 2.90 / 0.00 ms (average mu = 0.159, current mu = 0.114) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd3cad688
4.0 cpu, 2048 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff921de470] 108032 ms: Scavenge 2032.2 (2056.9) -> 2030.7 (2057.4) MB, 24.13 / 0.00 ms (average mu = 0.262, current mu = 0.169) allocation failure;  [1:0xffff921de470] 108230 ms: Scavenge 2032.9 (2057.4) -> 2031.7 (2059.2) MB, 25.53 / 0.00 ms (average mu = 0.262, current mu = 0.169) allocation failure;  [1:0xffff921de470] 108428 ms: Scavenge 2034.5 (2059.2) -> 2033.2 (2068.2) MB, 21.80 / 0.00 ms (average mu = 0.262, current mu = 0.169) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffde1052a8
0.5 cpu, 4096 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffadde0470] 40418 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 21.93 / 0.00 ms (average mu = 0.343, current mu = 0.405) allocation failure;  [1:0xffffadde0470] 40425 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.80 / 0.00 ms (average mu = 0.343, current mu = 0.405) allocation failure;  [1:0xffffadde0470] 40433 ms: Scavenge 2044.0 (2066.7) -> 2043.4 (2071.4) MB, 3.83 / 0.00 ms (average mu = 0.343, current mu = 0.405) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe20e97d8
1.0 cpu, 4096 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff93be1470] 25938 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 3.63 / 0.00 ms (average mu = 0.160, current mu = 0.122) allocation failure;  [1:0xffff93be1470] 25945 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.81 / 0.00 ms (average mu = 0.160, current mu = 0.122) allocation failure;  [1:0xffff93be1470] 25952 ms: Scavenge 2043.9 (2066.7) -> 2043.2 (2071.2) MB, 3.64 / 0.00 ms (average mu = 0.160, current mu = 0.122) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe14a1138
2.0 cpu, 4096 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb7835470] 23698 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.61 / 0.00 ms (average mu = 0.149, current mu = 0.121) allocation failure;  [1:0xffffb7835470] 23705 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 4.00 / 0.00 ms (average mu = 0.149, current mu = 0.121) allocation failure;  [1:0xffffb7835470] 23713 ms: Scavenge 2044.0 (2066.7) -> 2043.4 (2071.4) MB, 4.07 / 0.00 ms (average mu = 0.149, current mu = 0.121) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe74a2d78
3.0 cpu, 4096 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7f6e0470] 23988 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.50 / 0.00 ms (average mu = 0.129, current mu = 0.091) allocation failure;  [1:0xffff7f6e0470] 23995 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 3.87 / 0.00 ms (average mu = 0.129, current mu = 0.091) allocation failure;  [1:0xffff7f6e0470] 24002 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 3.71 / 0.00 ms (average mu = 0.129, current mu = 0.091) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc4409278
4.0 cpu, 4096 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7eea2470] 118022 ms: Scavenge 2032.3 (2056.9) -> 2030.8 (2057.7) MB, 101.55 / 0.00 ms (average mu = 0.240, current mu = 0.186) allocation failure;  [1:0xffff7eea2470] 118140 ms: Scavenge 2033.0 (2057.7) -> 2031.8 (2059.2) MB, 23.21 / 0.00 ms (average mu = 0.240, current mu = 0.186) allocation failure;  [1:0xffff7eea2470] 118333 ms: Scavenge 2034.6 (2059.2) -> 2033.2 (2068.2) MB, 105.09 / 0.00 ms (average mu = 0.240, current mu = 0.186) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd396b288
0.5 cpu, 8192 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7f77a470] 42731 ms: Scavenge 2045.4 (2068.2) -> 2044.8 (2068.7) MB, 3.52 / 0.00 ms (average mu = 0.311, current mu = 0.375) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcc147838
1.0 cpu, 8192 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9f878470] 33707 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 4.82 / 0.00 ms (average mu = 0.183, current mu = 0.146) allocation failure;  [1:0xffff9f878470] 33716 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 5.06 / 0.00 ms (average mu = 0.183, current mu = 0.146) allocation failure;  [1:0xffff9f878470] 33726 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 5.91 / 0.00 ms (average mu = 0.183, current mu = 0.146) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffece37408
2.0 cpu, 8192 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9db7a470] 31170 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 4.82 / 0.00 ms (average mu = 0.151, current mu = 0.128) allocation failure;  [1:0xffff9db7a470] 31179 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.67 / 0.00 ms (average mu = 0.151, current mu = 0.128) allocation failure;  [1:0xffff9db7a470] 31188 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.54 / 0.00 ms (average mu = 0.151, current mu = 0.128) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcbaac3b8
3.0 cpu, 8192 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 800000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8b2a6470] 30663 ms: Scavenge 2043.0 (2065.7) -> 2042.3 (2066.2) MB, 4.37 / 0.00 ms (average mu = 0.140, current mu = 0.104) allocation failure;  [1:0xffff8b2a6470] 30672 ms: Scavenge 2043.5 (2066.2) -> 2042.9 (2066.9) MB, 4.66 / 0.00 ms (average mu = 0.140, current mu = 0.104) allocation failure;  [1:0xffff8b2a6470] 30681 ms: Scavenge 2044.2 (2066.9) -> 2043.6 (2071.7) MB, 4.70 / 0.00 ms (average mu = 0.140, current mu = 0.104) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcfc76d78
4.0 cpu, 8192 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 800000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdcb2ad78
0.5 cpu, 16384 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 800000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe4f2dfa8
1.0 cpu, 16384 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 800000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc0af33b8
2.0 cpu, 16384 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 800000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc5359ee8
3.0 cpu, 16384 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 800000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 800000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcde02ab8
4.0 cpu, 16384 ram, 800000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 900000000 iterations, object type,
0.5 cpu, 128 ram, 900000000 iterations, array_ type,
0.5 cpu, 128 ram, 900000000 iterations, map___ type,
1.0 cpu, 128 ram, 900000000 iterations, object type,
1.0 cpu, 128 ram, 900000000 iterations, array_ type,
1.0 cpu, 128 ram, 900000000 iterations, map___ type,
2.0 cpu, 128 ram, 900000000 iterations, object type,
2.0 cpu, 128 ram, 900000000 iterations, array_ type,
2.0 cpu, 128 ram, 900000000 iterations, map___ type,
3.0 cpu, 128 ram, 900000000 iterations, object type,
3.0 cpu, 128 ram, 900000000 iterations, array_ type,
3.0 cpu, 128 ram, 900000000 iterations, map___ type,
4.0 cpu, 128 ram, 900000000 iterations, object type,
4.0 cpu, 128 ram, 900000000 iterations, array_ type,
4.0 cpu, 128 ram, 900000000 iterations, map___ type,
0.5 cpu, 256 ram, 900000000 iterations, object type,
0.5 cpu, 256 ram, 900000000 iterations, array_ type,
0.5 cpu, 256 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9c147470] 9331 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 321.21 / 0.00 ms (average mu = 0.699, current mu = 0.000) last resort; GC in old space requested [1:0xffff9c147470] 9710 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 378.68 / 0.00 ms (average mu = 0.509, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 900000000 iterations, object type,
1.0 cpu, 256 ram, 900000000 iterations, array_ type,
1.0 cpu, 256 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9c708470] 4569 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 171.69 / 0.00 ms (average mu = 0.702, current mu = 0.000) last resort; GC in old space requested [1:0xffff9c708470] 4742 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 172.53 / 0.00 ms (average mu = 0.528, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 900000000 iterations, object type,
2.0 cpu, 256 ram, 900000000 iterations, array_ type,
2.0 cpu, 256 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa9fe2470] 3844 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 147.91 / 0.00 ms (average mu = 0.698, current mu = 0.000) last resort; GC in old space requested [1:0xffffa9fe2470] 3981 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 136.74 / 0.00 ms (average mu = 0.530, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 900000000 iterations, object type,
3.0 cpu, 256 ram, 900000000 iterations, array_ type,
3.0 cpu, 256 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff813d6470] 2852 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 157.12 / 0.00 ms (average mu = 0.598, current mu = 0.000) last resort; GC in old space requested [1:0xffff813d6470] 2990 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 138.19 / 0.00 ms (average mu = 0.424, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 900000000 iterations, object type,
4.0 cpu, 256 ram, 900000000 iterations, array_ type,
4.0 cpu, 256 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7dc3e470] 3026 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 135.99 / 0.00 ms (average mu = 0.643, current mu = 0.000) last resort; GC in old space requested [1:0xffff7dc3e470] 3173 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 146.89 / 0.00 ms (average mu = 0.447, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9839c470] 8771 ms: Scavenge 228.5 (232.5) -> 228.2 (232.8) MB, 1.06 / 0.00 ms (average mu = 0.466, current mu = 0.391) allocation failure;  [1:0xffff9839c470] 8774 ms: Scavenge 228.8 (232.8) -> 228.5 (233.3) MB, 0.95 / 0.00 ms (average mu = 0.466, current mu = 0.391) allocation failure;  [1:0xffff9839c470] 9776 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 907.38 / 0.00 ms (average mu = 0.482, current mu = 0.501) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9c4f3470] 4478 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.963, current mu = 0.947) allocation failure;  [1:0xffff9c4f3470] 4481 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.963, current mu = 0.947) allocation failure;  [1:0xffff9c4f3470] 4664 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.54 / 0.00 ms (average mu = 0.987, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8704e470] 10768 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 380.27 / 0.00 ms (average mu = 0.606, current mu = 0.000) last resort; GC in old space requested [1:0xffff8704e470] 11149 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 380.26 / 0.00 ms (average mu = 0.463, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff98ad0470] 3297 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.89 / 0.00 ms (average mu = 0.542, current mu = 0.491) allocation failure;  [1:0xffff98ad0470] 3300 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.87 / 0.00 ms (average mu = 0.542, current mu = 0.491) allocation failure;  [1:0xffff98ad0470] 4033 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 682.54 / 0.00 ms (average mu = 0.398, current mu = 0.291) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb2954470] 2229 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.995, current mu = 0.994) allocation failure;  [1:0xffffb2954470] 2232 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.995, current mu = 0.994) allocation failure;  [1:0xffffb2954470] 2317 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.39 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8f3d1470] 3605 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 187.27 / 0.00 ms (average mu = 0.603, current mu = 0.000) last resort; GC in old space requested [1:0xffff8f3d1470] 3779 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 173.81 / 0.00 ms (average mu = 0.423, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff91c87470] 2699 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.98 / 0.00 ms (average mu = 0.550, current mu = 0.537) allocation failure;  [1:0xffff91c87470] 2702 ms: Scavenge 228.9 (233.0) -> 228.5 (233.3) MB, 0.93 / 0.00 ms (average mu = 0.550, current mu = 0.537) allocation failure;  [1:0xffff91c87470] 3224 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 479.29 / 0.00 ms (average mu = 0.392, current mu = 0.241) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff824f6470] 2147 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff824f6470] 2150 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.08 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff824f6470] 2232 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.32 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb58fa470] 2999 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 136.02 / 0.00 ms (average mu = 0.645, current mu = 0.000) last resort; GC in old space requested [1:0xffffb58fa470] 3144 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 144.99 / 0.00 ms (average mu = 0.454, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb02d1470] 2465 ms: Scavenge 228.3 (232.3) -> 228.0 (232.8) MB, 0.91 / 0.00 ms (average mu = 0.606, current mu = 0.611) allocation failure;  [1:0xffffb02d1470] 2468 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.89 / 0.00 ms (average mu = 0.606, current mu = 0.611) allocation failure;  [1:0xffffb02d1470] 2899 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 388.06 / 0.00 ms (average mu = 0.444, current mu = 0.285) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff93ded470] 2164 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure;  [1:0xffff93ded470] 2167 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure;  [1:0xffff93ded470] 2252 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.29 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa3659470] 3018 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 146.81 / 0.00 ms (average mu = 0.642, current mu = 0.000) last resort; GC in old space requested [1:0xffffa3659470] 3152 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 134.00 / 0.00 ms (average mu = 0.464, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa7228470] 2420 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.91 / 0.00 ms (average mu = 0.621, current mu = 0.612) allocation failure;  [1:0xffffa7228470] 2423 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.92 / 0.00 ms (average mu = 0.621, current mu = 0.612) allocation failure;  [1:0xffffa7228470] 2915 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 449.89 / 0.00 ms (average mu = 0.423, current mu = 0.253) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb7449470] 2142 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb7449470] 2145 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffb7449470] 2224 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.30 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa6892470] 2871 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 135.59 / 0.00 ms (average mu = 0.632, current mu = 0.000) last resort; GC in old space requested [1:0xffffa6892470] 3016 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 145.26 / 0.00 ms (average mu = 0.438, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7e7b6470] 50258 ms: Scavenge 505.7 (514.0) -> 505.0 (514.5) MB, 3.36 / 0.00 ms (average mu = 0.212, current mu = 0.184) allocation failure;  [1:0xffff7e7b6470] 50357 ms: Scavenge 506.2 (514.5) -> 505.6 (515.2) MB, 6.14 / 0.00 ms (average mu = 0.212, current mu = 0.184) allocation failure;  [1:0xffff7e7b6470] 50473 ms: Scavenge 506.9 (515.2) -> 506.3 (520.0) MB, 107.95 / 0.00 ms (average mu = 0.212, current mu = 0.184) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffb6906470] 9583 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.992, current mu = 0.999) allocation failure;  [1:0xffffb6906470] 9645 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.992, current mu = 0.999) allocation failure;  [1:0xffffb6906470] 10042 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 50.58 / 0.00 ms (average mu = 0.987, current mu = 0.985) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff96133470] 18527 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 777.56 / 0.00 ms (average mu = 0.657, current mu = 0.000) last resort; GC in old space requested [1:0xffff96133470] 19426 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 898.48 / 0.00 ms (average mu = 0.450, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffafcf9470] 13771 ms: Scavenge 505.5 (514.0) -> 504.9 (514.5) MB, 2.94 / 0.00 ms (average mu = 0.218, current mu = 0.206) allocation failure;  [1:0xffffafcf9470] 13778 ms: Scavenge 506.0 (514.5) -> 505.4 (515.2) MB, 3.16 / 0.00 ms (average mu = 0.218, current mu = 0.206) allocation failure;  [1:0xffffafcf9470] 13785 ms: Scavenge 506.8 (515.2) -> 506.1 (519.7) MB, 3.01 / 0.00 ms (average mu = 0.218, current mu = 0.206) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff85dd0470] 4922 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff85dd0470] 4933 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff85dd0470] 5120 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.55 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7da90470] 7195 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 337.85 / 0.00 ms (average mu = 0.628, current mu = 0.000) last resort; GC in old space requested [1:0xffff7da90470] 7552 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 356.53 / 0.00 ms (average mu = 0.432, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff91995470] 8899 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.88 / 0.00 ms (average mu = 0.164, current mu = 0.117) allocation failure;  [1:0xffff91995470] 8906 ms: Scavenge 508.7 (517.2) -> 508.1 (518.0) MB, 3.15 / 0.00 ms (average mu = 0.164, current mu = 0.117) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff80447470] 4728 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff80447470] 4739 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff80447470] 4914 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.42 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff7fc72470] 6551 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 270.17 / 0.00 ms (average mu = 0.655, current mu = 0.000) last resort; GC in old space requested [1:0xffff7fc72470] 6831 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 279.27 / 0.00 ms (average mu = 0.470, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa9528470] 8696 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.94 / 0.00 ms (average mu = 0.141, current mu = 0.111) allocation failure;  [1:0xffffa9528470] 8703 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 2.93 / 0.00 ms (average mu = 0.141, current mu = 0.111) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff91e68470] 4756 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff91e68470] 4768 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff91e68470] 4945 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.47 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff97bb8470] 6616 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 267.68 / 0.00 ms (average mu = 0.671, current mu = 0.000) last resort; GC in old space requested [1:0xffff97bb8470] 6883 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 267.38 / 0.00 ms (average mu = 0.487, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb4dc8470] 8513 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.91 / 0.00 ms (average mu = 0.147, current mu = 0.111) allocation failure;  [1:0xffffb4dc8470] 8521 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 3.37 / 0.00 ms (average mu = 0.147, current mu = 0.111) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 900000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff7da1e470] 5316 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.25 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7da1e470] 5327 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.15 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff7da1e470] 5505 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.26 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 900000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff99811470] 6616 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 266.08 / 0.00 ms (average mu = 0.666, current mu = 0.000) last resort; GC in old space requested [1:0xffff99811470] 6888 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 272.12 / 0.00 ms (average mu = 0.479, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8177b470] 96917 ms: Mark-Compact (reduce) 1022.6 (1037.5) -> 1022.5 (1034.7) MB, 2405.42 / 0.00 ms (+ 0.7 ms in 1 steps since start of marking, biggest step 0.7 ms, walltime since start of marking 2408 ms) (average mu = 0.289, current mu = 0.[1:0xffff8177b470] 96921 ms: Scavenge 1023.5 (1034.7) -> 1023.0 (1035.7) MB, 1.90 / 0.00 ms (average mu = 0.289, current mu = 0.478) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdfc69768
0.5 cpu, 2048 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb2fdf470] 19911 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.73 / 0.00 ms (average mu = 0.301, current mu = 0.300) allocation failure;  [1:0xffffb2fdf470] 19918 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.5) MB, 3.54 / 0.00 ms (average mu = 0.301, current mu = 0.300) allocation failure;  [1:0xffffb2fdf470] 19925 ms: Scavenge 1017.3 (1030.5) -> 1016.7 (1035.2) MB, 3.16 / 0.00 ms (average mu = 0.301, current mu = 0.300) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff9c1a8c8
1.0 cpu, 2048 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa0d8f470] 13773 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.84 / 0.00 ms (average mu = 0.192, current mu = 0.149) allocation failure;  [1:0xffffa0d8f470] 13780 ms: Scavenge 1016.7 (1030.0) -> 1016.0 (1030.7) MB, 3.25 / 0.00 ms (average mu = 0.192, current mu = 0.149) allocation failure;  [1:0xffffa0d8f470] 13786 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 3.14 / 0.00 ms (average mu = 0.192, current mu = 0.149) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd2aaea18
2.0 cpu, 2048 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff96061470] 13837 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.94 / 0.00 ms (average mu = 0.158, current mu = 0.117) allocation failure;  [1:0xffff96061470] 13844 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.43 / 0.00 ms (average mu = 0.158, current mu = 0.117) allocation failure;  [1:0xffff96061470] 13850 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 2.94 / 0.00 ms (average mu = 0.158, current mu = 0.117) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd3d0a818
3.0 cpu, 2048 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaf262470] 13014 ms: Scavenge 1016.2 (1029.5) -> 1015.5 (1030.0) MB, 2.93 / 0.00 ms (average mu = 0.150, current mu = 0.106) allocation failure;  [1:0xffffaf262470] 13020 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.95 / 0.00 ms (average mu = 0.150, current mu = 0.106) allocation failure;  [1:0xffffaf262470] 13027 ms: Scavenge 1017.4 (1030.7) -> 1016.7 (1035.2) MB, 3.32 / 0.00 ms (average mu = 0.150, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe0dd9178
4.0 cpu, 2048 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffab3f5470] 152279 ms: Scavenge 2042.6 (2065.4) -> 2041.9 (2065.9) MB, 9.58 / 0.00 ms (average mu = 0.199, current mu = 0.142) allocation failure;  [1:0xffffab3f5470] 152383 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 13.18 / 0.00 ms (average mu = 0.199, current mu = 0.142) allocation failure;  [1:0xffffab3f5470] 152490 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 23.05 / 0.00 ms (average mu = 0.199, current mu = 0.142) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffec5ac518
0.5 cpu, 4096 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8b6e7470] 42009 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.31 / 0.00 ms (average mu = 0.272, current mu = 0.367) allocation failure;  [1:0xffff8b6e7470] 42017 ms: Scavenge 2043.3 (2066.2) -> 2042.6 (2066.7) MB, 4.05 / 0.00 ms (average mu = 0.272, current mu = 0.367) allocation failure;  [1:0xffff8b6e7470] 42026 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 4.62 / 0.00 ms (average mu = 0.272, current mu = 0.367) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc875edd8
1.0 cpu, 4096 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff851b2470] 27166 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 4.83 / 0.00 ms (average mu = 0.166, current mu = 0.125) allocation failure;  [1:0xffff851b2470] 27176 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.91 / 0.00 ms (average mu = 0.166, current mu = 0.125) allocation failure;  [1:0xffff851b2470] 27184 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 5.03 / 0.00 ms (average mu = 0.166, current mu = 0.125) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffffa6c1d88
2.0 cpu, 4096 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa09d7470] 25439 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.13 / 0.00 ms (average mu = 0.140, current mu = 0.112) allocation failure;  [1:0xffffa09d7470] 25447 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.94 / 0.00 ms (average mu = 0.140, current mu = 0.112) allocation failure;  [1:0xffffa09d7470] 25454 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 3.60 / 0.00 ms (average mu = 0.140, current mu = 0.112) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe9feed18
3.0 cpu, 4096 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa68f9470] 24907 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.05 / 0.00 ms (average mu = 0.130, current mu = 0.100) allocation failure;  [1:0xffffa68f9470] 24914 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.7) MB, 3.80 / 0.00 ms (average mu = 0.130, current mu = 0.100) allocation failure;  [1:0xffffa68f9470] 24922 ms: Scavenge 2044.0 (2066.7) -> 2043.4 (2071.4) MB, 4.19 / 0.00 ms (average mu = 0.130, current mu = 0.100) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffffb731838
4.0 cpu, 4096 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbb2df470] 133039 ms: Scavenge 2043.0 (2065.7) -> 2042.3 (2066.2) MB, 5.02 / 0.00 ms (average mu = 0.241, current mu = 0.166) allocation failure;  [1:0xffffbb2df470] 133140 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 6.02 / 0.00 ms (average mu = 0.241, current mu = 0.166) allocation failure;  [1:0xffffbb2df470] 133149 ms: Scavenge 2044.2 (2066.9) -> 2043.5 (2071.7) MB, 5.36 / 0.00 ms (average mu = 0.241, current mu = 0.166) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff6800fa8
0.5 cpu, 8192 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff97661470] 38478 ms: Scavenge 2045.2 (2067.9) -> 2044.5 (2068.4) MB, 27.25 / 0.00 ms (average mu = 0.326, current mu = 0.357) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe62220c8
1.0 cpu, 8192 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff93b64470] 25991 ms: Scavenge 2042.8 (2065.4) -> 2042.1 (2065.9) MB, 4.03 / 0.00 ms (average mu = 0.190, current mu = 0.168) allocation failure;  [1:0xffff93b64470] 25998 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 3.84 / 0.00 ms (average mu = 0.190, current mu = 0.168) allocation failure;  [1:0xffff93b64470] 26005 ms: Scavenge 2044.0 (2066.7) -> 2043.3 (2071.4) MB, 3.87 / 0.00 ms (average mu = 0.190, current mu = 0.168) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffed28e888
2.0 cpu, 8192 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff88012470] 24323 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 3.59 / 0.00 ms (average mu = 0.144, current mu = 0.108) allocation failure;  [1:0xffff88012470] 24330 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 3.86 / 0.00 ms (average mu = 0.144, current mu = 0.108) allocation failure;  [1:0xffff88012470] 24337 ms: Scavenge 2044.1 (2066.9) -> 2043.5 (2071.4) MB, 4.34 / 0.00 ms (average mu = 0.144, current mu = 0.108) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffee0fe908
3.0 cpu, 8192 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 900000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff972c9470] 24772 ms: Scavenge 2042.6 (2065.4) -> 2041.9 (2065.9) MB, 3.60 / 0.00 ms (average mu = 0.128, current mu = 0.097) allocation failure;  [1:0xffff972c9470] 24779 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 3.82 / 0.00 ms (average mu = 0.128, current mu = 0.097) allocation failure;  [1:0xffff972c9470] 24786 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 3.77 / 0.00 ms (average mu = 0.128, current mu = 0.097) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe5107118
4.0 cpu, 8192 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 900000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff7b05718
0.5 cpu, 16384 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 900000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffffe3d3e8
1.0 cpu, 16384 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 900000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdd98ed18
2.0 cpu, 16384 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 900000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe3128158
3.0 cpu, 16384 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 900000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 900000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdb211438
4.0 cpu, 16384 ram, 900000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 128 ram, 1000000000 iterations, object type,
0.5 cpu, 128 ram, 1000000000 iterations, array_ type,
0.5 cpu, 128 ram, 1000000000 iterations, map___ type,
1.0 cpu, 128 ram, 1000000000 iterations, object type,
1.0 cpu, 128 ram, 1000000000 iterations, array_ type,
1.0 cpu, 128 ram, 1000000000 iterations, map___ type,
2.0 cpu, 128 ram, 1000000000 iterations, object type,
2.0 cpu, 128 ram, 1000000000 iterations, array_ type,
2.0 cpu, 128 ram, 1000000000 iterations, map___ type,
3.0 cpu, 128 ram, 1000000000 iterations, object type,
3.0 cpu, 128 ram, 1000000000 iterations, array_ type,
3.0 cpu, 128 ram, 1000000000 iterations, map___ type,
4.0 cpu, 128 ram, 1000000000 iterations, object type,
4.0 cpu, 128 ram, 1000000000 iterations, array_ type,
4.0 cpu, 128 ram, 1000000000 iterations, map___ type,
0.5 cpu, 256 ram, 1000000000 iterations, object type,
0.5 cpu, 256 ram, 1000000000 iterations, array_ type,
0.5 cpu, 256 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb4281470] 6399 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 304.32 / 0.00 ms (average mu = 0.613, current mu = 0.000) last resort; GC in old space requested [1:0xffffb4281470] 6705 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 305.99 / 0.00 ms (average mu = 0.429, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 256 ram, 1000000000 iterations, object type,
1.0 cpu, 256 ram, 1000000000 iterations, array_ type,
1.0 cpu, 256 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9c185470] 3063 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 140.20 / 0.00 ms (average mu = 0.626, current mu = 0.000) last resort; GC in old space requested [1:0xffff9c185470] 3198 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 135.03 / 0.00 ms (average mu = 0.447, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 256 ram, 1000000000 iterations, object type,
2.0 cpu, 256 ram, 1000000000 iterations, array_ type,
2.0 cpu, 256 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8d85d470] 2653 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.06 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffff8d85d470] 2770 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 117.06 / 0.00 ms (average mu = 0.470, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 256 ram, 1000000000 iterations, object type,
3.0 cpu, 256 ram, 1000000000 iterations, array_ type,
3.0 cpu, 256 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffad286470] 3150 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.7) MB, 118.79 / 0.00 ms (average mu = 0.670, current mu = 0.000) last resort; GC in old space requested [1:0xffffad286470] 3259 ms: Mark-Compact (reduce) 177.9 (180.7) -> 177.9 (180.7) MB, 108.75 / 0.00 ms (average mu = 0.497, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 256 ram, 1000000000 iterations, object type,
4.0 cpu, 256 ram, 1000000000 iterations, array_ type,
4.0 cpu, 256 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa284f470] 2633 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 108.83 / 0.00 ms (average mu = 0.665, current mu = 0.000) last resort; GC in old space requested [1:0xffffa284f470] 2751 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 117.48 / 0.00 ms (average mu = 0.473, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa8cbf470] 5620 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.89 / 0.00 ms (average mu = 0.658, current mu = 0.668) allocation failure;  [1:0xffffa8cbf470] 5623 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 1.02 / 0.00 ms (average mu = 0.658, current mu = 0.668) allocation failure;  [1:0xffffa8cbf470] 9612 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.5) MB, 3900.84 / 0.00 ms (average mu = 0.228, current mu = 0.111) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa0803470] 3761 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.06 / 0.00 ms (average mu = 0.956, current mu = 0.935) allocation failure;  [1:0xffffa0803470] 3763 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.956, current mu = 0.935) allocation failure;  [1:0xffffa0803470] 3882 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.35 / 0.00 ms (average mu = 0.984, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 512 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb52bb470] 6514 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 299.05 / 0.00 ms (average mu = 0.614, current mu = 0.000) last resort; GC in old space requested [1:0xffffb52bb470] 6826 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 311.96 / 0.00 ms (average mu = 0.428, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9b050470] 2580 ms: Scavenge 228.3 (232.5) -> 228.0 (232.8) MB, 0.70 / 0.00 ms (average mu = 0.627, current mu = 0.638) allocation failure;  [1:0xffff9b050470] 2582 ms: Scavenge 228.6 (232.8) -> 228.3 (233.0) MB, 0.71 / 0.00 ms (average mu = 0.627, current mu = 0.638) allocation failure;  [1:0xffff9b050470] 3281 ms: Mark-Compact 342.3 (346.4) -> 266.4 (271.5) MB, 663.62 / 0.00 ms (average mu = 0.385, current mu = 0.236) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8fcd5470] 1807 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8fcd5470] 1809 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.03 / 0.00 ms (average mu = 0.996, current mu = 0.997) allocation failure;  [1:0xffff8fcd5470] 1875 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.05 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 512 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffa2d53470] 2998 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 139.39 / 0.00 ms (average mu = 0.610, current mu = 0.000) last resort; GC in old space requested [1:0xffffa2d53470] 3146 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 147.35 / 0.00 ms (average mu = 0.422, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7f4db470] 2067 ms: Scavenge 228.5 (232.5) -> 228.2 (233.0) MB, 0.77 / 0.00 ms (average mu = 0.583, current mu = 0.566) allocation failure;  [1:0xffff7f4db470] 2070 ms: Scavenge 228.8 (233.0) -> 228.5 (233.3) MB, 1.03 / 0.00 ms (average mu = 0.583, current mu = 0.566) allocation failure;  [1:0xffff7f4db470] 2457 ms: Mark-Compact 342.5 (346.6) -> 266.6 (271.8) MB, 351.92 / 0.00 ms (average mu = 0.421, current mu = 0.267) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff87403470] 1781 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff87403470] 1784 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.07 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff87403470] 1849 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.10 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 512 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb493b470] 2629 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 119.52 / 0.00 ms (average mu = 0.649, current mu = 0.000) last resort; GC in old space requested [1:0xffffb493b470] 2747 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 118.34 / 0.00 ms (average mu = 0.462, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa6f65470] 2099 ms: Scavenge 228.5 (232.5) -> 228.1 (232.8) MB, 0.79 / 0.00 ms (average mu = 0.589, current mu = 0.570) allocation failure;  [1:0xffffa6f65470] 2102 ms: Scavenge 228.8 (232.8) -> 228.5 (233.3) MB, 0.74 / 0.00 ms (average mu = 0.589, current mu = 0.570) allocation failure;  [1:0xffffa6f65470] 2506 ms: Mark-Compact 342.4 (346.6) -> 266.5 (271.5) MB, 368.78 / 0.00 ms (average mu = 0.417, current mu = 0.260) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff9b102470] 1767 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9b102470] 1769 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffff9b102470] 1834 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.15 / 0.00 ms (average mu = 0.998, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 512 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8169c470] 2617 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 109.92 / 0.00 ms (average mu = 0.660, current mu = 0.000) last resort; GC in old space requested [1:0xffff8169c470] 2735 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 117.89 / 0.00 ms (average mu = 0.468, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaa635470] 2036 ms: Scavenge 228.4 (232.8) -> 228.1 (233.0) MB, 0.77 / 0.00 ms (average mu = 0.596, current mu = 0.580) allocation failure;  [1:0xffffaa635470] 2038 ms: Scavenge 228.7 (233.0) -> 228.4 (233.3) MB, 0.75 / 0.00 ms (average mu = 0.596, current mu = 0.580) allocation failure;  [1:0xffffaa635470] 2426 ms: Mark-Compact 342.4 (346.6) -> 266.5 (271.5) MB, 352.67 / 0.00 ms (average mu = 0.425, current mu = 0.266) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffba413470] 1768 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.04 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffba413470] 1771 ms: Scavenge 172.9 (174.5) -> 171.9 (174.5) MB, 0.05 / 0.00 ms (average mu = 0.997, current mu = 0.997) allocation failure;  [1:0xffffba413470] 1838 ms: Mark-Compact 427.9 (429.5) -> 256.9 (259.5) MB, 1.24 / 0.00 ms (average mu = 0.997, current mu = 0.998) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 512 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9572e470] 2622 ms: Mark-Compact (reduce) 177.9 (181.7) -> 177.9 (180.5) MB, 110.36 / 0.00 ms (average mu = 0.658, current mu = 0.000) last resort; GC in old space requested [1:0xffff9572e470] 2740 ms: Mark-Compact (reduce) 177.9 (180.5) -> 177.9 (180.5) MB, 117.62 / 0.00 ms (average mu = 0.468, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffba4cd470] 37619 ms: Scavenge 503.6 (512.2) -> 502.9 (512.5) MB, 95.37 / 0.00 ms (average mu = 0.189, current mu = 0.151) allocation failure;  [1:0xffffba4cd470] 37710 ms: Scavenge 504.1 (512.5) -> 503.4 (513.2) MB, 70.05 / 0.00 ms (average mu = 0.189, current mu = 0.151) allocation failure;  [1:0xffffba4cd470] 37909 ms: Scavenge 504.8 (513.2) -> 504.1 (517.7) MB, 8.53 / 0.00 ms (average mu = 0.189, current mu = 0.151) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff802ee470] 8200 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.07 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff802ee470] 8209 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff802ee470] 8588 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.22 / 0.00 ms (average mu = 0.999, current mu = 1.000) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 1024 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff858e8470] 14347 ms: Mark-Compact (reduce) 353.9 (365.0) -> 353.9 (358.0) MB, 618.32 / 0.00 ms (average mu = 0.635, current mu = 0.000) last resort; GC in old space requested [1:0xffff858e8470] 15030 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 682.84 / 0.00 ms (average mu = 0.438, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa2e8e470] 10600 ms: Scavenge 508.2 (516.7) -> 507.5 (517.2) MB, 2.35 / 0.00 ms (average mu = 0.215, current mu = 0.217) allocation failure;  [1:0xffffa2e8e470] 10606 ms: Scavenge 508.7 (517.2) -> 508.1 (517.7) MB, 2.76 / 0.00 ms (average mu = 0.215, current mu = 0.217) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff8c96d470] 3940 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff8c96d470] 3949 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.09 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffff8c96d470] 4095 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.45 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 1024 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffffb3691470] 6585 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 271.92 / 0.00 ms (average mu = 0.639, current mu = 0.000) last resort; GC in old space requested [1:0xffffb3691470] 6885 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (358.0) MB, 300.31 / 0.00 ms (average mu = 0.444, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbbb7d470] 7651 ms: Scavenge 508.6 (517.0) -> 507.9 (517.5) MB, 2.57 / 0.00 ms (average mu = 0.174, current mu = 0.155) allocation failure;  [1:0xffffbbb7d470] 7657 ms: Scavenge 509.1 (517.5) -> 508.5 (518.2) MB, 2.74 / 0.00 ms (average mu = 0.174, current mu = 0.155) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffab8c2470] 3878 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.06 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffab8c2470] 3887 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.13 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffffab8c2470] 4038 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.18 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 1024 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff8d4c4470] 5769 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 215.29 / 0.00 ms (average mu = 0.682, current mu = 0.000) last resort; GC in old space requested [1:0xffff8d4c4470] 6001 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 231.40 / 0.00 ms (average mu = 0.494, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa8bd6470] 7227 ms: Scavenge 508.0 (516.5) -> 507.4 (517.0) MB, 2.45 / 0.00 ms (average mu = 0.139, current mu = 0.105) allocation failure;  [1:0xffffa8bd6470] 7233 ms: Scavenge 508.5 (517.0) -> 507.9 (517.7) MB, 2.78 / 0.00 ms (average mu = 0.139, current mu = 0.105) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffffa29ec470] 3860 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.11 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffa29ec470] 3869 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure;  [1:0xffffa29ec470] 4018 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.16 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 1024 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff908c7470] 5676 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (357.7) MB, 212.79 / 0.00 ms (average mu = 0.683, current mu = 0.000) last resort; GC in old space requested [1:0xffff908c7470] 5895 ms: Mark-Compact (reduce) 353.9 (357.7) -> 353.9 (357.7) MB, 219.08 / 0.00 ms (average mu = 0.501, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffb2254470] 7211 ms: Scavenge 507.5 (516.0) -> 506.8 (516.5) MB, 2.34 / 0.00 ms (average mu = 0.142, current mu = 0.108) allocation failure;  [1:0xffffb2254470] 7217 ms: Scavenge 508.0 (516.5) -> 507.4 (517.2) MB, 2.65 / 0.00 ms (average mu = 0.142, current mu = 0.108) allocation failure;  [1:0xffffb2254470] 7223 ms: Scavenge 508.7 (517.2) -> 508.1 (521.7) MB, 2.62 / 0.00 ms (average mu = 0.142, current mu = 0.108) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 1000000000 iterations, array_ type,  <--- Last few GCs --->  [1:0xffff95134470] 3898 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.08 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff95134470] 3907 ms: Scavenge 388.4 (393.0) -> 384.5 (393.0) MB, 0.10 / 0.00 ms (average mu = 0.998, current mu = 0.999) allocation failure;  [1:0xffff95134470] 4051 ms: Mark-Compact 962.2 (966.8) -> 575.7 (584.3) MB, 1.16 / 0.00 ms (average mu = 0.999, current mu = 0.999) allocation failure; scavenge might not succeed   <--- JS stacktrace --->  FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 1024 ram, 1000000000 iterations, map___ type,  <--- Last few GCs --->  [1:0xffff9f52a470] 5661 ms: Mark-Compact (reduce) 353.9 (365.2) -> 353.9 (358.0) MB, 215.75 / 0.00 ms (average mu = 0.676, current mu = 0.000) last resort; GC in old space requested [1:0xffff9f52a470] 5877 ms: Mark-Compact (reduce) 353.9 (358.0) -> 353.9 (357.7) MB, 215.66 / 0.00 ms (average mu = 0.498, current mu = 0.000) last resort; GC in old space requested   <--- JS stacktrace --->  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9baea470] 91815 ms: Mark-Compact (reduce) 1020.5 (1035.0) -> 1020.4 (1032.7) MB, 2293.54 / 0.00 ms (+ 1.5 ms in 1 steps since start of marking, biggest step 1.5 ms, walltime since start of marking 2299 ms) (average mu = 0.280, current mu = 0.[1:0xffff9baea470] 91819 ms: Scavenge 1021.4 (1032.7) -> 1020.9 (1035.7) MB, 1.69 / 0.00 ms (average mu = 0.280, current mu = 0.452) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 2048 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc0e85f08
0.5 cpu, 2048 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 2048 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9a488470] 19183 ms: Scavenge 1018.6 (1032.0) -> 1017.9 (1032.5) MB, 3.58 / 0.00 ms (average mu = 0.305, current mu = 0.305) allocation failure;  [1:0xffff9a488470] 19218 ms: Scavenge 1019.1 (1032.5) -> 1018.5 (1033.2) MB, 31.64 / 0.00 ms (average mu = 0.305, current mu = 0.305) allocation failure;  [1:0xffff9a488470] 19225 ms: Scavenge 1019.8 (1033.2) -> 1019.2 (1037.7) MB, 3.13 / 0.00 ms (average mu = 0.305, current mu = 0.305) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 2048 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd6a82f28
1.0 cpu, 2048 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 2048 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff91786470] 13617 ms: Scavenge 1016.2 (1029.5) -> 1015.6 (1030.0) MB, 2.72 / 0.00 ms (average mu = 0.207, current mu = 0.169) allocation failure;  [1:0xffff91786470] 13624 ms: Scavenge 1016.7 (1030.0) -> 1016.1 (1030.7) MB, 3.17 / 0.00 ms (average mu = 0.207, current mu = 0.169) allocation failure;  [1:0xffff91786470] 13631 ms: Scavenge 1017.4 (1030.7) -> 1016.8 (1035.2) MB, 3.06 / 0.00 ms (average mu = 0.207, current mu = 0.169) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 2048 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff8d6de18
2.0 cpu, 2048 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 2048 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa8fd2470] 13128 ms: Scavenge 1016.1 (1029.2) -> 1015.4 (1029.7) MB, 2.86 / 0.00 ms (average mu = 0.159, current mu = 0.123) allocation failure;  [1:0xffffa8fd2470] 13134 ms: Scavenge 1016.5 (1029.7) -> 1015.9 (1030.5) MB, 2.98 / 0.00 ms (average mu = 0.159, current mu = 0.123) allocation failure;  [1:0xffffa8fd2470] 13141 ms: Scavenge 1017.3 (1030.5) -> 1016.6 (1035.2) MB, 3.27 / 0.00 ms (average mu = 0.159, current mu = 0.123) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 2048 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdfe541c8
3.0 cpu, 2048 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 2048 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff80313470] 13071 ms: Scavenge 1016.1 (1029.5) -> 1015.4 (1030.0) MB, 2.80 / 0.00 ms (average mu = 0.153, current mu = 0.112) allocation failure;  [1:0xffff80313470] 13077 ms: Scavenge 1016.6 (1030.0) -> 1016.0 (1030.7) MB, 2.91 / 0.00 ms (average mu = 0.153, current mu = 0.112) allocation failure;  [1:0xffff80313470] 13084 ms: Scavenge 1017.3 (1030.7) -> 1016.7 (1035.2) MB, 3.31 / 0.00 ms (average mu = 0.153, current mu = 0.112) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 2048 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc671b888
4.0 cpu, 2048 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 4096 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8049a470] 132873 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 4.06 / 0.00 ms (average mu = 0.301, current mu = 0.470) allocation failure;  [1:0xffff8049a470] 132972 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 6.95 / 0.00 ms (average mu = 0.301, current mu = 0.470) allocation failure;  [1:0xffff8049a470] 132984 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 6.56 / 0.00 ms (average mu = 0.301, current mu = 0.470) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 4096 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe4c0c8e8
0.5 cpu, 4096 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 4096 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffbb2e0470] 36141 ms: Scavenge 2042.6 (2065.4) -> 2041.9 (2065.9) MB, 3.89 / 0.00 ms (average mu = 0.333, current mu = 0.332) allocation failure;  [1:0xffffbb2e0470] 36148 ms: Scavenge 2043.1 (2065.9) -> 2042.5 (2066.7) MB, 4.14 / 0.00 ms (average mu = 0.333, current mu = 0.332) allocation failure;  [1:0xffffbb2e0470] 36192 ms: Scavenge 2043.8 (2066.7) -> 2043.2 (2071.2) MB, 4.45 / 0.00 ms (average mu = 0.333, current mu = 0.332) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 4096 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff8ea86b8
1.0 cpu, 4096 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 4096 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8d39b470] 26133 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 4.36 / 0.00 ms (average mu = 0.187, current mu = 0.162) allocation failure;  [1:0xffff8d39b470] 26141 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 4.00 / 0.00 ms (average mu = 0.187, current mu = 0.162) allocation failure;  [1:0xffff8d39b470] 26148 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 4.05 / 0.00 ms (average mu = 0.187, current mu = 0.162) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 4096 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe4968cd8
2.0 cpu, 4096 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 4096 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff8af2a470] 25765 ms: Scavenge 2042.8 (2065.7) -> 2042.1 (2066.2) MB, 3.59 / 0.00 ms (average mu = 0.137, current mu = 0.106) allocation failure;  [1:0xffff8af2a470] 25772 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.31 / 0.00 ms (average mu = 0.137, current mu = 0.106) allocation failure;  [1:0xffff8af2a470] 25780 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.10 / 0.00 ms (average mu = 0.137, current mu = 0.106) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 4096 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcf155a28
3.0 cpu, 4096 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 4096 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff9ec0a470] 25221 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 3.85 / 0.00 ms (average mu = 0.129, current mu = 0.097) allocation failure;  [1:0xffff9ec0a470] 25228 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 4.15 / 0.00 ms (average mu = 0.129, current mu = 0.097) allocation failure;  [1:0xffff9ec0a470] 25236 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 4.07 / 0.00 ms (average mu = 0.129, current mu = 0.097) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 4096 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdf337608
4.0 cpu, 4096 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 8192 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffa669f470] 88104 ms: Scavenge 2032.3 (2056.9) -> 2030.8 (2057.7) MB, 7.50 / 0.00 ms (average mu = 0.382, current mu = 0.373) allocation failure;  [1:0xffffa669f470] 88212 ms: Scavenge 2033.0 (2057.7) -> 2031.8 (2059.2) MB, 99.36 / 0.00 ms (average mu = 0.382, current mu = 0.373) allocation failure;  [1:0xffffa669f470] 88395 ms: Scavenge 2034.6 (2059.2) -> 2033.2 (2068.4) MB, 94.00 / 0.00 ms (average mu = 0.382, current mu = 0.373) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
0.5 cpu, 8192 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe109fbb8
0.5 cpu, 8192 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 8192 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffffaf043470] 45183 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 4.67 / 0.00 ms (average mu = 0.268, current mu = 0.274) allocation failure;  [1:0xffffaf043470] 45193 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 5.65 / 0.00 ms (average mu = 0.268, current mu = 0.274) allocation failure;  [1:0xffffaf043470] 45203 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 5.39 / 0.00 ms (average mu = 0.268, current mu = 0.274) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
1.0 cpu, 8192 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd55df918
1.0 cpu, 8192 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 8192 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff897b1470] 34634 ms: Scavenge 2042.7 (2065.4) -> 2042.0 (2065.9) MB, 5.72 / 0.00 ms (average mu = 0.183, current mu = 0.167) allocation failure;  [1:0xffff897b1470] 34644 ms: Scavenge 2043.2 (2065.9) -> 2042.6 (2066.7) MB, 5.08 / 0.00 ms (average mu = 0.183, current mu = 0.167) allocation failure;  [1:0xffff897b1470] 34653 ms: Scavenge 2043.9 (2066.7) -> 2043.3 (2071.4) MB, 5.11 / 0.00 ms (average mu = 0.183, current mu = 0.167) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
2.0 cpu, 8192 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffcec8a018
2.0 cpu, 8192 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 8192 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff99ff9470] 34042 ms: Scavenge 2042.8 (2065.7) -> 2042.2 (2066.2) MB, 4.67 / 0.00 ms (average mu = 0.139, current mu = 0.112) allocation failure;  [1:0xffff99ff9470] 34051 ms: Scavenge 2043.3 (2066.2) -> 2042.7 (2066.9) MB, 5.08 / 0.00 ms (average mu = 0.139, current mu = 0.112) allocation failure;  [1:0xffff99ff9470] 34061 ms: Scavenge 2044.0 (2066.9) -> 2043.4 (2071.4) MB, 5.07 / 0.00 ms (average mu = 0.139, current mu = 0.112) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
3.0 cpu, 8192 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xfffff04e3a98
3.0 cpu, 8192 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 8192 ram, 1000000000 iterations, object type,  <--- Last few GCs --->  [1:0xffff7f8c4470] 33315 ms: Scavenge 2042.9 (2065.7) -> 2042.2 (2066.2) MB, 10.20 / 0.00 ms (average mu = 0.120, current mu = 0.089) allocation failure;  [1:0xffff7f8c4470] 33334 ms: Scavenge 2043.4 (2066.2) -> 2042.8 (2066.9) MB, 14.79 / 0.00 ms (average mu = 0.120, current mu = 0.089) allocation failure;  [1:0xffff7f8c4470] 33345 ms: Scavenge 2044.1 (2066.9) -> 2043.4 (2071.4) MB, 5.38 / 0.00 ms (average mu = 0.120, current mu = 0.089) allocation failure;    <--- JS stacktrace --->  FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
4.0 cpu, 8192 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc16d26d8
4.0 cpu, 8192 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 1000000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
0.5 cpu, 16384 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffc3167398
0.5 cpu, 16384 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 1000000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
1.0 cpu, 16384 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffe7a683d8
1.0 cpu, 16384 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 1000000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
2.0 cpu, 16384 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd9fb85a8
2.0 cpu, 16384 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 1000000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
3.0 cpu, 16384 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffd8701e78
3.0 cpu, 16384 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 1000000000 iterations, object type, /app/index.js:32 myMap[index] = random; ^  RangeError: Invalid array length at runObject [90m(/app/[39mindex.js:32:18[90m)[39m at main [90m(/app/[39mindex.js:4:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
4.0 cpu, 16384 ram, 1000000000 iterations, array_ type,   # # Fatal error in , line 0 # Fatal JavaScript invalid size error 169220804 (see crbug.com/1201626) # # # #FailureMessage Object: 0xffffdfa07a08
4.0 cpu, 16384 ram, 1000000000 iterations, map___ type, /app/index.js:55 myMap.set(index, random); ^  RangeError: Map maximum size exceeded at Map.set (<anonymous>) at runMap [90m(/app/[39mindex.js:55:11[90m)[39m at main [90m(/app/[39mindex.js:7:7[90m)[39m at Object.<anonymous> [90m(/app/[39mindex.js:18:1[90m)[39m [90m at Module._compile (node:internal/modules/cjs/loader:1233:14)[39m [90m at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)[39m [90m at Module.load (node:internal/modules/cjs/loader:1091:32)[39m [90m at Module._load (node:internal/modules/cjs/loader:938:12)[39m [90m at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m [90m at node:internal/main/run_main_module:23:47[39m  Node.js v20.5.0
